<?xml version="1.0"?>
<?xml-stylesheet type="text/xsl" href="..\transformspp2html.xsl"?>
<?xml-model href="https://raw.githubusercontent.com/commoncriteria/transforms/master/schemas/CCProtectionProfile.rng" type="application/xml" schematypens="http://relaxng.org/ns/structure/1.0"?>
<Module name="Virtual Private Network (VPN) Clients" boilerplate="yes" target-product="VPN client" target-products="VPN clients" xmlns="https://niap-ccevs.org/cc/v1" xmlns:h="http://www.w3.org/1999/xhtml" xmlns:sec="https://niap-ccevs.org/cc/v1/section">
  <PPReference>
    <ReferenceTable>
      <PPVersion>2.6</PPVersion>
      <PPAuthor>National Information Assurance Partnership</PPAuthor>
      <PPPubDate>2025-01-31</PPPubDate>
      <Keywords>VPN, VPN Client</Keywords>
    </ReferenceTable>
  </PPReference>
  <RevisionHistory>
    <entry>
      <version>2.6</version>
      <date>2025-01-31</date>
      <subject>CC:2022 conversion, limitation of cryptographic algorithms to CNSA 1.0, incorporation of TDs<h:br/></subject>
    </entry>
    <entry>
      <version>2.5</version>
      <date>2024-06-24</date>
      <subject>Incorporation of TC feedback: <h:ul><h:li>Incorporation of TDs: 0662, 0672, 0690, 0697, 0711, 0725, 0753, 0788</h:li> <h:li>Corrections to Base-PP references</h:li> <h:li>Definition of auditable events for Additional SFRs</h:li> <h:li>Explicit association of evaluation activities with components and elements</h:li></h:ul></subject>
    </entry>
    <entry>
      <version>2.4</version>
      <date>2022-03-31</date>
      <subject>Incorporation of TC feedback</subject>
    </entry>
    <entry>
      <version>2.3</version>
      <date>2021-08-10</date>
      <subject>Support for MDF, Bluetooth updates</subject>
    </entry>
    <entry>
      <version>2.2</version>
      <date>2021-01-05</date>
      <subject>Update release</subject>
    </entry>
    <entry>
      <version>2.1</version>
      <date>2019-11-14</date>
      <subject>Initial Release</subject>
    </entry>
  </RevisionHistory>
  <include-pkg id="pkg-ssh">
    <git>
      <url>https://github.com/commoncriteria/ssh</url>
      <branch>master</branch>
    </git>
    <url>https://www.niap-ccevs.org/protectionprofiles/515</url>
  </include-pkg>
  <include-pkg id="pkg-tls">
    <git>
      <url>https://github.com/commoncriteria/tls</url>
      <branch>release-2.0</branch>
    </git>
    <url>https://www.niap-ccevs.org/protectionprofiles/465</url>
    <depends on="fcs-eap-ext-1"/>
  </include-pkg>
  <include-pkg id="pkg-x509">
    <git>
      <url>https://github.com/commoncriteria/X509</url>
      <branch>master</branch>
    </git>
    <url>https://www.niap-ccevs.org/protectionprofiles/511</url>
  </include-pkg>
  <pp-preferences/>
  <sec:Introduction >
    <sec:Overview><comment>FIA_X509_EXT references to the Base-PPs are now removed and where appropriate the X.509 package is referenced instead. However, it's unclear whether there is still sufficient mechanism to actually 'force' the X.509 SFRs to be included. That is to say, there is nothing in here that says "because IPsec functionality is dependent on X.509 validation, and because the Base-PPs conform to the X.509 FP, the ST shall make the relevant X.509 FP claims." </comment> 
      
      The scope of this Protection Profile Module (PP-Module) is to describe the security functionality of a virtual private network (VPN)
      client in terms of  <xref g="CC"/> and to define functional and assurance requirements for such
      products. This PP-Module is intended for use with the following Base-PPs:

      <h:ul><h:li>Protection Profile for General Purpose Operating Systems (GPOS PP), Version 4.3</h:li> <h:li>Protection Profile for Mobile Device Fundamentals (MDF PP), Version 3.3</h:li> <h:li>Protection Profile for Application Software (App PP), Version 2.0</h:li> <h:li>Protection Profile for Mobile Device Management (MDM PP), Version 4.0</h:li></h:ul>

      These Base-PPs are all valid because a VPN client may be a specific type of stand-alone software
      application or a built-in component of an operating system (OS), whether desktop or mobile. Regardless of
      which Base-PP is claimed, the VPN client functionality defined by this PP-Module will rely on the Base-PP.
      Sections 5.1 through 5.4 of this PP-Module describe the relevant functionality for each Base-PP,
      including specific selections and assignments, or inclusion of optional requirements that must be made as
      needed to support the VPN client functionality.
     </sec:Overview>
    <tech-terms>
      <term full="Administrator">
        A user that has administrative privilege to configure the TOE in privileged
        mode. </term>
      <term full="Authorized">
        An entity granted access privileges to an object, system, or system entity.
      </term>
      <term full="Critical Security Parameter" abbr="CSP">
        Security related information such as secret and private cryptographic keys, and
        authentication data such as passwords and PINs, whose disclosure or
        modification can compromise the security of a cryptographic module. </term>
      <term full="Entropy Source">
        This cryptographic function provides a seed for a random number generator
        by accumulating the outputs from one or more noise sources. The
        functionality includes a measure of the minimum work required to guess a
        given output and tests to ensure that the noise sources are operating
        properly.
      </term>
      <term full="IT Environment">
        Hardware and software that are outside the TOE boundary that support the
        TOE functionality and security policy. </term>
      <term full="Private Network">
        A network that is protected from access by unauthorized users or entities.
      </term>
      <term full="Privileged Mode">
        A TOE operational mode that allows a user to perform functions that require
        IT environment administrator privileges.
      </term>
      <term full="Public Network">
        A network that is visible to all users and entities and does not protect against
        unauthorized access (e.g. internet).
      </term>
      <term full="Threat Agent">
        An entity that tries to harm an information system through destruction,
        disclosure, modification of data, or denial of service.</term>
      <term full="Unauthorized User">
        An entity (device or user) that has not been authorized by an authorized
        administrator to access the TOE or private network.
      </term>
      <term full="Unprivileged Mode">
        A TOE operational mode that only provides VPN client functions for the VPN
        client user. </term>
      <term full="VPN Client">
        The TOE; allows remote users to use client computers to establish an
        encrypted IPsec tunnel across an unprotected public network to a private
        network.
      </term>
      <term full="VPN Client User">
        A user operating the TOE in unprivileged mode.</term>
      <term full="VPN Gateway">
        A component that performs encryption and decryption of IP packets as they
        cross the boundary between a private network and a public network. </term>
      <term full="Advanced Encryption Standard" abbr="AES"/>
      <term full="Certificate Revocation List" abbr="CRL"/>
      <term full="Diffie-Hellman" abbr="DH"/>
      <term full="Distinguished Name" abbr="DN"/>
      <term full="Digital Signature Standard" abbr="DSS"/>
      <term full="Elliptic Curve Cryptography" abbr="ECC"/>
      <term full="Encapsulating Security Protocol" abbr="ESP"/>
      <term full="End-User Device" abbr="EUD"/>
      <term full="Finite Field Cryptography" abbr="FFC"/>
      <term full="Federal Information Processing Standards" abbr="FIPS"/>
      <term full="Fully Qualified Domain Name" abbr="FQDN"/>
      <term full="Operating System (OS)" abbr="OS"/>
      <term full="Internet Key Exchange" abbr="IKE"/>
      <term full="Internet Protocol" abbr="IP"/>
      <term full="Information Technology" abbr="IT"/>
      <term full="Mobile Device  (MD)" abbr="MD"/>
      <term full="Network Address Translation" abbr="NAT"/>
      <term full="National Institute of Standards and Technology" abbr="NIST"/>
      <term full="Online Certificate Status Protocol" abbr="OCSP"/>
      <term full="Organizational Security Policy" abbr="OSP"/>
      <term full="Publication" abbr="PUB"/>
      <term full="Random Bit Generation" abbr="RBG"/>
      <term full="Request For Comment" abbr="RFC"/>
      <term full="Security Association" abbr="SA"/>
      <term full="Supporting Document" abbr="SD"/>
      <term full="Secure Hash Algorithm" abbr="SHA"/>
      <term full="Security Policy Database" abbr="SPD"/>
      <term full="Virtual Private Network" abbr="VPN"/>
    </tech-terms>
    <section title="Compliant Targets of Evaluation" id="TOEdescription">
      
      The TOE defined by this PP-Module is the VPN client, a software application that runs on a physical or
      virtual host platform, used to establish a secure IPsec connection between that host platform and a
      remote system. The VPN client is intended to be located outside or inside of a private network, and
      establishes a secure tunnel to an IPsec peer. For the purposes of this PP-Module, IPsec peers are defined
      as:

      <h:ul><h:li>VPN gateways</h:li> <h:li>Other VPN clients</h:li> <h:li>An IPsec-capable network device (supporting IPsec for the purposes of management)</h:li></h:ul>

      The tunnel provides confidentiality, integrity, and data authentication for information that travels across
      a less trusted (sometimes public) network. All VPN clients that comply with this document will support
      IPsec.<h:br/><h:br/>

      This PP-Module extends the GPOS PP when the VPN client is installed on an OS discussed
      in that PP (e.g., Windows, Mac OS, Linux). This PP-Module extends the MDF PP when the VPN client is
      installed on a self-contained mobile device that is bundled with an OS (e.g. Android,
      BlackBerry OS, iOS, Windows Mobile). This PP-Module extends the App PP when the VPN client is
      provided by a third party and is a standalone application that is not a bundled part of an OS
      or mobile device. This PP-Module extends the MDM PP when the VPN client is included with
      MDM server software that is used for centralized deployment and administration of enterprise mobile
      device policies.  <h:br/><h:br/>

      As a PP-Module of any of these PPs, it is expected that the content of this PP-Module and the chosen
      Base-PP be appropriately combined in the context of each product-specific ST. This PP-Module has been specifically defined such that there should be no difficulty or ambiguity in doing so.
      When this PP-Module is used, conformant TOEs are obligated to implement the functionality required in
      the claimed Base-PP with the additional functionality defined in this PP-Module in response to the
      threat environment discussed in this PP-Module.

      
      <sec:TOE_Boundary>
      The TOE defined by this PP-Module is purely a software solution executing on a platform (some sort of
      OS running on hardware). Depending on the Base-PP claimed as part of the TOE, the
      platform may also be part of the TOE or it may be an environmental component that the TOE vendor has
      no control over. Regardless of whether the platform itself is within the scope of the evaluation, the VPN
      client itself will rely on the platform for its execution domain and proper usage. The vendor is expected
      to provide sufficient installation and configuration instructions to identify an Operational Environment (OE)
      with the necessary features and to provide instructions for how to configure it correctly.<h:br/><h:br/>

      The PP-Module contains requirements that must be met by the TOE. Depending on the Base-PP that is
      claimed, there may be some variation in the applicable requirements. This is because a given Base-PP
      may include one or more requirements that the VPN client can inherit but are not shared between each
      possible Base-PP.<h:br/><h:br/>

      This is somewhat different than other PPs, but addresses most implementations of VPN clients where
      some part of the functionality of the IPsec tunnel is provided by the platform. In terms of the
      cryptographic primitives (random bit generation, encryption and decryption, key generation, etc.) it is
      actually desirable that a well-tested implementation in the platform is used rather than trying to
      implement these functions in each client.<h:br/><h:br/>

      Requirements that can be satisfied by either the TOE or the platform are identified in Section 5 by text
      such as “The [selection: TSF, TOE platform] shall…” The ST author will make the appropriate selection
      based on where that element is implemented. It is allowable for some elements in a component to be 
      implemented by the TOE, while other elements in that same component be implemented by the
      platform (requirements on the usage of X.509 certificates is an example of where this might be the case,
      where using the information contained in the certificates and the implementation of revocation
      checking may be done by the TOE, but storage and protection of the certificates may be done by the
      platform). Note that in the cases where this PP-Module is used to extend the GPOS PP or MDF PP, the
      TOE includes both the VPN client and the platform. In this case, it is appropriate to indicate that the TOE
      satisfies this requirement. However, the ST author should make it clear, for each of these components,
      which are implemented by the VPN client portion of the TOE versus the platform portion.<h:br/><h:br/>

A Supporting Document (SD) accompanies this PP-Module and contains guidance for how to evaluate the
requirements defined by the PP-Module, expressed as Evaluation Activities (EAs). EAs will differ
      based on where the function that meets the requirement is implemented. In most cases, requirements
      implemented by the platform will require that the evaluator examine documents pertaining to the
      platform (generally the ST), while requirements implemented by the TOE may require examination of
      the TSS, examination of the Operational Guidance, or execution of evaluator testing. For
      requirements implemented by the platform, there may also be requirements where the evaluator must
      examine the interfaces used by the TOE to access these functions on the platform. This ensures that the
      functionality being invoked to satisfy the requirements of this PP-Module is the same functionality that
      was evaluated.<h:br/><h:br/>

      Given the degree of coupling between a VPN client and its underlying platform, it is expected that the
      client will be tested on each platform claimed in the ST. In cases where the platforms are simply
      different versions of the same OS (provided by the same platform vendor), an equivalency
      argument may be made in lieu of testing on each version. The argument would have to demonstrate
      that the client interacts in exactly the same way with the versions of the OS (i.e., the same APIs are used
      with the same parameters, the network stack is modified with exactly the same kernel modules). The
      evaluator shall use the operational guidance to configure the TOE and underlying platform.<h:br/><h:br/>

      A TOE that conforms to this PP-Module will implement the Internet Engineering Task Force (IETF)
      IPsec Security Architecture for the Internet Protocol, RFC 4301, as well as
      the IPsec Encapsulating Security Payload (ESP) protocol. IPsec ESP is specified in RFC 2406 and RFC 4303.
      The IPsec VPN client will support ESP in either tunnel mode, transport mode, or both.  <h:br/><h:br/>

      The IPsec VPN client will use the Internet Key Exchange (IKE)v1 protocol, IKEv2, or both. IKEv1 is
      implemented as defined in RFCs 2407, 2408, 2409, and 4109, and IKEv2 is implemented as specified in RFC
      7296 and 4307 to authenticate
      and establish session keys with the VPN entities. The IKEv2 implementation also requires mandatory support for network address translation (NAT)
      traversal as specified in section 2.23 of RFC 7296. 
        <h:br/><h:br/>

      To show that the TSF implements the RFCs correctly, the evaluator shall perform the EAs
      documented in the SD that accompanies this PP-Module. In future versions of this
      PP-Module, EAs may be modified or new ones may be introduced that cover more aspects of RFC compliance
      than what is currently described in this publication.<h:br/><h:br/>

      The IPsec VPN client enables encryption of all information that flows between itself and its IPsec peer.
      The VPN client serves as an endpoint for an IPsec VPN connection and performs a number of
      cryptographic functions related to establishing and maintaining that connection. If the cryptography
      used to perform endpoint authentication, generate keys, and encrypt information is sufficiently robust
      and the implementation has no critical design mistakes, an adversary will be unable to exhaust the
      encryption key space to obtain the data. Compliance with IPsec standards, use of a properly seeded
      Random Bit Generator (RBG), and secure authentication factors will ensure that access to the 
      transmitted information cannot be obtained with less work than a full exhaust of the key space. Any
      plaintext secret and private keys or other cryptographic security parameters will be zeroized when no
      longer in use to prevent disclosure of security critical data.
      </sec:TOE_Boundary>
    </section>
    <sec:Use_Cases>
      
      A VPN client allows users on the TOE platform to establish secure IPsec communications, providing
      confidentiality, integrity, and protection of data, across a less trusted network to secure data in
      transit. This PP-Module defines three use cases for VPN clients. A conformant TOE will implement one or
      more of the use cases specified below.<h:br/><h:br/>
      <usecases>
        <usecase title="TOE to VPN Gateway" id="usecase1">
          <description>A VPN client allows users on the TOE platform to establish an encrypted IPsec tunnel across a
            less trusted, often unprotected, public network to a private network (see <xref to="fig-usecase1"/>). In this case,
            the TOE provides encryption and decryption of network packets as they leave and arrive on the VPN client’s
            underlying platform. IP packets crossing from the private network to the public network will be
            encrypted if their destination is a remote access VPN client supporting the same VPN policy as
            the source network. <h:br/><h:br/>
            The TOE is responsible for encrypting the packets that are intended to be received by the target
            on the private network and then encapsulating these packets in a way that allows the VPN
            gateway to securely receive them and forward them to their final destination.
            <figure entity="images/usecase1.png" title="TOE to VPN Gateway" id="fig-usecase1"/></description>
        </usecase>
        <usecase title="TOE to VPN Client" id="usecase2">
          <description>A VPN client may additionally or alternatively allow a client computer to connect directly to
              another computer running a VPN client (see <xref to="fig-usecase2"/>). In this case, the functionality of the VPN
              client is to connect directly to another endpoint system to facilitate point-to-point communications with that system.<h:br/><h:br/>
              IPsec transport mode is used for end-to-end communications. In this use case, the content of
              the packet data (payload) is encrypted but the original IP header is preserved. Inherent to this
              use case, when two peers are communicating directly, is the disclosure of the
              source and destination of the packets. Users should take into consideration any security risks
              associated with this disclosure when architecting their networks in line with this use case.
              <figure entity="images/usecase2.png" title="TOE to VPN Client" id="fig-usecase2"/></description>
        </usecase>
        <usecase title="TOE to IPsec-Capable Network Device" id="usecase3">
          <description>Similar to Use Case 2 above, a VPN client TOE can also be used to establish a secure connection
            to an IPsec-capable network device using IPsec, similar to how an SSH connection might be used. In this case,
            where a network device is being managed remotely over an IPsec connection, the network
            device itself must contain IPsec functionality to act as the peer for the connection (see <xref to="fig-usecase3"/>).
            <h:br/><h:br/>
            While this will behave functionally the same way as the scenario described by Use Case 2, the
            user of the TOE in Use Case 3 is a network administrator who is assumed to have administrative
            access to the network device they are connecting to.
            <figure entity="images/usecase3.png" title="TOE to IPsec-Capable Network Device" id="fig-usecase3"/></description>
        </usecase>
      </usecases>
    </sec:Use_Cases>
    <section title="Requirements Focus" id="rfocus">
      Regardless of the specific usage of the TOE, the focus of the Security Functional Requirements (SFRs) in this PP-Module
      is on the following fundamental aspects of a VPN client.
      <h:ul><h:li>Authentication of the IPsec peer</h:li> <h:li>Cryptographic protection of data in transit</h:li> <h:li>Implementation of services</h:li></h:ul>

      A VPN client can establish VPN connectivity to either a VPN gateway with traffic bound for a remote
      endpoint in the private network that is protected by the VPN gateway (Use Case 1), to a VPN client peer
      residing on a remote endpoint in the same network as the TOE (Use Case 2), or to a network device
      with IPsec capability for the purposes of managing that device (Use Case 3). In the first case, the entire
      IP packet is encapsulated and a new header is applied so that the gateway can route the packet to its 
      intended destination. This is known as tunnel mode. In the latter two cases, the original IP header is
      preserved and only the payload is encrypted. This is known as transport mode.<h:br/><h:br/>

      Beyond the implementation differences specified by these use cases, the remaining security
      functionality is expected to be implemented by all VPN clients, regardless of whether it supports one or
      more of the use cases. Regardless of the intended use case, VPN endpoints authenticate each other to
      ensure they are communicating with an authorized external IT entity. Authentication of IPsec peers is
      performed as part of the Internet Key Exchange (IKE) negotiation. The IKE negotiation uses a pre-existing
      public key infrastructure for authentication and can optionally use a pre-shared key. When IKE
      completes, an IPsec tunnel secured with Encapsulating Security Payload (ESP) is established.<h:br/><h:br/>
	  
      It is assumed that the VPN client is implemented properly and contains no critical design mistakes. The
      VPN client relies on the system or device on which it is installed for its proper execution. The vendor is
      required to provide configuration guidance (AGD_PRE, AGD_OPE) to correctly install and administer the
      client machine and the TOE for every OE supported.
    </section>
  </sec:Introduction>
  <sec:Conformance_Claims  boilerplate="no">
    <CClaimsInfo cc-version="cc-2022r1" cc-approach="direct-rationale">
      <cc-st-conf>exact</cc-st-conf>
      <cc-pt2-conf>extended</cc-pt2-conf>
      <cc-pt3-conf>extended</cc-pt3-conf>
      <cc-pp-conf/>
      <cc-pp-config-with>
        <PP-cc-ref>Protection Profile for General Purpose Operating Systems, Version 4.3</PP-cc-ref>
        <PP-cc-ref>Protection Profile for Mobile Device Fundamentals, Version 3.3</PP-cc-ref>
        <PP-cc-ref>Protection Profile for Mobile Device Management, Version 4.0</PP-cc-ref>
        <PP-cc-ref>Protection Profile for Application Software, Version 2.0</PP-cc-ref>
        <Mod-cc-ref>cPP-Module for Wireless LAN Clients, version 1.1</Mod-cc-ref>
        <Mod-cc-ref>PP-Module for Bluetooth, version 1.1</Mod-cc-ref>
        <Mod-cc-ref>PP-Module for Mobile Device Management Agent, version 1.2</Mod-cc-ref>
        <Mod-cc-ref>cPP-Module for Biometric Enrolment and Verification, version 1.1</Mod-cc-ref>
      </cc-pp-config-with>
      <cc-pkg-claim>
        <AP-cc-ref conf="conformant">Assurance Package for Flaw Remediation Version 1.0</AP-cc-ref>
        <FP-cc-ref conf="conformant">Functional Package for Transport Layer Security Version 2.1</FP-cc-ref>
        <FP-cc-ref conf="conformant">Functional Package for X.509 Version 1.0</FP-cc-ref>
      </cc-pkg-claim>
    </CClaimsInfo>
  </sec:Conformance_Claims>
  <!-- 3.0 Security Problem Definition-->
  <sec:Security_Problem_Definition >
    
    The security problem is described in terms of the threats that the TOE is expected to address,
assumptions about its OE, and any organizational security policies that the TOE is
expected to enforce.<h:br/><h:br/>
    This PP-Module is written to address the situation in which a user accesses a private network (e.g. the
    user’s office network) or terminal endpoint (e.g. a network device) using a less trusted network (such as
    a public Wi-Fi network or local area network). Protection of network packets is desired as they traverse
    a public network. To protect the data in transit from disclosure and modification, a VPN is created to
    establish secure communications. The VPN client provides one end of the secure VPN tunnel and
    performs encryption and decryption of network packets in accordance with a VPN security policy
    negotiated between the VPN client (TOE) and its IPsec peer.<h:br/><h:br/>
    The proper installation and configuration of the VPN client is critical to its correct operation such that
    proper handling of the TOE by an administrator is also addressed.<h:br/><h:br/>
    Note that as a PP-Module, all threats, assumptions, and organizational security policies (OSPs) defined in the Base-PP will also apply to a
    TOE unless otherwise specified, depending on which of the Base-PPs it extends. The SFRs
    defined in this PP-Module will mitigate the threats that are defined in the PP-Module but
    may also mitigate some threats defined in the Base-PPs in more comprehensive detail due to the
    specific capabilities provided by a VPN client.
    
    
    <!-- 3.1 Threats -->
    <sec:Threats>
      The following threats defined in this PP-Module extend the threats defined by the Base-PPs.
      <threats><threat name="T.TSF_CONFIGURATION"><description> Configuring VPN tunnels is a complex and time-consuming process, and prone to errors if the            interface for doing so is not well-specified or well-behaved. The inability or failure of an ignorant or careless administrator to configure certain aspects            of the interface may also lead to the incorrect specification of the desired communications policy or use            of cryptography that may be desired or required for a particular site. This may result in unintended            weak or plaintext communications while the user thinks that their data are being protected. Other            aspects of configuring the TOE or using its security mechanisms (for example, the update process)            may also result in a reduction in the trustworthiness of the VPN client.</description><!-- New mapping to build updated threat mapping table. --><addressed-by>FMT_SMF.1/VPN</addressed-by><rationale>This SFR mitigates the threat by requiring the TOE
            to implement certain administratively-configurable functions.</rationale><addressed-by>FPT_TST_EXT.1/VPN</addressed-by><rationale>This SFR mitigates the threat by requiring the TOE
            to execute self-tests that demonstrate that its integrity is maintained.</rationale></threat><threat name="T.TSF_FAILURE"><description> Security mechanisms of the TOE generally build up from a primitive set of mechanisms (e.g.,            memory management, privileged modes of process execution) to more complex sets of            mechanisms. Failure of the primitive mechanisms could lead to a compromise in more complex            mechanisms, resulting in a compromise of the TSF.          </description><!-- New mapping to build updated threat mapping table. --><addressed-by>FPT_TST_EXT.1/VPN</addressed-by><rationale>This SFR mitigates the threat by requiring the TOE
            to execute self-tests that demonstrate that its integrity is maintained.</rationale></threat><threat name="T.UNAUTHORIZED_ACCESS"><description>This PP-Module does not include requirements that can protect against an insider threat. Authorized            users are not considered hostile or malicious and are trusted to follow appropriate guidance. Only            authorized personnel should have access to the system or device that contains the IPsec VPN client.            Therefore, the primary threat agents are the unauthorized entities that try to gain access to the            protected network (in cases where tunnel mode is used) or to plaintext data that traverses the            public network (regardless of whether transport mode or tunnel mode is used). <h:br/><h:br/>            The endpoint of the network communication can be both geographically and logically distant from            the TOE and can pass through a variety of other systems. These intermediate systems may be under            the control of the adversary, and offer an opportunity for communications over the network to be            compromised. <h:br/><h:br/>            Plaintext communication over the network may allow critical data (such as passwords, configuration            settings, and user data) to be read or manipulated directly by a malicious user or process on intermediate systems, leading to            a compromise of the TOE or to the secured environmental systems that the TOE is being used to            facilitate communications with. IPsec can be used to provide protection for this communication;            however, there are numerous options that can be implemented for the protocol to be compliant to the            protocol specification listed in the RFC. Some of these options can have negative impacts on the            security of the connection. For instance, using a weak encryption algorithm (even one that is            allowed by the RFC, such as DES) can allow an adversary to read and even manipulate the data on            the encrypted channel, thus circumventing countermeasures in place to prevent such attacks.            Further, if the protocol is implemented with little-used or non-standard options, it may be compliant             with the protocol specification, but will not be able to interact with other diverse equipment that is            typically found in large enterprises. <h:br/><h:br/>            Even though the communication path is protected, there is a possibility that the IPsec peer could be            tricked into thinking that a malicious third-party user or system is the TOE. For instance, a            middleman could intercept a connection request to the TOE and respond to the request as if it were            the TOE. In a similar manner, the TOE could also be tricked into thinking that it is establishing            communications with a legitimate IPsec peer when in fact it is not. An attacker could also mount a            malicious man-in-the-middle-type of attack, in which an intermediate system is compromised, and            the traffic is proxied, examined, and modified by this system. This attack can even be mounted via            encrypted communication channels if appropriate countermeasures are not applied. These attacks            are, in part, enabled by a malicious attacker capturing network traffic (for instance, an            authentication session) and “playing back” that traffic in order to fool an endpoint into thinking it            was communicating with a legitimate remote entity.</description><!-- New mapping to build updated threat mapping table. --><addressed-by>FCS_EAP_EXT.1 (selection-based)</addressed-by><rationale>This SFR mitigates the threat by optionally implementing EAP-TLS or EAP-TTLS as a mechanism for authentication.</rationale><addressed-by>FCS_IPSEC_EXT.1</addressed-by><rationale>This SFR mitigates the threat by requiring the
            TOE’s implementation of IPsec to include requirements for how the remote VPN gateway or
            peer is authenticated.</rationale><addressed-by>FIA_BMA_EXT.1 (optional)</addressed-by><rationale>This SFR mitigates the threat by optionally defining the TOE's support for a platform-based biometric mechanism to use as an authentication mechanism.</rationale><addressed-by>FIA_PSK_EXT.1 (selection-based)</addressed-by><rationale>This SFR mitigates the threat by optionally
            requiring support for pre-shared keys as an alternate authentication method for IPsec.</rationale><addressed-by>FIA_PSK_EXT.2 (selection-based)</addressed-by><rationale>This SFR mitigates the threat by optionally specifying whether the TOE generates its own pre-shared keys used for authentication or accept them from an external source.</rationale><addressed-by>FIA_PSK_EXT.3 (selection-based)</addressed-by><rationale>This SFR mitigates the threat by optionally defining the composition and use of password-based pre-shared keys used for authentication.</rationale><addressed-by>FIA_PSK_EXT.4 (selection-based)</addressed-by><rationale>This SFR mitigates the threat by optionally
            defining HOTP as an authentication mechanism.</rationale><addressed-by>FIA_PSK_EXT.5 (selection-based)</addressed-by><rationale>This SFR mitigates the threat by optionally
            defining TOTP as an authentication mechanism.</rationale><addressed-by>FPF_MFA_EXT.1 (optional)</addressed-by><rationale>This SFR mitigates the threat by optionally enforcing a multifactor authentication requirement on an IPsec connection.</rationale></threat><threat name="T.USER_DATA_REUSE"><description>Data traversing the TOE could inadvertently be sent to a different user as a consequence of a poorly-designed TOE; since these data may be            sensitive, this may cause a compromise that is unacceptable. The specific threat that must be            addressed concerns user data that is retained by the TOE in the course of processing network traffic            that could be inadvertently reused in sending network traffic to a user other than that intended by            the sender of the original network traffic.          </description><!-- New mapping to build updated threat mapping table. --><addressed-by>FDP_RIP.2</addressed-by><rationale>This SFR mitigates the threat by requiring the TOE or its platform to ensure that
            residual data is purged from the system.</rationale><addressed-by>FPF_MFA_EXT.1 (optional)</addressed-by><rationale>This SFR mitigates the threat by optionally
            requiring the TOE to prohibit transmission of packet data aside from those packets needed to perform multifactor authentication.</rationale></threat></threats></sec:Threats>
    <!-- 3.2 Assumptions -->
    <sec:Assumptions>
      <assumptions>
        <assumption name="A.NO_TOE_BYPASS">
          <description>Information cannot flow onto the network to which the VPN client's host is connected without
            passing through the TOE.
          </description>
          <objective-refer ref="OE.NO_TOE_BYPASS">
            <rationale>This assumption is satisfied by the environmental objective that ensures
              network routes do not exist that allow traffic to be transmitted from the TOE system to its
              intended destination without going through the TOE’s IPsec tunnel.</rationale>
          </objective-refer>
        </assumption>
        <assumption name="A.PHYSICAL">
          <description>Physical security, commensurate with the value of the TOE and the data it contains, is assumed to
            be provided by the environment.
          </description>
          <objective-refer ref="OE.PHYSICAL">
            <rationale>This assumption is satisfied by the environmental objective that ensures the
              TOE is not deployed on a system that is vulnerable to loss of physical custody.</rationale>
          </objective-refer>
        </assumption>
        <assumption name="A.TRUSTED_CONFIG">
          <description>Personnel configuring the TOE and its OE will follow the applicable security
            configuration guidance.
          </description>
          <objective-refer ref="OE.TRUSTED_CONFIG">
            <rationale>This assumption is satisfied by the environmental objective that ensures that
              anyone responsible for administering the TOE can be trusted not to misconfigure it,
              whether intentionally or not.</rationale>
          </objective-refer>
        </assumption>
      </assumptions>
    </sec:Assumptions>
    <!-- 3.3 Organizational Security Policies -->
    <sec:Organizational_Security_Policies>
      <OSPs/>
    </sec:Organizational_Security_Policies>
  </sec:Security_Problem_Definition>
  <!-- 4.0 Security Objectives -->
  <sec:Security_Objectives >
    <!-- 4.1 Security Objectives for the TOE -->
    <!-- 4.2 Security Objctives for the Operational Environment -->
    <section title="Security Objectives for the Operational Environment" id="SecurityObjectivesTOEorEnvironment">
      <SOEs>
        <SOE name="OE.NO_TOE_BYPASS">
          <description>Information cannot flow onto the network to which the VPN client’s host is connected without
            passing through the TOE.
          </description>
        </SOE>
        <SOE name="OE.PHYSICAL">
          <description>Physical security, commensurate with the value of the TOE and the data it contains, is assumed to
            be provided by the environment.</description>
        </SOE>
        <SOE name="OE.TRUSTED_CONFIG">
          <description>Personnel configuring the TOE and its OE will follow the applicable security
            configuration guidance.
          </description>
        </SOE>
      </SOEs>
    </section>
    <!-- 4.3 Security Objectives Rationale -->
    <sec:Security_Objectives_Rationale/>
  </sec:Security_Objectives>
  <!-- 5.0 Security Requirements -->
  <sec:Security_Requirements title="Security Requirements">
    <!-- 5.1 TOE Security Functional Requirements -->
    <man-sfrs>
      <!-- 5.1.1 Cryptographic Support (FCS) -->
      <section title="Cryptographic Support (FCS)" id="fcs">
        <ext-comp-def title="IPsec" fam-id="FCS_IPSEC_EXT">
          <fam-behavior>Components in this family describe requirements for IPsec implementation.</fam-behavior>
        </ext-comp-def>
        <!-- FCS_CKM.1/VPN VPN Cryptographic Key Generation (IKE) -->
        <f-component cc-id="fcs_ckm.1" id="fcs-ckm-1-vpn" name="VPN Cryptographic Key Generation (IKE)" iteration="VPN">
          <consistency-rationale/>
          <f-element id="fcs-ckm-1e1i1">
            <title>
				The TSF shall  <h:b> <selectables onlyone="yes"><selectable id="fcs_ckm.1.1_VPN_1" >invoke platform-provided functionality</selectable><selectable id="fcs_ckm.1.1_VPN_2" >implement functionality</selectable></selectables> 
				to </h:b>generate <h:b>asymmetric</h:b> cryptographic keys <h:b>used for IKE peer authentication</h:b>
				in accordance with:
				 <h:b> <selectables linebreak="yes"><selectable id="fcs_ckm.1.1_VPN_3" >FIPS PUB 186-5, “Digital Signature Standard (DSS),” Appendix B.3 for RSA schemes</selectable><selectable id="fcs_ckm.1.1_VPN_4" >FIPS PUB 186-5, “Digital Signature Standard (DSS),” Appendix B.4 for ECDSA schemes and implementing “NIST curve” P-384 and no other curves.</selectable></selectables> </h:b>
				and specified cryptographic key sizes [<h:i>equivalent to, or greater than, a
				symmetric key strength of 192 bits</h:i>] <h:s>that meet the following: 
				[<h:b>assignment:</h:b> <h:i>list of standards</h:i>]</h:s>.
			</title>
            <note role="application">
				The keys that are required to be generated by the TOE through this requirement
				are intended to be used for the authentication of the VPN entities during the IKE
				(either v1 or v2) key exchange. While it is required that the public key be
				associated with an identity in an X509v3 certificate, this association is not
				required to be performed by the TOE, and instead is expected to be performed by
				a Certificate Authority in the OE.<h:br/><h:br/>
				As indicated in FCS_IPSEC_EXT.1, the TOE is required to implement support for
				RSA or ECDSA (or both) for authentication.<h:br/><h:br/>
				See NIST Special Publication 800-57, “Recommendation for Key Management”
				for information about equivalent key strengths.
			</note>
            <aactivity level="element">
              <TSS>The evaluator shall examine the TSS to verify that it describes how the key generation functionality is
					invoked.<h:br/><h:br/></TSS>
              <Guidance>
				  There are no guidance EAs for this requirement.<h:br/><h:br/></Guidance>
              <Tests>If this functionality is implemented by the TSF, refer to the following EAs, depending on the TOE’s claimed Base-PP: <h:br/><h:br/> <h:br/><h:br/> <h:ul><h:li>GPOS PP: <no-link>FCS_CKM.1 </no-link> </h:li> <h:li>MDF PP: <no-link>FCS_CKM.1 </no-link> </h:li> <h:li>App PP: <no-link>FCS_CKM.1/AK </no-link> </h:li> <h:li>MDM PP: <no-link>FCS_CKM.1 </no-link> </h:li></h:ul></Tests>
            </aactivity>
          </f-element>
        </f-component>
        <!-- FCS_IPSEC_EXT.1 IPsec -->
        <f-component cc-id="fcs_ipsec_ext.1" id="fcs-ipsec-ext-1" name="IPsec">
          <consistency-rationale/>
          <comp-lev>requires the TSF to securely implement the IPsec protocol.</comp-lev>
          <management>The following actions could be considered for the management functions in FMT: <h:ul><h:li>Specify VPN gateways to use for connections</h:li> <h:li>Specify IPsec VPN clients to use for connections</h:li> <h:li>Specify IPsec-capable network devices to use for connections</h:li> <h:li>Specify client credentials to be used for connections</h:li></h:ul></management>
          <audit>The following actions should be auditable if FAU_GEN Security Audit Data Generation is included in the PP/ST: <h:ul><h:li>Decisions to DISCARD or BYPASS network packets processed by the TOE </h:li> <h:li>Failure to establish an IPsec SA </h:li> <h:li>Establishment/Termination of an IPsec SA </h:li> </h:ul> </audit>
          <dependencies><no-link>FCS_CKM.1 </no-link>  Cryptographic Key Generation<h:br/><h:br/><no-link>FCS_CKM.2 </no-link>  Cryptographic Key Distribution<h:br/><h:br/><no-link>FCS_COP.1 </no-link>  Cryptographic Operation<h:br/><h:br/></dependencies>
          <f-element id="fcs-ipsec-ext-1e1">
            <title>The TSF shall implement the IPsec architecture as specified in RFC 4301.
            </title>
            <note role="application">
			In the following elements of the FCS_IPSEC_EXT.1 component, it is allowable for some or all of the
			individual elements to be implemented by the platform on which the VPN client operates. However, this
			is only the case when the platform is within the TOE boundary, as is the case where this PP-Module is
			being claimed on top of a general-purpose OS or a mobile device.<h:br/><h:br/>
			When the TOE is a standalone software application, the IPsec functionality must be implemented by the
			TSF, though it is permissible for the TSF to invoke cryptographic algorithm services from the TOE
			platform to support the TOE’s implementation of IPsec. The TOE may also rely on the TOE platform for
			X.509 certificate validation services, though it is the responsibility of the TSF to take the proper action
			based on the validation response that is returned.<h:br/><h:br/>
			It is also permissible for the TSF to rely on low-level capabilities of the platform to perform enforcement
			and routing functions as a result of the policies the TSF maintains. For example, while the TSF must
			provide the capability to implement the Security Policy Database (SPD) abstraction, it is permissible for the TSF to
			depend on the platform-provided network stack to perform the low-level packet filtering and
			routing actions once the TSF has set up those rules as defined by the SPD.<h:br/><h:br/>
			While enforcement of the IPsec requirements must be implemented by the TSF, it is permissible for the
			TSF to receive configuration of the IPsec behavior from an environmental source, most notably a VPN
			gateway. <h:br/><h:br/>
				RFC 4301 calls for an IPsec implementation to protect IP traffic through the use
				of an SPD. The SPD is used to define how IP packets are
				to be handled: PROTECT the packet (e.g., encrypt the packet), BYPASS the IPsec
				services (e.g., no encryption), or DISCARD the packet (e.g., drop the packet). The
				SPD can be implemented in various ways, including router access control lists,
				firewall rulesets, a "traditional" SPD, etc. Regardless of the implementation
				details, there is a notion of a "rule" that a packet is "matched" against and a
				resulting action that takes place.<h:br/><h:br/>
				While there must be a means to order the rules, a general approach to ordering
				is not mandated, as long as the TOE can distinguish the IP packets and apply the
				rules accordingly. There may be multiple SPDs (one for each network interface),
				but this is not required.<h:br/><h:br/>
				A VPN gateway fully implements the IPsec capability and provides an
				administrative interface to establish and populate an SPD. A VPN client is not
				required to provide an administrative interface to create or maintain an SPD.<h:br/><h:br/>
				As an alternative, a client may provide an interface that can be used by another
				application or network entity, such as a VPN gateway, as a means to establish
				and populate the SPD. In either of these cases (the client provides an
				administrative interface, or an API), while the client is expected to maintain the
				SPD abstraction, it is permitted for the low-level enforcement and routing
				activities to be implemented by platform capabilities (e.g., a network driver) as
				configured by the client.
            </note>
            <aactivity level="component">
              <TSS>In addition to the TSS EAs for the individual FCS_IPSEC_EXT.1 elements below, the evaluator shall perform
			the following:<h:br/><h:br/>
			If the TOE boundary includes a general-purpose OS or mobile device, the evaluator shall
			examine the TSS to ensure that it describes whether the VPN client capability is architecturally integrated
			with the platform itself or it is a separate executable that is bundled with the platform.<h:br/><h:br/></TSS>
              <Guidance>
			In addition to the guidance EAs for the individual FCS_IPSEC_EXT.1 elements below, the
			evaluator shall perform the following:<h:br/><h:br/>
			If the configuration of the IPsec behavior is from an environmental source, most notably a VPN gateway
			(e.g through receipt of required connection parameters from a VPN gateway), the evaluator shall ensure
			that the operational guidance contains any appropriate information for ensuring that this configuration
			can be properly applied.<h:br/><h:br/>
			Note, in this case, that the implementation of the IPsec protocol must be enforced entirely within the TOE
			boundary; i.e. it is not permissible for a software application TOE to be a graphical front-end for IPsec
			functionality implemented totally or in part by the underlying OS platform. The behavior referenced here
			is for the possibility that the configuration of the IPsec connection is initiated from outside the TOE, which
			is permissible so long as the TSF is solely responsible for enforcing the configured behavior. However, it is
			allowable for the TSF to rely on low-level, platform-provided networking functions to implement the SPD
			from the client (e.g., enforcement of packet routing decisions).<h:br/><h:br/></Guidance>
              <Tests>As a prerequisite for performing the Test EAs for the individual FCS_IPSEC_EXT.1 elements below, the evaluator shall do the following: <h:br/><h:br/> <h:br/><h:br/>The evaluator shall minimally create a test environment equivalent to the test environment illustrated below. It is expected that the traffic generator is used to construct network packets and will provide the evaluator with the ability to manipulate fields in the ICMP, IPv4, IPv6, UDP, and TCP packet headers. The evaluator shall provide justification for any differences in the test environment. <h:br/><h:br/> <h:br/><h:br/> <figure entity="images/network.png" title="Test Environment" id="fig-testenv"/> Note that the evaluator shall perform all tests using the VPN client and a representative sample of platforms listed in the ST (for TOEs that claim to support multiple platforms). <h:br/><h:br/> <h:br/><h:br/></Tests>
            </aactivity>
            <aactivity level="element">
              <TSS>The evaluator shall examine the TSS and determine that it describes how the IPsec capabilities are
				implemented.<h:br/><h:br/>

                If the TOE is a standalone software application, the evaluator shall ensure that the TSS asserts that all
				IPsec functionality is implemented by the TSF. The evaluator shall also ensure that the TSS identifies what
				platform functionality the TSF relies on to support its IPsec implementation, if any (e.g. does it invoke
				cryptographic primitive functions from the platform’s cryptographic library, enforcement of packet
				routing decisions by low-level network drivers).<h:br/><h:br/>

                If the TOE is part of a general-purpose desktop or mobile OS, the evaluator shall ensure
				that the TSS describes at a high level the architectural relationship between the VPN client portion of the
				TOE and the rest of the TOE (e.g. is the VPN client an integrated part of the OS or is it a standalone
				executable that is bundled into the OS package). If the SPD is implemented by the underlying platform in
				this case, then the TSS describes how the client interacts with the platform to establish and populate the
				SPD, including the identification of the platform's interfaces that are used by the client.<h:br/><h:br/>
		    
				In all cases, the evaluator shall also ensure that the TSS describes how the client interacts with the network
				stack of the platforms on which it can run (e.g., does the client insert itself within the stack via kernel
				mods, does the client simply invoke APIs to gain access to network services).<h:br/><h:br/>
		      
				The evaluator shall ensure that the TSS describes how the SPD is implemented and the rules for processing
				both inbound and outbound packets in terms of the IPsec policy. The TSS describes the rules that are
				available and the resulting actions available after matching a rule. The TSS describes how the available
				rules and actions form the SPD using terms defined in RFC 4301, such as BYPASS (e.g., no encryption),
				DISCARD (e.g., drop the packet), and PROTECT (e.g., encrypt the packet).<h:br/><h:br/>
			  
				As noted in section 4.4.1 of RFC 4301, the processing of entries in the SPD is non-trivial, and the evaluator
				shall determine that the description in the TSS is sufficient to determine which rules will be applied given
				the rule structure implemented by the TOE. For example, if the TOE allows specification of ranges,
				conditional rules, etc., the evaluator shall determine that the description of rule processing (for both
				inbound and outbound packets) is sufficient to determine the action that will be applied, especially in the
				case where two different rules may apply. This description shall cover both the initial packets (that is, no
				SA is established on the interface or for that particular packet) as well as packets that are part of an
				established SA.<h:br/><h:br/></TSS>
              <Guidance>
                The evaluator shall examine the operational guidance to verify it describes how the SPD is created and
		configured. If there is an administrative interface to the client, then the guidance describes how the
		administrator specifies rules for processing a packet. The description includes all three cases - a rule that
		ensures packets are encrypted/decrypted, dropped, and allowing a packet to flow in plaintext. The
		evaluator shall determine that the description in the operational guidance is consistent with the
		description in the TSS, and that the level of detail in the operational guidance is sufficient to allow the
		administrator to set up the SPD in an unambiguous fashion. This includes a discussion of how ordering of
		rules impacts the processing of an IP packet.<h:br/><h:br/>

                If the client is configured by an external application, such as the VPN gateway, then the operational
		guidance should indicate this and provide a description of how the client is configured by the external
		application. The description should contain information as to how the SPD is established and set up in an
		unambiguous fashion. The description should also include what is configurable via the external
		application, how ordering of entries may be expressed, as well as the impacts that ordering of entries may
		have on the packet processing.<h:br/><h:br/>

               	In either case, the evaluator shall ensure the description provided in the TSS is consistent with the capabilities
		and description provided in the operational guidance.<h:br/><h:br/></Guidance>
              <Tests>
                Depending on the implementation, the evaluator may be required to use a VPN gateway or some form of application to configure the client. For Test 2, the evaluator is required to choose an application that allows for the configuration of the full set of capabilities of the VPN client (in conjunction with the platform). For example, if the client provides a robust interface that allows for specification of wildcards, subnets, etc., it is unacceptable for the evaluator to choose a VPN gateway that only allows for specifying a single fully qualified IP addresses in the rule. <h:br/><h:br/> <h:br/><h:br/>The evaluator shall perform the following tests:
                <testlist>
                  <test> The evaluator shall configure an SPD on the client that is capable of the following: dropping a
			packet, encrypting a packet, and allowing a packet to flow in plaintext. The selectors used in the
			construction of the rule shall be different such that the evaluator can generate a packet and send packets
			to the client with the appropriate fields (fields that are used by the rule - e.g., the IP addresses, TCP/UDP
			ports) in the packet header. The evaluator shall perform both positive and negative test cases for each type
			of rule. The evaluator shall observe via the audit trail and packet captures that the TOE exhibited the expected
			behavior: appropriate packets were dropped, allowed through without modification, was encrypted by
			the IPsec implementation.</test>
                  <test>The evaluator shall devise several tests that cover a variety of scenarios for packet processing.
			These scenarios must exercise the range of possibilities for SPD entries and processing modes as outlined
			in the TSS and operational guidance. Potential areas to cover include rules with overlapping ranges and
			conflicting entries, inbound and outbound packets, and packets that establish SAs as well as packets that
			belong to established SAs. The evaluator shall verify, via the audit trail and packet captures, for each
			scenario that the expected behavior is exhibited, and is consistent with both the TSS and the operational
			guidance.
                  </test>
                </testlist>
              </Tests>
            </aactivity>
          </f-element>
          <f-element id="fcs-ipsec-ext-1e2">
            <title>The TSF shall implement 
				 <selectables><selectable id="fcs_ipsec_ext.1.2_1" >tunnel mode</selectable><selectable id="fcs_ipsec_ext.1.2_2" >transport mode</selectable></selectables>.
            </title>
            <note role="application">
				If the TOE is used to connect to a VPN gateway for the purposes of establishing a
				secure connection to a private network, the ST author is expected to select
				tunnel mode. If the TOE uses IPsec to establish an end-to-end connection to
				another IPsec VPN client, the ST author is expected to select transport mode. If
				the TOE uses IPsec to establish a connection to a specific endpoint device for the
				purpose of secure remote administration, the ST author is expected to select
				transport mode.
			</note>
            <aactivity level="element">
              <TSS>The evaluator shall check the TSS to ensure it states that the VPN can be established to operate in tunnel
			mode, transport mode, or both (as selected). <h:br/><h:br/></TSS>
              <Guidance>The evaluator shall confirm that the operational guidance contains instructions on how to configure the
			connection in each mode selected.<h:br/><h:br/>
		      If both transport and tunnel modes are implemented, the evaluator shall review the operational
			guidance to determine how the use of a given mode is specified.<h:br/><h:br/></Guidance>
              <Tests>
                The evaluator shall perform the following tests based on the selections chosen:
                <testlist>
                  <test> [conditional]: If tunnel mode is selected, the evaluator shall use the operational guidance to configure
			the TOE and a VPN gateway to operate in tunnel mode. The
			evaluator shall configure the TOE and the VPN gateway to use any of the allowable cryptographic algorithms, 
			authentication methods, etc. to ensure an allowable SA can be negotiated. The evaluator shall then
			initiate a connection from the client to connect to the VPN gateway peer. The evaluator shall observe (for example,
			in the audit trail and the captured packets) that a successful connection was established using the tunnel
			mode.</test>
                  <test>[conditional]: If transport mode is selected, the evaluator shall use the operational guidance to
			configure the TOE to operate in transport mode and also configures an IPsec peer to accept IPsec
			connections using transport mode. The evaluator shall configure the TOE and the endpoint device to use any
			of the allowed cryptographic algorithms, authentication methods, etc. to ensure an allowable SA can be
			negotiated. The evaluator shall then initiate a connection from the TOE to connect to the remote endpoint.
			The evaluator shall observe (for example, in the audit trail and the captured packets) that a successful
			connection was established using the transport mode.
		</test>
                  <test> [conditional]: If both tunnel and transport modes are selected, the evaluator shall perform
			both Test 1 and Test 2 above, demonstrating that the TOE can be configured to support both modes.</test>
                  <test> [conditional]: If both tunnel and transport modes are selected, the evaluator shall modify the
			testing for FCS_IPSEC_EXT.1 to include the supported mode for SPD PROTECT entries to show that they
			only apply to traffic that is transmitted or received using the indicated mode.
                </test>
                </testlist>
              </Tests>
            </aactivity>
          </f-element>
          <f-element id="fcs-ipsec-ext-1e3">
            <title>The TSF shall have a nominal, final entry in the SPD that matches anything that
				is otherwise unmatched, and discards it.
            </title>
            <aactivity level="element">
              <TSS>The evaluator shall examine the TSS to verify that the TSS provides a description of how a packet is
		processed against the SPD and that if no “rules” are found to match, that a final rule exists, either implicitly
		or explicitly, that causes the network packet to be discarded.<h:br/><h:br/></TSS>
              <Guidance>The evaluator shall check that the operational guidance provides instructions on how to construct or
		acquire the SPD and uses the guidance to configure the TOE for the following test.<h:br/><h:br/></Guidance>
              <Tests>
                The evaluator shall perform the following test: <h:br/><h:br/>
                <testlist>
                  <test>
		     		The evaluator shall configure the SPD such that it has entries that contain operations that DISCARD,
				PROTECT, and (if applicable) BYPASS network packets. The evaluator may use the SPD that was created
				for verification of FCS_IPSEC_EXT.1.1. The evaluator shall construct a network packet that matches a
				BYPASS entry and send that packet. The evaluator should observe that the network packet is passed to
				the proper destination interface with no modification. The evaluator shall then modify a field in the packet
				header; such that it no longer matches the evaluator-created entries (there may be a “TOE-created” final
				entry that discards packets that do not match any previous entries). The evaluator sends the packet, and
				observes that the packet was not permitted to flow to any of the TOE’s interfaces.
			      </test>
                </testlist>
              </Tests>
            </aactivity>
          </f-element>
          <f-element id="fcs-ipsec-ext-1e4">
            <title>The TSF shall implement the IPsec protocol ESP as defined by RFC 4303 using the cryptographic algorithms
				[<h:i>AES-GCM-256 as specified in RFC 4106,</h:i> <selectables><selectable id="fcs_ipsec_ext.1.4_1" >AES-CBC-256 (both specified by RFC 3602) with a Secure Hash Algorithm (SHA)-based HMAC</selectable><selectable id="fcs_ipsec_ext.1.4_2" exclusive="yes">no other algorithms</selectable></selectables> ].
            </title>
            <ext-comp-def-title><title>The TSF shall implement the IPsec protocol ESP as defined by RFC 4303 using the cryptographic algorithms <assignable>supported cryptographic algorithms </assignable> . </title> </ext-comp-def-title>
            <note role="application">
				If this functionality is configurable, the TSF may be configured by a VPN gateway
				or by an administrator of the TOE itself.
			</note>
            <aactivity level="element">
              <TSS>The evaluator shall examine the TSS to verify that the algorithm AES-GCM-256 is
		implemented. If the ST author has selected AES-CBC-256 in the requirement, then
		the evaluator shall verify that the TSS describes this as well. In addition, the evaluator shall ensure that the SHA-based HMAC 
		algorithm conforms to the algorithms specified in the relevant iteration of FCS_COP.1 from
		the Base-PP that applies to keyed-hash message authentication.<h:br/><h:br/></TSS>
              <Guidance>The evaluator shall check the operational guidance to ensure it provides instructions on how the TOE is
		configured to use the algorithms selected in this component and whether this is performed through direct
		configuration, defined during initial installation, or defined by acquiring configuration settings from an
		environmental component.<h:br/><h:br/></Guidance>
              <Tests>
                <testlist>
                  <test>
				      The evaluator shall configure the TOE as indicated in the operational guidance, configuring the TOE
					to using the AES-GCM-256 algorithm, and attempt to establish a connection
					using ESP. If the ST author has selected AES-CBC-256, the TOE is configured to use
					this algorithm, and the evaluator shall attempt to establish a connection using ESP for those algorithms
					selected.
			      </test>
                </testlist>
              </Tests>
            </aactivity>
          </f-element>
          <f-element id="fcs-ipsec-ext-1e5">
            <title>The TSF shall implement the protocol:
               <selectables linebreak="yes"><selectable id="fcs_ipsec_ext.1.5_1">IKEv1, using Main Mode for Phase I exchanges, as defined in RFCs 2407, 2408, 2409, RFC 4109, <selectables><selectable id="fcs_ipsec_ext.1.5_2" exclusive="yes">no other RFCs for extended sequence numbers</selectable><selectable id="fcs_ipsec_ext.1.5_3" >RFC 4304 for extended sequence numbers</selectable></selectables> , <selectables><selectable id="fcs_ipsec_ext.1.5_4" exclusive="yes">no other RFCs for hash functions</selectable><selectable id="fcs_ipsec_ext.1.5_5" >RFC 4868 for hash functions</selectable></selectables> , and <selectables><selectable id="fcs_ipsec_ext.1.5_6" >support for XAUTH</selectable><selectable id="fcs_ipsec_ext.1.5_7" exclusive="yes">no support for XAUTH</selectable></selectables> </selectable><selectable id="fcs_ipsec_ext.1.5_8">IKEv2 as defined in RFC 7296 (with mandatory support for NAT traversal as specified in section 2.23), RFC 8247, and <selectables><selectable id="fcs_ipsec_ext.1.5_9" exclusive="yes">no other RFCs for hash functions</selectable><selectable id="fcs_ipsec_ext.1.5_10" >RFC 4868 for hash functions</selectable></selectables> </selectable></selectables>.
            </title>
            <aactivity level="element">
              <TSS>The evaluator shall examine the TSS to verify that IKEv1, IKEv2, or both are implemented. If IKEv1 is
		implemented, the evaluator shall verify that the TSS indicates whether XAUTH is supported, and
		that aggressive mode is not used for IKEv1 Phase 1 exchanges (i.e. only main mode is used). It may be that
		these are configurable options.<h:br/><h:br/></TSS>
              <Guidance>The evaluator shall check the operational guidance to ensure it instructs the administrator how to
		configure the TOE to use IKEv1, IKEv2, or both (as selected), and uses the guidance to configure the TOE to
		perform NAT traversal for the tests below. If XAUTH is implemented, the evaluator shall verify that the
		operational guidance provides instructions on how it is enabled or disabled. <h:br/><h:br/>
                If the TOE supports IKEv1, the evaluator shall verify that the operational guidance either asserts that only
		main mode is used for Phase 1 exchanges or provides instructions for disabling aggressive mode.<h:br/><h:br/></Guidance>
              <Tests>
                <testlist>
                  <test>The evaluator shall configure the TOE so that it will perform NAT traversal processing as described
			in the TSS and RFC 7296, section 2.23. The evaluator shall initiate an IPsec connection and determine that
			the NAT is successfully traversed. If the TOE supports IKEv1 with or without XAUTH, the evaluator shall
			verify that this test can be successfully repeated with XAUTH enabled and disabled in the manner specified
			by the operational guidance. If the TOE only supports IKEv1 with XAUTH, the evaluator shall verify that
			connections not using XAUTH are unsuccessful. If the TOE only supports IKEv1 without XAUTH, the
			evaluator shall verify that connections using XAUTH are unsuccessful.
			
                    <h:br/><h:br/> In the case that the VPN gateway enforces the TOE's configuration, the following steps shall be performed to meet the objective of Test 1:
                    <h:ol type="1"><h:li>Configure the TOE client and VPN gateway to have XAUTH enabled.</h:li> <h:li>Attempt the connection and observe that the connection succeeds and that XAUTH is used.</h:li> <h:li>Configure the TOE and gateway to have XAUTH disabled.</h:li> <h:li>Attempt the connection and observe that the connection succeeds and that XAUTH is not present.</h:li> <h:li>Attempt to configure a mismatch between the TOE and gateway (i.e. modify a local configuration setting on the client system)</h:li> <h:li>Verify that no IPsec connection is attempted until the gateway corrects the configuration settings</h:li></h:ol></test>
                  <test> [conditional]: If the TOE supports IKEv1, the evaluator shall perform any applicable operational
			guidance steps to disable the use of aggressive mode and then attempt to establish a connection using an
			IKEv1 Phase 1 connection in aggressive mode. This attempt should fail. The evaluator shall show that the
			TOE will reject a VPN gateway from initiating an IKEv1 Phase 1 connection in aggressive mode. The
			evaluator should then show that main mode exchanges are supported.
                  
                    <h:br/><h:br/> In the case that the VPN gateway enforces the TOE's configuration, the following steps should be performed to meet the objective of Test 2:
                    <h:ol type="1"><h:li>Configure the gateway and TOE client in the appropriate manner per the guidance documentation (i.e., gateway rejects aggressive mode, client rejects aggressive mode).</h:li> <h:li>Connect the TOE client to the gateway to obtain the configuration settings.</h:li> <h:li>Observe the main mode connection is successful.</h:li> <h:li>Disconnect the TOE from the gateway.</h:li> <h:li>Attempt to modify the setting for main mode locally on the TOE to force the client to attempt to use aggressive mode.</h:li> <h:li>Observe that when the initial connection attempt to the gateway is made, the gateway detects the configuration difference and reapplies the main mode setting before the TOE can attempt an IPsec connection.</h:li> <h:li>Configure a peer to have equivalent settings to the VPN gateway (Same ciphers/Authentication/Hash/KEX settings)</h:li> <h:li>Tell the TOE that there is a VPN gateway at the location of the peer.</h:li> <h:li>Observe that the TOE cannot establish a connection with the peer.</h:li></h:ol></test>
                </testlist>
              </Tests>
            </aactivity>
          </f-element>
          <f-element id="fcs-ipsec-ext-1e6">
            <title>The TSF shall ensure the encrypted payload in the 
				 <selectables><selectable id="fcs_ipsec_ext.1.6_1" >IKEv1</selectable><selectable id="fcs_ipsec_ext.1.6_2" >IKEv2</selectable></selectables>  
				protocol uses the cryptographic algorithms [<h:i>AES-CBC-256 as specified in RFC 6379 and </h:i> <selectables><selectable id="fcs_ipsec_ext.1.6_3" >AES-GCM-256 as specified in RFC 5282</selectable><selectable id="fcs_ipsec_ext.1.6_4" exclusive="yes">no other algorithm</selectable></selectables> ].
            </title>
            <ext-comp-def-title><title>The TSF shall ensure the encrypted payload in the <selectables><selectable>IKEv1 </selectable> <selectable>IKEv2 </selectable> </selectables> protocol uses the cryptographic algorithms <assignable>supported cryptographic algorithms </assignable> . </title> </ext-comp-def-title>
            <note role="application">
				If this functionality is configurable, the TSF may be configured by a VPN gateway
				or by an administrator of the TOE itself.
			</note>
            <aactivity level="element">
              <TSS>The evaluator shall ensure the TSS identifies the algorithms used for encrypting the IKE
		payload for each supported IKE version and that the algorithm AES-CBC-256 is specified, and if AES-GCM-256 is chosen in the
		selection of the requirement, this is included in the TSS discussion.<h:br/><h:br/></TSS>
              <Guidance>The evaluator shall check the operational guidance to ensure it provides instructions on how the TOE is
		configured to use the algorithms selected in this component and whether this is performed through direct
		configuration, defined during initial installation, or defined by acquiring configuration settings from an
		environmental component. <h:br/><h:br/></Guidance>
              <Tests>
                The evaluator shall use the operational guidance to configure the TOE (or to configure the OE to have the TOE receive configuration) to perform the following test for each ciphersuite selected: <h:br/><h:br/>
                <testlist>
                  <test>
               			The evaluator shall configure the TOE to use the ciphersuite under test to encrypt the IKE payload for each 
				supported IKE version and establish a connection with a peer device, which is configured to only accept the
				payload encrypted using the indicated ciphersuite. The evaluator shall confirm the algorithm was that used
				in the negotiation. The evaluator shall confirm that the connection is successful by confirming that data
				can be passed through the connection once it is established. For example, the evaluator may connect to
				a webpage on the remote network and verify that it can be reached.
			</test>
                </testlist>
              </Tests>
            </aactivity>
          </f-element>
          <f-element id="fcs-ipsec-ext-1e7">
            <title>The TSF shall ensure that 
				 <selectables><selectable id="fcs_ipsec_ext.1.7_1">IKEv2 SA lifetimes can be configured by <selectables><selectable id="fcs_ipsec_ext.1.7_2" >an administrator</selectable><selectable id="fcs_ipsec_ext.1.7_3" >a VPN gateway</selectable></selectables> based on <selectables><selectable id="fcs_ipsec_ext.1.7_4" >number of packets/number of bytes</selectable><selectable id="fcs_ipsec_ext.1.7_5" >length of time</selectable></selectables> </selectable><selectable id="fcs_ipsec_ext.1.7_6">IKEv1 SA lifetimes <selectables><selectable id="fcs_ipsec_ext.1.7_7">can be configured by <selectables><selectable id="fcs_ipsec_ext.1.7_8" >an administrator</selectable><selectable id="fcs_ipsec_ext.1.7_9" >a VPN gateway</selectable></selectables> based on <selectables><selectable id="fcs_ipsec_ext.1.7_10" >number of packets/number of bytes</selectable><selectable id="fcs_ipsec_ext.1.7_11" >length of time</selectable></selectables> </selectable><selectable id="fcs_ipsec_ext.1.7_12">are fixed based on <selectables><selectable id="fcs_ipsec_ext.1.7_13" >number of packets/number of bytes</selectable><selectable id="fcs_ipsec_ext.1.7_14" >length of time</selectable></selectables> </selectable></selectables> </selectable></selectables> . 
				If length of time is used, it must include at least one option that
				is 24 hours or less for Phase 1 SAs and eight hours or less for Phase 2 SAs.
            </title>
            <note role="application">
				The ST author is afforded a selection based on the version of IKE in their
				implementation. There is a further selection within this selection that allows the
				ST author to specify which entity is responsible for “configuring” the life of the
				security association (SA). An implementation that allows an administrator to configure the client or a
				VPN gateway that pushes the SA lifetime down to the client are both acceptable.<h:br/><h:br/>

				As far as SA lifetimes are concerned, the TOE can limit the lifetime based on the
				number of bytes transmitted, or the number of packets transmitted. Either
				packet-based or volume-based SA lifetimes are acceptable; the ST author makes
				the appropriate selection to indicate which type of lifetime limits are supported.<h:br/><h:br/>

				The ST author chooses either the IKEv1 requirements or IKEv2 requirements (or
				both, depending on the selection in FCS_IPSEC_EXT.1.5. The IKEv1 requirement
				can be accomplished either by providing authorized administrator-configurable
				lifetimes (with appropriate instructions in documents mandated by AGD_OPE),
				or by “hard coding” the limits in the implementation. For IKEv2, there are no
				hard-coded limits, but in this case it is required that an administrator be able to
				configure the values. In general, instructions for setting the parameters of the
				implementation, including lifetime of the SAs, should be included in the 
				operational guidance generated for AGD_OPE. It is appropriate to refine the
				requirement in terms of number of MB or KB instead of number of packets, as long
				as the TOE is capable of setting a limit on the amount of traffic that is protected
				by the same key (the total volume of all IPsec traffic protected by that key).
			</note>
            <aactivity level="element">
              <TSS>There are no TSS EAs for this requirement.<h:br/><h:br/></TSS>
              <Guidance>The evaluator shall check the operational guidance to ensure it provides instructions on how the TOE
		configures the values for SA lifetimes. In addition, the evaluator shall check that the guidance has the
		option for either the administrator or VPN gateway to configure Phase 1 SAs if time-based limits are
		supported. Currently, there are no values mandated for the number of packets or number of bytes; the
		evaluator shall simply check the operational guidance to ensure that this can be configured if selected in
		the requirement.<h:br/><h:br/></Guidance>
              <Tests>
                When testing this functionality, the evaluator shall ensure that both sides are configured appropriately. From the RFC “A difference between IKEv1 and IKEv2 is that in IKEv1 SA lifetimes were negotiated. In IKEv2, each end of the SA is responsible for enforcing its own lifetime policy on the SA and rekeying the SA when necessary. If the two ends have different lifetime policies, the end with the shorter lifetime will end up always being the one to request the rekeying. If the two ends have the same lifetime policies, it is possible that both will initiate a rekeying at the same time (which will result in redundant SAs). To reduce the probability of this happening, the timing of rekeying requests SHOULD be jittered.” <h:br/><h:br/> <h:br/><h:br/>Each of the following tests shall be performed for each version of IKE selected in the FCS_IPSEC_EXT.1.5 protocol selection:
                <testlist>
                  <test> [conditional]: The evaluator shall configure a maximum lifetime in terms of the # of packets (or
			bytes) allowed following the operational guidance. The evaluator shall establish an SA and determine that
			once the allowed # of packets (or bytes) through this SA is exceeded, the connection is closed.</test>
                  <test> [conditional]: The evaluator shall construct a test where a Phase 1 SA is established and attempted
			to be maintained for more than 24 hours before it is renegotiated. The evaluator shall observe that this
			SA is closed or renegotiated in 24 hours or less. If such an action requires that the TOE be configured in a
			specific way, the evaluator shall implement tests demonstrating that the configuration capability of the
			TOE works as documented in the operational guidance.</test>
                  <test> [conditional]: The evaluator shall perform a test similar to Test 2 for Phase 2 SAs, except that the
			lifetime will be 8 hours or less instead of 24 hours or less.</test>
                  <test> [conditional]: If a fixed limit for IKEv1 SAs is supported, the evaluator shall establish an SA and
			observe that the connection is closed after the fixed traffic or time value is reached.</test>
                </testlist>
              </Tests>
            </aactivity>
          </f-element>
          <f-element id="fcs-ipsec-ext-1e8">
            <title>
              The TSF shall ensure that IKE protocols implement DH Groups <h:ul><h:li>20 (384-bit Random ECP) according to RFC 5114 and</h:li></h:ul> <selectables linebreak="yes"><selectable id="fcs_ipsec_ext.1.8_1" >15 (3072-bit MODP)</selectable><selectable id="fcs_ipsec_ext.1.8_2" >16 (4096-bit MODP)</selectable><selectable id="fcs_ipsec_ext.1.8_3" >17 (6144-bit MODP)</selectable><selectable id="fcs_ipsec_ext.1.8_4" >18 (8192-bit MODP)</selectable></selectables>  according to RFC 3526.
                
                </title>
            <note role="application">
				The selection is used to specify additional DH groups supported. This applies to
				IKEv1 and IKEv2 exchanges. It should be noted that if any additional DH groups
				are specified, they must comply with the requirements (in terms of the
				ephemeral keys that are established) listed in <no-link>FCS_CKM.1 </no-link> .<h:br/><h:br/>

				Since the implementation may allow different DH groups to be
				negotiated for use in forming the SAs, the assignments in FCS_IPSEC_EXT.1.9
				and FCS_IPSEC_EXT.1.10 may contain multiple values. For each DH group
				supported, the ST author consults Table 2 in 800-57 to determine the “bits of
				security” associated with the DH group. Each unique value is then used to fill in
				the assignment (for 1.9 they are doubled; for  they are inserted directly into
				the assignment). For example, suppose the implementation supports DH group
				15 (3072-bit MODP) and group 20 (ECDH using NIST curve P-384). From Table 2,
				the bits of security value for group 14 is 128, and for group 20 it is 192. For
				FCS_IPSEC_EXT.1.9, then, the assignment would read “[256, 384]” and for
				FCS_IPSEC_EXT.1.10 it would read “[128, 192]” 
			</note>
            <aactivity level="element">
              <TSS>The evaluator shall check to ensure that the DH groups specified in the requirement are listed as being
		supported in the TSS. If there is more than one DH group supported, the evaluator shall check to ensure the
		TSS describes how a particular DH group is specified/negotiated with a peer.<h:br/><h:br/></TSS>
              <Guidance>There are no guidance EAs for this requirement.<h:br/><h:br/></Guidance>
              <Tests>
                The evaluator shall perform the following test:
                <testlist>
                  <test>For each supported DH group, the evaluator shall test to ensure that all supported IKE 
				      protocols can be successfully completed using that particular DH group.
			      </test>
                </testlist>
              </Tests>
            </aactivity>
          </f-element>
          <f-element id="fcs-ipsec-ext-1e9">
            <title>The TSF shall generate the secret value x used in the
              IKE DH key exchange (“x” in g^x mod p) using the random bit
              generator specified in FCS_RBG.1 (or FCS_RBG_EXT.1 in the case of  <xref to="bibAppPP"/>, and having a length of at least
               <assignable>(one or more) numbers of bits that is at least twice the “bits of security” value associated with the negotiated DH group as listed in Table 2 of NIST SP 800-57, Recommendation for Key Management – Part 1: General</assignable>  bits.
            </title>
            <aactivity level="element">
              <TSS>The evaluator shall check to ensure that, for each DH group supported, the TSS describes the process for
		generating "x" (as defined in FCS_IPSEC_EXT.1.9) and each nonce. The evaluator shall verify that the TSS
		indicates that the random number generated that meets the requirements in this EP is used, and that the
		length of "x" and the nonces meet the stipulations in the requirement.<h:br/><h:br/></TSS>
              <Guidance>There are no guidance EAs for this requirement.<h:br/><h:br/></Guidance>
              <Tests>There are no test EAs for this requirement.</Tests>
            </aactivity>
          </f-element>
          <f-element id="fcs-ipsec-ext-1e10">
            <title>The TSF shall generate nonces used in IKE exchanges in a manner such that the
				probability that a specific nonce value will be repeated during the life a specific
				IPsec SA is less than 1 in 2^ <assignable>(one or more) “bits of security” values associated with the negotiated DH group as listed in Table 2 of NIST SP 800-57, Recommendation for Key Management – Part 1: General</assignable>.
            </title>
            <aactivity level="element">
              <no-tests>EAs for this element are tested through EAs for FCS_IPSEC_EXT.1.9.</no-tests>
            </aactivity>
          </f-element>
          <f-element id="fcs-ipsec-ext-1e11">
            <title>The TSF shall ensure that 
               <selectables><selectable id="fcs_ipsec_ext.1.11_1">IKEv1 performs peer authentication using <selectables><selectable id="fcs_ipsec_ext.1.11_2" >RSA</selectable><selectable id="fcs_ipsec_ext.1.11_3" >ECDSA</selectable></selectables> that use X.509v3 certificates that conform to RFC 4945.</selectable><selectable id="fcs_ipsec_ext.1.11_4">IKEv2 performs peer authentication using <selectables><selectable id="fcs_ipsec_ext.1.11_5" >RSA</selectable><selectable id="fcs_ipsec_ext.1.11_6" >ECDSA</selectable></selectables> that use X.509v3 certificates that conform to RFC 4945 and <selectables><selectable id="sel-ipsec-e11-psk" >Pre-shared Keys that conform to RFC 8784</selectable><selectable id="sel-ipsec-e11-eapttls" >Pre-shared Keys transmitted via EAP-TTLS</selectable><selectable id="sel-ipsec-e11-eaptls" >EAP-TLS</selectable><selectable id="fcs_ipsec_ext.1.11_7" exclusive="yes">no other method</selectable></selectables>.</selectable></selectables> </title>
            <note role="application">
              At least one public-key-based peer authentication method is required in order to
              conform to this PP-Module; one or more of the public key schemes is chosen by
              the ST author to reflect what is implemented. The ST author also ensures that
              appropriate FCS requirements reflecting the algorithms used (and key
              generation capabilities, if provided) are listed to support those methods. Note
              that the TSS will elaborate on the way in which these algorithms are to be used. X.509 certificates will be validated against FIA_X509_EXT.1 from <xref to="pkg-x509"/>, which is referenced in each supported Base-PP.
              <h:br/><h:br/>
              If a selection with “EAP-TLS” or “EAP-TTLS” is chosen, the selection-based requirement FCS_EAP_EXT.1 must be claimed. 
              When an EAP method is used, verification occurs via an external authentication server. 
              <h:br/><h:br/>
              If any selection including “pre-shared keys” is chosen, the selection-based requirement FIA_PSK_EXT.1 must be claimed. 
              Since certificates are required for authentication, IKEv1 does not support PSKs, as 
              PSK-based authentication and certificate-based authentication are mutually exclusive in IKEv1. 
              Note that IKEv1 will be removed in a future version of this document. 
              <h:br/><h:br/>
              Multifactor support can be achieved via traffic filtering in accordance with FPF_MFA_EXT.1. 
              <h:br/><h:br/>
              It is acceptable for different use cases to leverage different selections. If this is the case, it must be identified. 
              <h:br/><h:br/>
              This SFR is modified from its definition in the Base-PP by adding new selections for IKE versions and authentication methods.      
            </note>
            <aactivity level="element">
              <TSS>The evaluator shall ensure that the TSS describes whether peer authentication is performed using RSA, ECDSA, or both.
                <h:br/><h:br/>
                If any selection with pre-shared keys is chosen in the selection, the evaluator shall check to ensure that the TSS describes how those selections work in conjunction with authentication of IPsec connections.
                <h:br/><h:br/>
                The evaluator shall ensure that the TSS describes how the TOE compares the peer’s presented identifier to the reference identifier. This description shall include whether the certificate presented identifier is compared to the ID payload presented identifier, which fields of the certificate are used as the presented identifier (DN, Common Name, or SAN), and if multiple fields are supported, the logical order comparison. If the ST author assigned an additional identifier type, the TSS description shall also include a description of that type and the method by which that type is compared to the peer’s presented certificate. <h:br/><h:br/></TSS>
              <Guidance>If any selection with “Pre-shared Keys” is selected, the evaluator shall check that the operational guidance
		      describes any configuration necessary to enable any selected authentication mechanisms.   <h:br/><h:br/>
		If any method other than no other method is selected, the evaluator shall check that the operational guidance describes any
		      configuration necessary to enable any selected authentication mechanisms.<h:br/><h:br/>
                The evaluator shall ensure that the operational guidance describes how to set up the TOE to use the cryptographic
		algorithms RSA, ECDSA, or either, depending on which is claimed in the ST.<h:br/><h:br/>
               In order to construct the environment and configure the TOE for the following tests, the evaluator shall
		ensure that the operational guidance also describes how to configure the TOE to connect to a trusted CA,
		and ensure a valid certificate for that CA is loaded into the TOE as a trusted CA.<h:br/><h:br/>
		The evaluator shall also ensure that the operational guidance includes the configuration of the reference
		identifiers for the peer.<h:br/><h:br/></Guidance>
              <Tests>
                For efficiency’s sake, the testing that is performed here has been combined with the testing for <no-link>FIA_X509_EXT.2 </no-link>  in <xref to="pkg-x509"/> and <no-link>FIA_X509_EXT.4 </no-link>  (for IPsec connections and depending on the Base-PP), <no-link>FCS_IPSEC_EXT.1.12 </no-link>  , and <no-link>FCS_IPSEC_EXT.1.13 </no-link>  . The following tests shall be repeated for each peer authentication protocol selected in the <no-link>FCS_IPSEC_EXT.1.11 </no-link>  selection above:
                <testlist>
                  For each supported identifier type (excluding DNs), the evaluator shall repeat the following tests:
                  <test>The evaluator shall have the TOE generate a public-private key pair and submit a CSR (Certificate
			Signing Request) to a CA (trusted by both the TOE and the peer VPN used to establish a connection) for
			its signature. The values for the DN (Common Name, Organization, Organizational Unit, and Country) will
			also be passed in the request. Alternatively, the evaluator may import to the TOE a previously generated
			private key and corresponding certificate.
                </test>
                  <test>The evaluator shall configure the TOE to use a private key and associated certificate signed by a
			trusted CA and shall establish an IPsec connection with the peer.                
		</test>
                  <test> The evaluator shall test that the TOE can properly handle revoked certificates – conditional on
			whether CRL or OCSP is selected; if both are selected, then a test is performed for each method. For
			this current version of the PP-Module, the evaluator has to only test one up in the trust chain (future
			drafts may require to ensure the validation is done up the entire chain). The evaluator shall ensure that a
			valid certificate is used and that the SA is established. The evaluator shall then attempt the test with a
			certificate that will be revoked (for each method chosen in the selection) to ensure when the certificate
			is no longer valid that the TOE will not establish an SA.
                </test>
                  <test> [conditional]: For each selection made, the evaluator shall verify factors are required, as indicated in the
			operational guidance, to establish an IPsec connection with the server. </test>
                  <test> For each field of the certificate supported for comparison, the evaluator shall configure the peer’s
			reference identifier on the TOE (per the administrative guidance) to match the field in the peer’s
			presented certificate and shall verify that the IKE authentication succeeds.</test>
                  <test>For each field of the certificate support for comparison, the evaluator shall configure the peer’s
			reference identifier on the TOE (per the administrative guidance) to not match the field in the peer’s
			presented certificate and shall verify that the IKE authentication fails.</test>
                  <test> [conditional]: If, according to the TSS, the TOE supports both Common Name and SAN certificate
			fields and uses the preferred logic outlined in the Application Note, the tests above with the Common
			Name field shall be performed using peer certificates with no SAN extension. Additionally, the evaluator
			shall configure the peer’s reference identifier on the TOE to not match the SAN in the peer’s presented
			certificate, but to match the Common Name in the peer’s presented certificate and verify that the IKE
			authentication fails.
		</test>
                  <test> [conditional]: If the TOE supports DN identifier types, the evaluator shall configure the peer's
			reference identifier on the TOE (per the administrative guidance) to match the subject DN in the peer's
			presented certificate and shall verify that the IKE authentication succeeds. To demonstrate a bit-wise
			comparison of the DN, the evaluator shall change a single bit in the DN (preferably, in an Object Identifier
			(OID) in the DN) and verify that the IKE authentication fails. To demonstrate a comparison of DN values,
			the evaluator shall change any one of the four DN values and verify that the IKE authentication fails.
                </test>
                  <test> [conditional]: If the TOE supports both IPv4 and IPv6 and supports IP address identifier types, the
			evaluator must repeat tests 1 and 2 with both IPv4 address identifiers and IPv6 identifiers. Additionally,
			the evaluator shall verify that the TOE verifies that the IP header matches the identifiers by setting the
			presented identifiers and the reference identifier with the same IP address that differs from the actual IP
			address of the peer in the IP headers and verifying that the IKE authentication fails.
		</test>
                  <test>[conditional]: If, according to the TSS, the TOE performs comparisons between the peer’s ID
			payload and the peer’s certificate, the evaluator shall repeat the following test for each combination of
			supported identifier types and supported certificate fields (as above). The evaluator shall configure the
			peer to present a different ID payload than the field in the peer’s presented certificate and verify that the
			TOE fails to authenticate the IKE peer.</test>
                </testlist>
              </Tests>
            </aactivity>
          </f-element>
          <f-element id="fcs-ipsec-ext-1e12">
            <title>The TSF shall not establish an SA if the  <selectables><selectable id="fcs_ipsec_ext.1.12_1" >IP address</selectable><selectable id="fcs_ipsec_ext.1.12_2" >Fully Qualified Domain Name (FQDN)</selectable><selectable id="fcs_ipsec_ext.1.12_3" >user FQDN</selectable><selectable id="fcs_ipsec_ext.1.12_4" >Distinguished Name (DN)</selectable></selectables>  
				and 
				 <selectables><selectable id="fcs_ipsec_ext.1.12_5" exclusive="yes">no other reference identifier type</selectable><selectable id="fcs_ipsec_ext.1.12_7" ><assignable>other supported reference identifier types</assignable></selectable></selectables>  contained in a certificate does not match the expected values for the
				entity attempting to establish a connection.
            </title>
            <note role="application">
				The TOE must support at least one of the following identifier types: IP address,
				FQDN, user FQDN, or DN.
				In the future, the TOE will be required to support all of these identifier types. The
				TOE is expected to support as many IP address formats (IPv4 and IPv6) as IP
				versions supported by the TOE in general. The ST author may assign additional
				supported identifier types in the second selection.
			</note>
            <aactivity level="element">
              <no-tests>EAs for this element are tested through EAs for FCS_IPSEC_EXT.1.11.</no-tests>
            </aactivity>
          </f-element>
          <f-element id="fcs-ipsec-ext-1e13">
            <title>The TSF shall not establish an SA if the presented identifier does not match the
				configured reference identifier of the peer.
            </title>
            <note role="application">
				At this time, only the comparison between the presented identifier in the peer’s
				certificate and the peer’s reference identifier is mandated by the testing below.
				However, in the future, this requirement will address two aspects of the peer
				certificate validation: 1) comparison of the peer’s ID payload to the peer’s
				certificate, which are both presented identifiers, as required by RFC 4945 and 2)
				verification that the peer identified by the ID payload and the certificate is the
				peer expected by the TOE (per the reference identifier). At that time, the TOE will
				be required to demonstrate both aspects (i.e. that the TOE enforces that the
				peer’s ID payload matches the peer’s certificate, which both match configured
				peer reference identifiers).<h:br/><h:br/>
				Excluding the DN identifier type (which is necessarily the Subject DN in the peer
				certificate), the TOE may support the identifier in either the Common Name or
				Subject Alternative Name (SAN) or both. If both are supported, the preferred
				logic is to compare the reference identifier to a presented SAN, and only if the
				peer’s certificate does not contain a SAN, to fall back to a comparison against
				the Common Name. In the future, the TOE will be required to compare the
				reference identifier to the presented identifier in the SAN only, ignoring the
				Common Name.<h:br/><h:br/>
				The configuration of the peer reference identifier is addressed by
				FMT_SMF.1.1/VPN.
			</note>
            <aactivity level="element">
              <no-tests>EAs for this element are tested through EAs for FCS_IPSEC_EXT.1.11.</no-tests>
            </aactivity>
          </f-element>
          <f-element id="fcs-ipsec-ext-1e14">
            <title>The 
				 <selectables><selectable id="fcs_ipsec_ext.1.14_1" >TSF</selectable><selectable id="fcs_ipsec_ext.1.14_2" >VPN gateway</selectable></selectables>  shall be able to ensure by default that the strength of the symmetric algorithm (in terms 
				of the number of bits in the key) negotiated to protect the 
				 <selectables><selectable id="fcs_ipsec_ext.1.14_3" >IKEv1 Phase 1</selectable><selectable id="fcs_ipsec_ext.1.14_4" >IKEv2 IKE_SA</selectable></selectables>  
				connection is greater than or equal to the strength of the symmetric algorithm
				(in terms of the number of bits in the key) negotiated to protect the 
				 <selectables><selectable id="fcs_ipsec_ext.1.14_5" >IKEv1 Phase 2</selectable><selectable id="fcs_ipsec_ext.1.14_6" >IKEv2 CHILD_SA</selectable></selectables>  connection.
            </title>
            <note role="application">
				If this functionality is configurable, the TSF may be configured by a VPN gateway
				or by an administrator of the TOE itself<h:br/><h:br/>
				The ST author chooses either or both of the IKE selections based on what is
				implemented by the TOE. The IKE versions chosen should be
				consistent not only in this element, but with other choices for other elements in
				this component. While it is acceptable for this capability to be configurable, the
				default configuration in the evaluated configuration (either "out of the box" or
				by configuration guidance in the AGD documentation) must enable this
				functionality.<h:br/><h:br/></note>
            <aactivity level="element">
              <TSS>The evaluator shall check that the TSS describes the potential strengths (in terms of the number of bits in
		the symmetric key) of the algorithms that are allowed for the IKE and ESP exchanges. The TSS shall also
		describe the checks that are done when negotiating IKEv1 Phase 2 or IKEv2 CHILD_SA suites (depending on the supported IKE versions) to ensure
		that the strength (in terms of the number of bits of key in the symmetric algorithm) of the negotiated
		algorithm is less than or equal to that of the IKE SA that is protecting the negotiation.
		<h:br/><h:br/></TSS>
              <Guidance>There are no guidance EAs for this requirement.<h:br/><h:br/></Guidance>
              <Tests>
                The evaluator shall follow the guidance to configure the TOE to perform the following tests:
                <testlist>
                  <test>This test shall be performed for each version of IKE supported. The evaluator shall successfully
		negotiate an IPsec connection using each of the supported algorithms and hash functions identified in the
		requirements.</test>
                  <test> [conditional]: This test shall be performed for each version of IKE supported. The evaluator shall
			attempt to establish an SA for ESP that selects an encryption algorithm with more strength than that being
			used for the IKE SA (i.e., symmetric algorithm with a key size larger than that being used for the IKE SA).
			Such attempts should fail.</test>
                  <test>This test shall be performed for each version of IKE supported. The evaluator shall attempt to
			establish an IKE SA using an algorithm that is not one of the supported algorithms and hash functions
			identified in the requirements. Such an attempt should fail.
                </test>
                  <test> This test shall be performed for each version of IKE supported. The evaluator shall attempt to
			establish an SA for ESP (assumes the proper parameters where used to establish the IKE SA) that selects
			an encryption algorithm that is not identified in FCS_IPSEC_EXT.1.4. Such an attempt should fail.
                </test>
                </testlist>
              </Tests>
            </aactivity>
          </f-element>
        </f-component>
      </section>
      <!-- 5.1.2 User Data Protection (FDP) -->
      <section title="User Data Protection (FDP)" id="fdp">
        <!-- FDP_RIP.2 Full Residual Information Protection -->
        <f-component cc-id="fdp_rip.2" id="fdp-rip-2" name="Full Residual Information Protection">
          <consistency-rationale/>
          <f-element id="fdp-rip-2e1">
            <title> The  <h:b> <selectables onlyone="yes"><selectable id="fdp_rip.2.1_1" >TOE</selectable><selectable id="fdp_rip.2.1_2" >TOE platform</selectable></selectables> </h:b>  
				shall ensure that any previous information content of a resource is made unavailable upon the 
				 <selectables><selectable id="fdp_rip.2.1_3" >allocation of the resource to</selectable><selectable id="fdp_rip.2.1_4" >deallocation of the resource from</selectable></selectables>  all objects.
            </title>
            <note role="application">
				This requirement ensures, for example, that protocol data units (PDUs) are not
				padded with residual information such as cryptographic key material. The ST
				author uses the selection to specify when previous information is made
				unavailable.
			</note>
            <aactivity level="element">
              <TSS><h:b>Requirement met by the platform</h:b><h:br/><h:br/>
                The evaluator shall examine the TSS to verify that it describes (for each supported platform) the extent to
		which the client processes network packets and addresses the FDP_RIP.2 requirement.<h:br/><h:br/><h:b>Requirement met by the TOE</h:b><h:br/><h:br/>
               “Resources” in the context of this requirement are network packets being sent through (as opposed to
		“to”, as is the case when a security administrator connects to the TOE) the TOE. The concern is that once
		a network packet is sent, the buffer or memory area used by the packet still contains data from that
		packet, and that if that buffer is reused, those data might remain and make their way into a new packet.
		The evaluator shall check to ensure that the TSS describes packet processing to the extent that they can
		determine that no data will be reused when processing network packets. The evaluator shall ensure that
		this description at a minimum describes how the previous data are zeroized/overwritten and at what
		point in the buffer processing this occurs.<h:br/><h:br/></TSS>
              <Guidance>There are no guidance EAs for this requirement.<h:br/><h:br/></Guidance>
              <Tests>There are no test EAs for this requirement. <h:br/><h:br/> <h:br/><h:br/></Tests>
            </aactivity>
          </f-element>
        </f-component>
      </section>
      <!-- 5.1.3 Security Management (FMT) -->
      <section title="Security Management (FMT)" id="fmt">
        
        The TOE is not required to maintain a separate management role. It is, however, required to provide
	functionality to configure certain aspects of TOE operation that should not be available to the general
	user population. It is possible for the TOE, TOE Platform, or VPN gateway to provide this functionality.
	The client itself has to be configurable - whether it is from the EUD or from a VPN gateway.

		
        <!-- FMT_SMF.1/VPN Specification of Management Functions (VPN) -->
        <f-component cc-id="fmt_smf.1" id="fmt-smf-1-vpn" name="Specification of Management Functions (VPN)" iteration="VPN">
          <consistency-rationale/>
          <f-element id="fmt-smf-1e1-vpn">
            <title> The TSF shall be capable of performing the following management functions: 
				 <selectables linebreak="yes"><selectable id="fmt_smf.1.1_VPN_1" >Specify VPN gateways to use for connections</selectable><selectable id="fmt_smf.1.1_VPN_2" >Specify IPsec VPN clients to use for connections</selectable><selectable id="fmt_smf.1.1_VPN_3" >Specify IPsec-capable network devices to use for connections</selectable><selectable id="fmt_smf.1.1_VPN_4" >Specify client credentials to be used for connections</selectable><selectable id="fmt_smf.1.1_VPN_5" >Configure the reference identifier of the peer</selectable><selectable id="fmt_smf.1.1_VPN_7" ><assignable>any additional management functions</assignable></selectable></selectables> </title>
            <note role="application">Several of the management functions defined above correspond to the use cases
              of the TOE as follows: 
			  <h:ul><h:li>“Specify VPN gateways to use for connections” – Use Case 1</h:li> <h:li>“Specify IPsec VPN clients to use for connections” – Use Case 2 (specifically
                  refers to different end points to use for client-to-client connections)</h:li> <h:li>“Specify IPsec-capable network devices to use for connections” – Use Case 3</h:li></h:ul>
              Selections appropriate for the use cases supported by the TOE should be
              claimed. "Client credentials" will include the client certificate used for IPsec
              authentication, and may also include a PSK.<h:br/><h:br/>
              For TOEs that support only IP address and FQDN identifier types, configuration
              of the reference identifier may be the same as configuration of the peer’s name
              for the purposes of connection.<h:br/><h:br/>
              If there are additional management functions performed by the TOE (including
              those specified in FCS_IPSEC_EXT.1), they should be added in the assignment.
            </note>
            <aactivity level="element">
              <TSS>The evaluator shall check to ensure the TSS describes the client credentials and how they are used by the
		TOE.<h:br/><h:br/></TSS>
              <Guidance>The evaluator shall check to make sure that every management function mandated in the ST for this
		requirement is described in the operational guidance and that the description contains the information
		required to perform the management duties associated with each management function. <h:br/><h:br/></Guidance>
              <Tests>The evaluator shall test the TOE’s ability to provide the management functions by configuring the TOE according to the operational guidance and testing of each management activity listed in the ST. <h:br/><h:br/> <h:br/><h:br/>The evaluator shall ensure that all management functions claimed in the ST can be performed by completing activities described in the AGD. Note that this may be performed in the course of completing other testing.</Tests>
            </aactivity>
          </f-element>
        </f-component>
      </section>
      <!-- 5.1.4 Protection of the TSF (FPT) -->
      <section title="Protection of the TSF (FPT)" id="fpt">
        <ext-comp-def title="TSF Self-Test" fam-id="FPT_TST_EXT">
          <fam-behavior>Components in this family describe requirements for self-test to verify functionality and integrity of the TOE.</fam-behavior>
        </ext-comp-def>
        <!-- FPT_TST_EXT.1 TSF Self-Test -->
        <f-component cc-id="fpt_tst_ext.1" id="fpt-tst-ext-1" name="TSF Self-Test" status="invisible">
          <consistency-rationale/>
          <comp-lev>requires the TOE to perform power on self-tests to verify its functionality and
            the integrity of its stored executable code.</comp-lev>
          <management>No specific management functions are identified.</management>
          <audit>There are no auditable events foreseen. </audit>
          <dependencies>No dependencies.</dependencies>
          <f-element id="fpt-tst-ext-1e1">
            <title>
              The 
               <selectables onlyone="yes"><selectable id="fpt_tst_ext.1.1_1" >TOE</selectable><selectable id="fpt_tst_ext.1.1_2" >TOE platform</selectable></selectables>  
              shall run a suite of self tests during initial start-up (on power on) to demonstrate the correct 
              operation of the TSF.
            </title>
            <aactivity level="component">
              <no-tests/>
            </aactivity>
          </f-element>
          <f-element id="fpt-tst-ext-1e2">
            <title>
              The 
               <selectables onlyone="yes"><selectable id="fpt_tst_ext.1.2_1" >TOE</selectable><selectable id="fpt_tst_ext.1.2_2" >TOE platform</selectable></selectables>  
              shall provide the capability to verify the integrity of stored TSF executable code when it is loaded 
              for execution through the use of the 
               <assignable>cryptographic services provided either by the portion of the TOE described by the Base-PP or by the OE</assignable>.
            </title>
          </f-element>
        </f-component>
        <!-- FPT_TST_EXT.1/VPN TSF Self-Test -->
        <f-component cc-id="fpt_tst_ext.1" id="fpt-tst-ext-1-vpn" name="TSF Self-Test" iteration="VPN">
          <consistency-rationale/>
          <f-element id="fpt-tst-ext-1e1-vpn">
            <title>
				The 
				 <selectables onlyone="yes"><selectable id="fpt_tst_ext.1.1_VPN_1" >TOE</selectable><selectable id="fpt_tst_ext.1.1_VPN_2" >TOE platform</selectable></selectables>  
				shall run a suite of self tests during initial start-up (on power on) to demonstrate the correct 
				operation of the TSF.
            </title>
            <aactivity level="component">
              <TSS>The evaluator shall examine the TSS to ensure that it details the self-tests that are run by the TSF on
		      startup; this description should include an outline of what the tests are actually doing (e.g., rather than saying
		"memory is tested," a description similar to "memory is tested by writing a value to each memory location
		and reading it back to ensure it is identical to what was written" shall be used). The evaluator shall ensure
		that the TSS makes an argument that the tests are sufficient to demonstrate that the TSF is operating
		correctly. If some of the tests are performed by the TOE platform, the evaluator shall check the TSS to
		ensure that those tests are identified and that the ST for each platform contains a description of those
		tests. Note that the tests that are required by this component are those that support security functionality
		in this PP-Module, which may not correspond to the set of all self-tests contained in the
		platform STs.<h:br/><h:br/>

                The evaluator shall examine the TSS to ensure that it describes how the integrity of stored TSF executable
		code is cryptographically verified when it is loaded for execution. The evaluator shall ensure that the TSS
		makes an argument that the tests are sufficient to demonstrate that the integrity of stored TSF executable
		code has not been compromised. The evaluator shall check to ensure that the cryptographic requirements
		listed are consistent with the description of the integrity verification process.<h:br/><h:br/></TSS>
              <Guidance>If not present in the TSS, the evaluator shall ensure that the operational guidance describes the actions that
		take place for successful (e.g. hash verified) and unsuccessful (e.g., hash not verified) cases. For checks
		implemented entirely by the platform, the evaluator shall ensure that the operational guidance for the TOE
		references or includes the platform-specific guidance for each platform listed in the ST.<h:br/><h:br/></Guidance>
              <Tests>
                The evaluator shall perform the following tests:
                <testlist>
                  <test>The evaluator shall perform the integrity check on a known good TSF executable and verifies that the
			check is successful.
                  </test>
                  <test>The evaluator shall modify the TSF executable, performs the integrity check on the modified TSF
			executable, and verifies that the check fails.</test>
                </testlist>
              </Tests>
            </aactivity>
          </f-element>
          <f-element id="fpt-tst-ext-1e2-vpn">
            <title>
				The 
				 <selectables onlyone="yes"><selectable id="fpt_tst_ext.1.2_VPN_1" >TOE</selectable><selectable id="fpt_tst_ext.1.2_VPN_2" >TOE platform</selectable></selectables>  
				shall provide the capability to verify the integrity of stored TSF executable code when it is loaded 
				for execution through the use of the 
				 <assignable>cryptographic services provided either by the portion of the TOE described by the Base-PP or by the OE</assignable>.
            </title>
            <note role="application">
				While the TOE is typically a software package running in the IT Environment, it is
				still capable of performing the self-test activities required above. It should be
				understood, however, that there is a significant dependency on the host
				environment in assessing the assurance provided by the tests mentioned above
				(meaning that if the host environment is compromised, the self-tests will not be
				meaningful).<h:br/><h:br/>
				Cryptographic verification of the integrity is required, but the method by which
				this can be accomplished is specified in the ST in the assignment. The ST author
				will fill in the assignment with references to the cryptographic functions used to
				perform the integrity checks; this will include hashing and may potentially
				include digital signatures signed using X.509 certificates. If the TSF provides the
				cryptographic services used to verify updates, all relevant FCS_COP requirements
				will be identified in the assignment by the ST author.
            </note>
          </f-element>
        </f-component>
      </section>
    </man-sfrs>
    <opt-sfrs>
      <!-- 5.1.5 Identification and Authentication (FIA) -->
      <section title="Identification and Authentication (FIA)" id="fia">
        
        The TOE may support leveraging the biometric API provided by the platform.
        
        
        <ext-comp-def title="Biometric Activation" fam-id="FIA_BMA_EXT">
          <fam-behavior>Components in this family describe the requirements for biometrics when using the VPN client.</fam-behavior>
        </ext-comp-def>
        <!-- FIA_BMA_EXT.1 Biometric Activation -->
        <f-component cc-id="fia_bma_ext.1" id="fia-bma-ext-1" name="Biometric Activation">
          <depends>
            <optional/>
          </depends>
          <consistency-rationale/>
          <comp-lev>defines the use of biometrics when using the VPN client.</comp-lev>
          <management>No specific management functions are identified.</management>
          <audit>No specific audit functions are identified. </audit>
          <f-element id="fia-bma-ext-1e1">
            <title>
              The TSF shall leverage the platform biometric features to confirm the user before initiating a trusted channel.
            </title>
            <note role="application">
              In this context the platform refers to the OS or device and may be part of the TOE if those Base-PPs are leveraged.<h:br/><h:br/></note>
            <aactivity level="element">
              <TSS>The evaluator shall confirm that the TSS describes the calls to the platform and verifies they align with platform documentation.<h:br/><h:br/></TSS>
              <Guidance>The evaluator shall ensure that any configuration details needed to enable the biometric prompt are included in the
		      guidance documentation.<h:br/><h:br/></Guidance>
              <Tests>
                <testlist>
                  <test>The evaluator shall initiate a connection and verify that a biometric prompt is presented and accepted before the
			  connection can proceed.  The evaluator shall also verify the connection does not proceed if the biometric is not presented or accepted.</test>
                </testlist>
              </Tests>
            </aactivity>
          </f-element>
        </f-component>
      </section>
      <!-- 5.1.6 Packet Filtering (FPF) -->
      <section title="Packet Filtering (FPF)" id="fpf">
        <ext-comp-def title="Multifactor Authentication Filtering" fam-id="FPF_MFA_EXT">
          <fam-behavior>Components in this family describe the requirements for multifactor authentication filtering when using the VPN client.</fam-behavior>
        </ext-comp-def>
        <!-- FPF_MFA_EXT.1 Multifactor Authentication Filtering -->
        <f-component cc-id="fpf_mfa_ext.1" id="fpf-mfa-ext-1" name="Multifactor Authentication Filtering">
          <depends>
            <optional/>
          </depends>
          <consistency-rationale/>
          <comp-lev>defines the use and composition of multifactor authentication filtering.</comp-lev>
          <management>No specific management functions are identified.</management>
          <audit>No specific audit functions are identified. </audit>
          <f-element id="fpf-mfa-ext-1e1">
            <title>
            The TSF shall not forward packets to the internal network until the IKE/IPsec tunnel has been established, 
            except those necessary to ensure that the client is authenticated according to FIA_PSK_EXT.1.</title>
            <note role="application">
            If FPF_MFA_EXT.1 is included, FIA_PSK_EXT.1 must be included.
            
            
          </note>
            <aactivity level="element">
              <TSS>The evaluator shall examine the TSS to verify that it describes how authentication packets are identified and how all
		    other traffic is blocked until secondary authentication is successful.<h:br/><h:br/></TSS>
              <Guidance>The evaluator shall examine the operational guidance to verify that it provides any necessary instructions to the administrator on how
		    to enable and configure filtering.<h:br/><h:br/></Guidance>
              <Tests>
                <testlist>
                  <test> 
                  The evaluator shall attempt to connect and verify other traffic is rejected per the filtering rules.  
                  The evaluator shall then provide the supported PSKs and confirm it is accepted and traffic is no longer blocked.</test>
                </testlist>
              </Tests>
            </aactivity>
          </f-element>
        </f-component>
      </section>
    </opt-sfrs>
    <sel-sfrs>
      <!-- 5.1.7 Cryptographic Support (FCS) -->
      <section title="Cryptographic Support (FCS)" id="fcs">
        <ext-comp-def title="EAP-TLS" fam-id="FCS_EAP_EXT">
          <fam-behavior>Components in this family describe the requirements for EAP-TLS.</fam-behavior>
        </ext-comp-def>
        <!-- FCS_EAP_EXT.1 EAP-TLS -->
        <f-component cc-id="fcs_eap_ext.1" id="fcs-eap-ext-1" name="EAP-TLS">
          <depends on-sel="sel-ipsec-e11-eapttls"/>
          <depends on-sel="sel-ipsec-e11-eaptls"/>
          <consistency-rationale/>
          <comp-lev>defines the use of EAP-TLS.</comp-lev>
          <management>No specific management functions are identified.</management>
          <audit>No specific audit functions are identified. </audit>
          <dependencies><no-link>FCS_IPSEC_EXT.1 </no-link>  IPsec</dependencies>
          <f-element id="fcs-eap-ext-1e1">
            <title>
              The TSF shall support
               <selectables><selectable id="fcs_eap_ext.1.1_1" >EAP-TLS as specified in RFC 5216 and updated by RFC 8996</selectable><selectable id="fcs_eap_ext.1.1_2" >EAP-TTLS as specified in RFC 5281 and updated by RFC 8996</selectable></selectables> 
              over a protected channel <h:b>per the Base-PP</h:b> with an authentication server. 
            </title>
            <ext-comp-def-title><title>The TSF shall support <selectables><selectable>EAP-TLS as specified in RFC 5216 and updated by RFC 8996 </selectable> <selectable>EAP-TTLS as specified in RFC 5281 and updated by RFC 8996 </selectable> </selectables> over a protected channel per the Base-PP with an authentication server. </title> </ext-comp-def-title>
            <aactivity level="component">
              <TSS>The evaluator shall verify that the TSS describes the use of EAP options for each of the selected peer authentication 
                mechanisms, that TLS with mutual authentication is used, that the random values are from an appropriate source, 
                and that the EAP MSK is derived from the TLS master key and is used as the IKEv2 shared key.<h:br/><h:br/></TSS>
              <Guidance>The evaluator shall verify that the guidance documents describe any configurable features of the EAP or TLS 
                functionality, including instructions for configuration of the authenticators and registration processes for clients.<h:br/><h:br/></Guidance>
              <Tests>
                Testing for TLS functionality is in accordance with the TLS package. <h:b></h:b>For each supported EAP method claimed in FCS_EAP_TLS_EXT.1.1 and for each authentication method claimed in FCS_EAP_TLS_EXT.1.3, the evaluator shall perform the following tests:
                <testlist>
                  <test>The evaluator shall follow AGD guidance to configure the TSF to use the EAP method claimed. 
                    The evaluator shall follow AGD guidance to configure the TSF to use the authentication method claimed, and 
                    for EAP-TTLS, register a client with the appropriate key material required for the authentication method. 
                    The evaluator shall establish a VPN session using a test client with a valid certificate, and for EAP-TTLS, 
                    configured to provide a correct value for the configured authenticator. The evaluator shall  observe the the 
                    VPN session is successful.</test>
                  <test>(conditional for EAP-TTLS support): The evaluator shall cause the test client with a valid certificate to send 
                    an invalid authenticator for the claimed authentication method.
                    <h:b></h:b>For HOTP, replay the HOTP value sent previously. 
                    <h:b></h:b>For TOTP or PSK, modify a byte of the properly constructed value and observe that the TSF aborts the session.</test>
                  <test>The evaluator shall establish a new, valid certificate for a test client using an identifier not 
                    corresponding to a registered user. For EAP-TTLS, the evaluator shall cause the test client using this 
                    certificate to send a correct authenticator value for the registered user. The evaluator shall initiate a 
                    VPN session from the test client to the TSF and observe that the TSF aborts the session.</test>
                  <test>The evaluator shall follow AGD guidance to configure the TSF to use a supported EAP method and register the 
                    user with the key material required for a supported authentication method. The evaluator shall configure a test 
                    client to respond to an IKEv2 exchange with EAP-request, providing valid phase 1 handshake and valid TLS 
                    handshake, but computing the phase 2 shared key using standard (non-EAP) methods. The evaluator shall initiate 
                    a VPN session between the test client and the TSF, and observe that the TSF aborts the session.
                  </test>
                </testlist>
              </Tests>
            </aactivity>
          </f-element>
          <f-element id="fcs-eap-ext-1e2">
            <title>
              The TSF shall implement 
               <selectables><selectable id="fcs_eap_ext.1.2_1" >EAP-TLS</selectable><selectable id="fcs_eap_ext.1.2_2" >EAP-TTLS</selectable></selectables> 
              with the TSF as the EAP client, an external authentication server as the EAP server and the VPN peer as the supplicant. 
            </title>
          </f-element>
          <f-element id="fcs-eap-ext-1e3">
            <title>
              The TSF shall use the MSK from the 
               <selectables><selectable id="fcs_eap_ext.1.3_1" >EAP-TLS</selectable><selectable id="fcs_eap_ext.1.3_2" >EAP-TTLS</selectable></selectables>  response as the IKEv2 shared secret in the authentication payload.
            </title>
          </f-element>
        </f-component>
      </section>
      <!-- 5.1.8 Identification and Authentication (FIA) -->
      <section title="Identification and Authentication (FIA)" id="fia">
        
        The TOE may support pre-shared keys for use in the IPsec protocol, and may use pre-shared keys in other protocols as well.  
        PSK in the context of this document refer to generated values, memorized values subject to conditioning, one-time passwords, 
        and combinations of the above as described in FIA_PSK_EXT.1.2.
        
        
        
        
        <ext-comp-def title="Pre-Shared Key Composition" fam-id="FIA_PSK_EXT">
          <fam-behavior>Components in this family describe the requirements for pre-shared keys when implementing IPsec.</fam-behavior>
        </ext-comp-def>
        <!-- FIA_PSK_EXT.1 Pre-Shared Key Composition -->
        <f-component cc-id="fia_psk_ext.1" id="fia-psk-ext-1" name="Pre-Shared Key Composition">
          <depends on-fcomp="fpf-mfa-ext-1"/>
          <depends on-sel="sel-ipsec-e11-psk"/>
          <depends on-sel="sel-ipsec-e11-eapttls"/>
          <consistency-rationale/>
          <comp-lev>defines the use and composition of pre-shared keys used for IPsec.</comp-lev>
          <management>No specific management functions are identified.</management>
          <audit>No specific audit functions are identified. </audit>
          <dependencies><no-link>FCS_IPSEC_EXT.1 </no-link>  IPsec</dependencies>
          <f-element id="fia-psk-ext-1e1">
            <title>
              The TSF shall be able to use pre-shared keys for 
               <selectables><selectable id="fia_psk_ext.1.1_1" >IKEv2</selectable><selectable id="fia_psk_ext.1.1_2" >multifactor authentication filtering</selectable></selectables>.
            </title>
            <aactivity level="component">
              <TSS>The evaluator shall examine the TSS to ensure that it identifies all protocols that allow  pre-shared keys. 
                For each protocol identified by the requirement, the evaluator shall confirm that the TSS states which pre-shared key 
                selections are supported.<h:br/><h:br/></TSS>
              <Guidance>The evaluator shall examine the operational guidance to determine that it provides guidance to 
                administrators on how to configure all selected pre-shared key options if any configuration is required.
                
                <h:br/><h:br/>The evaluator shall examine the operational guidance to determine that it provides guidance to administrators on
                how to configure the mandatory_or_not flag per RFC 8784.
              </Guidance>
              <Tests>
                The evaluator shall also perform the following tests for each protocol (or instantiation of a protocol, if performed by a different implementation on the TOE).
                <testlist>
                  <test>For each mechanism selected in FIA_PSK_EXT.1.2, the evaluator shall attempt to establish a connection 
                    and confirm that the connection requires the selected factors in the PSK to establish the connection in alignment with table 1 from RFC 8784. </test>
                </testlist>
              </Tests>
            </aactivity>
          </f-element>
          <f-element id="fia-psk-ext-1e2">
            <title>
              The TSF shall be able to accept the following as pre-shared keys: 
               <selectables><selectable id="pskgen" >generated bit-based</selectable><selectable id="pskpw" >password-based</selectable><selectable id="pskhotp" >HMAC-based one-time password</selectable><selectable id="psktotp" >time-based one-time password</selectable><selectable id="pskgenhotp" >combination of a generated bit-based and HMAC-based one-time password</selectable><selectable id="pskgentotp" >combination of a generated bit-based and time-based one-time password</selectable><selectable id="pskpwhotp" >combination of a password-based and HMAC-based one-time password</selectable><selectable id="pskpwtotp" >combination of a password-based and time-based one-time password</selectable></selectables>  keys.
            </title>
            <ext-comp-def-title><title>The TSF shall be able to accept the following as pre-shared keys: <selectables><selectable>generated bit-based </selectable> <selectable>password-based </selectable> <selectable>HMAC-based one-time password </selectable> <selectable>time-based one-time password </selectable> <selectable>combination of a generated bit-based and HMAC-based one-time password </selectable> <selectable>combination of a generated bit-based and time-based one-time password </selectable> <selectable>combination of a password-based and HMAC-based one-time password </selectable> <selectable>combination of a password-based and time-based one-time password </selectable> </selectables> keys. </title> </ext-comp-def-title>
            <note role="application">
              If “pre-shared keys that conform to RFC 8784” is selected in FCS_IPSEC_EXT.1.11, a generated, bit-based PSK must be used. 
              
              <h:br/><h:br/>If any selection including "generated bit-based" is chosen, then FIA_PSK_EXT.2 must be included. 
              
              <h:br/><h:br/>If any selection including password-based keys is chosen, then FIA_PSK_EXT.3 must be included. 
              
              <h:br/><h:br/>If any selection including HMAC-based one-time password keys is chosen, then FIA_PSK_EXT.4 must be included. 
              
              <h:br/><h:br/>If any selection including time-based one-time password is chosen, then FIA_PSK_EXT.5 must be included.  
              
              <h:br/><h:br/>This requirement is selection-based on FCS_IPSEC_EXT.1.11 or inclusion of FPF_MFA_EXT.1. 
            </note>
          </f-element>
        </f-component>
        <!-- FIA_PSK_EXT.2 Generated Pre-Shared Keys -->
        <f-component cc-id="fia_psk_ext.2" id="fia-psk-ext-2" name="Generated Pre-Shared Keys">
          <depends on-sel="pskgen"/>
          <depends on-sel="pskgenhotp"/>
          <depends on-sel="pskgentotp"/>
          <consistency-rationale/>
          <comp-lev>defines the use and composition of generated pre-shared keys used for IPsec.</comp-lev>
          <management>No specific management functions are identified.</management>
          <audit>The following actions should be auditable if FAU_GEN Security Audit Data Generation is included in the PP/ST: <h:ul><h:li>Failure of the randomization process </h:li> </h:ul> </audit>
          <dependencies><no-link>FIA_PSK_EXT.1 </no-link>  Pre-Shared Key Composition</dependencies>
          <f-element id="fia-psk-ext-2e1">
            <title>
              The TSF shall be able to 
               <selectables><selectable id="fia_psk_ext.2.1_1" >accept externally generated pre-shared keys</selectable><selectable id="fia_psk_ext.2.1_2" >generate 256 bit-based pre-shared keys via the random number generator used by the TSF.</selectable></selectables>.
            </title>
            <note role="application">
              Generated PSKs are expected to be shared between components via an out-of-band mechanism. 
              
              <h:br/><h:br/>This requirement is selection-based on FIA_PSK_EXT.1.<h:br/><h:br/></note>
            <aactivity level="element">
              <TSS>If "generate" is selected, the evaluator shall confirm that this process uses the RBG specified in FCS_RBG.1 (or FCS_RBG_EXT.1 in the case of <xref to="bibAppPP"/> 
                and the output matches the size selected in FIA_PSK_EXT.2.1.<h:br/><h:br/></TSS>
              <Guidance>The evaluator shall confirm the operational guidance contains instructions for entering generated pre-shared keys 
                for each protocol identified in the FIA_PSK_EXT.1.1. <h:br/><h:br/></Guidance>
              <Tests>
                <testlist>
                  <test>[conditional] If "generate" was selected, the evaluator shall generate a pre-shared key and confirm the output matches
			  the size selected in FIA_PSK_EXT.2.1.
                  </test>
                </testlist>
              </Tests>
            </aactivity>
          </f-element>
        </f-component>
        <!-- FIA_PSK_EXT.3 Password-Based Pre-Shared Keys -->
        <f-component cc-id="fia_psk_ext.3" id="fia-psk-ext-3" name="Password-Based Pre-Shared Keys">
          <depends on-sel="pskpw"/>
          <depends on-sel="pskpwhotp"/>
          <depends on-sel="pskpwtotp"/>
          <consistency-rationale/>
          <comp-lev>defines the use and composition of password-based pre-shared keys used for IPsec.</comp-lev>
          <management>No specific management functions are identified.</management>
          <audit>The following actions should be auditable if FAU_GEN Security Audit Data Generation is included in the PP/ST: <h:ul><h:li>Failure of the randomization process </h:li> </h:ul> </audit>
          <dependencies><no-link>FCS_RBG.1 </no-link>  Random Bit Generation (RBG)
            <no-link>FIA_PSK_EXT.1 </no-link>  Pre-Shared Key Composition</dependencies>
          <f-element id="fia-psk-ext-3e1">
            <title>
              The TSF shall support a PSK of up to  <assignable>positive integer of 64 or more</assignable>  characters. 
            </title>
            <aactivity level="component">
              <TSS>The evaluator shall examine the TSS to ensure it describes the process by which the bit-based pre-shared keys are used.  
                
                <h:br/><h:br/>Support for length: The evaluator shall check to ensure that the TSS describes the allowable ranges for PSK lengths,
		      and that at least 64 characters or a length defined by the platform may be specified by the user.
                
                <h:br/><h:br/>Support for character set: The evaluator shall check to ensure that the TSS describes the allowable character set and that
		      it contains the characters listed in the SFR.
                
                <h:br/><h:br/>Support for PBKDF: The evaluator shall examine the TSS to ensure that the use of PBKDF2 is described and that 
		      the key sizes match that described by the ST author.
                
                <h:br/><h:br/>The evaluator shall check that the TSS describes the method by which the PSK is first encoded and then fed 
		      to the hash algorithm. The settings for the algorithm (padding, blocking, etc.) shall be described, and the evaluator 
		      shall verify that these are supported by the selections in this component as well as the selections concerning the hash function itself. 
                
                <h:br/><h:br/>For the NIST SP 800-132-based conditioning of the PSK, the required evaluation activities will be performed
		      when doing the evaluation activities for the appropriate requirements (FCS_COP.1/KeyedHash). 
                
                <h:br/><h:br/>The evaluator shall confirm that the minimum length is described.
                
                <h:br/><h:br/>The ST author shall provide a description in the TSS regarding the salt generation. The evaluator shall confirm
		      that the salt is generated using an RBG described in the DRBG that is generated by the TSF or that is invoked from the operational environment.
                
                <h:br/><h:br/>[conditional] If "password strength meter" or "check the password against a denylist" is selected, the evaluator shall examine the TSS to 
		      ensure any password checking functionality provided by the TSF is described and contains details on how the function operates.<h:br/><h:br/></TSS>
              <Guidance>The evaluator shall confirm the operational guidance contains instructions for entering bit-based pre-shared keys for each 
                protocol identified in the requirement, is generating a bit-based pre-shared key, or both. The evaluator shall confirm that any 
                management functions related to pre-shared keys that are performed by the TOE are specified in the operational guidance.  
                
                <h:br/><h:br/>The guidance must specify the allowable characters for pre-shared keys, and that list must include, at minimum, the same 
                items contained in FIA_PSK_EXT.3.2. 
                
                <h:br/><h:br/>The evaluator shall confirm the operational guidance contains any necessary instructions for enabling and configuring 
		      password checking functionality. <h:br/><h:br/></Guidance>
              <Tests>
                Support for Password/Passphrase characteristics: In addition to the analysis above, the evaluator shall also perform the following tests on a TOE configured according to the operational guidance:
                <testlist>
                  <test>The evaluator shall compose a pre-shared key of at least 64 characters that contains a combination of the allowed characters in accordance
			  with the FIA_PSK_EXT.1.3 and verify that a successful protocol negotiation can be performed with the key. </test>
                  <test>[conditional]: If the TOE supports pre-shared keys of multiple lengths, the evaluator shall repeat Test 1 using the minimum length and invalid 
			  lengths that are below the minimum length, above the maximum length, null length, empty length, or zero length. The minimum test should 
			  be successful, and the invalid lengths must be rejected by the TOE. </test>
                  <test>[conditional]: If the TOE initiates connections, initiate and establish a remote connection, disconnect from the connection, and verify
			  that the PSK is required when initiating the connection a second time.</test>
                  <test>[conditional]: If the TOE supports a password meter, the evaluator shall enter a password and verify the password checker
			  responds per the description in the TSS.</test>
                  <test>[conditional]: If the TOE supports a password denylist, the evaluator shall enter a denylisted password and verify that the
			  password is rejected or flagged as such.</test>
                </testlist>
              </Tests>
            </aactivity>
          </f-element>
          <f-element id="fia-psk-ext-3e2">
            <title>The TSF shall allow PSKs to be composed of any combination of upper case characters, 
              lower case characters, numbers, and the following special characters: "!", "@", "#", "$", "%", "^", "&amp;", "*", "(", and ")", and 
               <selectables><selectable id="fia_psk_ext.3.2_2" ><assignable>other supported special characters</assignable></selectable><selectable id="fia_psk_ext.3.2_3" exclusive="yes">no other characters</selectable></selectables>.
            </title>
          </f-element>
          <f-element id="fia-psk-ext-3e3">
            <title>
              The TSF shall perform Password-based Key Derivation Functions in accordance with a specified cryptographic algorithm [<h:i>HMAC-SHA-384</h:i>], with 
               <assignable>positive integer of 4096 or more</assignable>  iterations, and output cryptographic key sizes [<h:i>256 bits</h:i>]
              that meet the following: [<h:i>NIST SP 800-132</h:i>].
            </title>
            <ext-comp-def-title><title>The TSF shall perform Password-based Key Derivation Functions in accordance with a specified cryptographic algorithm <assignable>cryptographic algorithm used for key derivation </assignable> , with <assignable>positive integer of 4096 or more </assignable> iterations, and output cryptographic key sizes <assignable>output key size </assignable> that meet the following: <assignable>list of standards </assignable> . </title> </ext-comp-def-title>
          </f-element>
          <f-element id="fia-psk-ext-3e4">
            <title>
              The TSF shall not accept PSKs less than 
               <selectables><selectable id="fia_psk_ext.3.4_1" exclusive="yes">a value settable by the administrator</selectable><selectable id="fia_psk_ext.3.4_3" ><assignable>minimum PSK length accepted by the TOE, must be >= 6</assignable></selectable></selectables>  and greater than the maximum PSK length defined in FIA_PSK_EXT.3.1.
            </title>
          </f-element>
          <f-element id="fia-psk-ext-3e5">
            <title>
              The TSF shall generate all salts using an RBG that meets 
               <h:b> <selectables><selectable id="fia_psk_ext.3.5_1" >FCS_RBG.1</selectable><selectable id="fia_psk_ext.3.5_2" >FCS_RBG_EXT.1</selectable></selectables> </h:b> and with entropy of  <assignable>value equal to or greater than 256</assignable>  bits.
            </title>
            <ext-comp-def-title><title>The TSF shall generate all salts using an RBG that meets FCS_RBG.1 and with entropy of <assignable>value equal to or greater than 256 </assignable> bits. </title> </ext-comp-def-title>
            <note role="application">For the first selection, the ST author selects FCS_RBG.1 if the TOE implements its own DRBG. The ST author selects FCS_RBG_EXT.1 if <xref to="bibAppPP"/> is the Base-PP for the TOE and the TSF relies on a DRBG in its operational environment.</note>
          </f-element>
          <f-element id="fia-psk-ext-3e6">
            <title>
              The TSF shall require the PSK to be entered before every initiated connection.
            </title>
          </f-element>
          <f-element id="fia-psk-ext-3e7">
            <title>
                The TSF shall 
                 <selectables><selectable id="fia_psk_ext.3.7_1" >provide a password strength meter</selectable><selectable id="fia_psk_ext.3.7_2" >check the password against a denylist</selectable><selectable id="fia_psk_ext.3.7_3" exclusive="yes">perform no action to assist the user in choosing a strong password</selectable></selectables>. 
              </title>
            <note role="application">
              For FIA_PSK_EXT.3.1, the ST author assigns the maximum size of the PSK it supports; it must support at least 64 characters or a length defined by the platform. 
              
              <h:br/><h:br/>For FIA_PSK_EXT.3.2, the ST author assigns any other supported characters; if there are no other supported characters, they should select
		    "no other characters."<h:br/><h:br/>For FIA_PSK_EXT.3.3, the ST author selects the parameters based on the PBKDF used by the TSF. 
              
              <h:br/><h:br/>For FIA_PSK_EXT.3.4, if the minimum length is settable, then the ST author chooses "a value settable by the administrator." If the minimum length is not settable, 
              the ST author fills in the assignment with the minimum length the PSK must be. This requirement is to ensure bounds work properly.
              
              <h:br/><h:br/>For FIA_PSK_EXT.3.7, the ST author may select one, both, or neither of the functions in alignment with NIST SP 800-63b.
              
              <h:br/><h:br/>This requirement is selection-based on FIA_PSK_EXT.1. 
              </note>
          </f-element>
        </f-component>
        <!-- FIA_PSK_EXT.4 HMAC-Based One-Time Password Pre-shared Keys Support -->
        <f-component cc-id="fia_psk_ext.4" id="fia-psk-ext-4" name="HMAC-Based One-Time Password Pre-shared Keys Support">
          <depends on-sel="pskhotp"/>
          <depends on-sel="pskgenhotp"/>
          <depends on-sel="pskpwhotp"/>
          <consistency-rationale/>
          <comp-lev>defines the use and composition of HOTP pre-shared keys used for IPsec.</comp-lev>
          <management>No specific management functions are identified.</management>
          <audit>No specific audit functions are identified. </audit>
          <dependencies><no-link>FIA_PSK_EXT.1 </no-link>  Pre-Shared Key Composition</dependencies>
          <f-element id="fia-psk-ext-4e1">
            <title>
              The TSF shall accept and send an HOTP while initiating a VPN connection.
            </title>
            <note role="application">
              This requirement is selection-based on FIA_PSK_EXT.1
              
         
            </note>
            <aactivity level="element">
              <TSS>The evaluator shall verify the TSS describes how the HOTP is input into the client and how that value is sent to the server.</TSS>
              <Guidance>
                The evaluator shall verify the operational guidance contains any configuration necessary to enable HOTP.<h:br/><h:br/></Guidance>
              <Tests>
                <testlist>
                  <test>
                    The evaluator shall configure the TOE to use a supported HOTP factor, then attempt to establish a connection using that factor.  
                    The evaluator shall verify the client prompts the user for the HOTP before initiating the connection.  
                    The evaluator shall verify the server validates the HOTP or receives confirmation from an authentication server before establishing the channel.
                  </test>
                </testlist>
              </Tests>
            </aactivity>
          </f-element>
        </f-component>
        <!-- FIA_PSK_EXT.5 Time-Based One-Time Password Pre-shared Keys Support -->
        <f-component cc-id="fia_psk_ext.5" id="fia-psk-ext-5" name="Time-Based One-Time Password Pre-shared Keys Support">
          <depends on-sel="psktotp"/>
          <depends on-sel="pskgentotp"/>
          <depends on-sel="pskpwtotp"/>
          <consistency-rationale/>
          <comp-lev>defines the use and composition of TOTP pre-shared keys used for IPsec.</comp-lev>
          <management>No specific management functions are identified.</management>
          <audit>No specific audit functions are identified. </audit>
          <dependencies><no-link>FIA_PSK_EXT.1 </no-link>  Pre-Shared Key Composition</dependencies>
          <f-element id="fia-psk-ext-5e1">
            <title>
              The TSF shall accept and send a TOTP while initiating a VPN connection.
            </title>
            <note role="application">
          This requirement is selection-based on FIA_PSK_EXT.1.
            </note>
            <aactivity level="element">
              <TSS>The evaluator shall verify the TSS describes how the TOTP is input into the client and how that value is sent to the server.</TSS>
              <Guidance>
                The evaluator shall verify the operational guidance contains any configuration necessary to enable TOTP.<h:br/><h:br/></Guidance>
              <Tests>
                <testlist>
                  <test>
                    The evaluator shall configure the TOE to use a supported TOTP factor, then attempt to establish a connection using that factor.  
                    The evaluator shall verify the client prompts the user for the TOTP before initiating the connection.  
                    The evaluator shall verify the server validates the TOTP or receives confirmation from an authentication server before establishing the channel.</test>
                </testlist>
              </Tests>
            </aactivity>
          </f-element>
        </f-component>
      </section>
    </sel-sfrs>
    <obj-sfrs>
      <!-- 5.1.9 Security Audit (FAU) -->
      <section title="Security Audit (FAU)" id="fau">
        <!-- FAU_SEL.1/VPN Selective Audit -->
        <f-component cc-id="fau_sel.1" id="fau-sel-1-vpn" name="Selective Audit" iteration="VPN">
          <depends>
            <objective/>
          </depends>
          <consistency-rationale/>
          <f-element id="fau_sel-1-1_VPN">
            <title>
              The  <h:b> <selectables onlyone="yes"><selectable id="fau_sel.1.1_VPN_1" >TSF</selectable><selectable id="fau_sel.1.1_VPN_2" >TOE platform</selectable></selectables> </h:b> 
				shall be able to select the set of events to be audited from the set of all auditable events based on
				the following attributes:
				[ <h:i>event type, <h:b>[success of auditable security events, failure of auditable security events]</h:b>, <assignable>list of additional attributes that audit selectivity is based upon</assignable> </h:i>].
            </title>
            <note role="application">
				The intent of this requirement is to identify all criteria that can be selected to
				trigger an audit event. This can be configured through an interface on the client
				for a user or administrator to invoke, or it could be an interface that the VPN
				gateway uses to instruct the client on which events are to be audited. For the ST
				author, the assignment is used to list any additional criteria or “none”. The
				auditable event types are listed in the Auditable Events table<h:br/><h:br/>
				The intent of the first selection is to allow for the case where the underlying
				platform is responsible for some audit log generation functionality.
            </note>
            <aactivity level="element">
              <TSS>There are no TSS EAs for this SFR.<h:br/><h:br/></TSS>
              <Guidance>The evaluator shall review the administrative guidance to ensure that the guidance itemizes all event
		types, as well as describes all attributes that are to be selectable in accordance with the requirement, to
		include those attributes listed in the assignment. The administrative guidance shall also contain
		instructions on how to set the pre-selection or how the VPN gateway will configure the client, as well as
		explain the syntax (if present) for multi-value pre-selection. The administrative guidance shall also identify
		the audit data that are always recorded, regardless of the selection criteria currently being enforced.<h:br/><h:br/></Guidance>
              <Tests>
                The evaluator shall perform the following tests:
                <testlist>
                  <test>For each attribute listed in the requirement, the evaluator shall devise a test to show that selecting
			the attribute causes only audit events with that attribute (or those that are always recorded, as identified
			in the administrative guidance) to be recorded.
                </test>
                  <test>[conditional] If the TSF supports specification of more complex audit pre-selection criteria (e.g.,
			multiple attributes, logical expressions using attributes), then the evaluator shall devise tests showing that
			this capability is correctly implemented. The evaluator shall also, in the test plan, provide a short narrative
			justifying the set of tests as representative and sufficient to exercise the capability.
                </test>
                </testlist>
              </Tests>
            </aactivity>
          </f-element>
        </f-component>
      </section>
    </obj-sfrs>
    <impl-dep-sfrs>
      <!-- 5.1.10 Security Audit (FAU) -->
      <section title="Security Audit (FAU)" id="fau">
        <!-- FAU_GEN.1/VPN Audit Data Generation -->
        <f-component cc-id="fau_gen.1" id="fau-gen-1-vpn" name="Audit Data Generation" iteration="VPN">
          <consistency-rationale/>
          <f-element id="fau-gen-1e1-vpn">
            <title>
	        The TSF  <h:b>and <selectables onlyone="yes"><selectable id="fau_gen.1.1_VPN_1" >TOE platform</selectable><selectable id="fau_gen.1.1_VPN_2" >no other component</selectable></selectables> </h:b> 
	        shall be able to generate audit data of the following auditable events: 
	        <h:ol><h:li>Start-up and shutdown of the audit functions;</h:li> <h:li>All auditable events for the [<h:i>not specified</h:i>] level of audit;</h:li> <h:li>All administrative actions;</h:li> <h:li>[<h:i>Specifically defined auditable events listed in the Auditable Events tables</h:i>].</h:li></h:ol></title>
            <note role="application">
	        
	        This requirement is implementation-dependent on the MDF PP, GPOS PP, or MDM PP
	        being the Base-PP claimed by the TOE. In this case, this requirement must be
	        claimed.
	        <h:br/><h:br/>
	        For the App PP Base-PP, this requirement is strictly optional.
	        <h:br/><h:br/>
	        In the case of "a," the audit functions referred to are those provided by the TOE.
	        For example, in the case that the TOE was a stand-alone executable, auditing
	        the startup and the shutdown of the TOE itself would be sufficient to meet the
	        requirements of this clause. <h:br/><h:br/>
	        Many auditable aspects of the SFRs included in this document deal with
	        administrative actions. Item c above requires all administrative actions to be
	        auditable, so no additional specification of the auditability of these actions is
	        present in the Auditable Events table. While the TOE itself does not need to
	        provide the ability to perform I&amp;A for an administrator, this requirement implies
	        that the TOE possess the capability to audit the events described by the Base-PP
	        as "administrative actions" (primarily dealing with configuration of the
	        functionality provided by the TOE). <h:br/><h:br/>
	        The auditable events defined in the Auditable Events table are for the SFRs that
	        are explicitly defined in this PP-Module (<xref to="at-mandatory"/>, <xref to="at-optional"/>,
	        <xref to="at-objective"/>, <xref to="at-impl-dep"/>, and <xref to="at-sel-based"/>). For any SFRs that are included as part of
	        the TOE based on the claimed Base-PP (as defined in the Auditable Events tables in the Additional SFRs section for the corresponding Base-PP claim),
	        it is expected that any applicable
	        auditable events defined for those SFRs in the Base-PP are also claimed as part
	        of the TSF. These auditable events only apply if the client actually performs these
	        functions. If the platform performs any of these actions, then the platform is
	        responsible for performing the auditing, not the TSF.
	      </note>
            <aactivity level="component">
              <TSS>The evaluator shall examine the TSS to determine that it describes the auditable events and the
	          component that is responsible for each type of auditable event.<h:br/><h:br/></TSS>
              <Guidance>The evaluator shall check the operational guidance and ensure that it lists all of the auditable events and
	          provides a format for audit data. All audit data format types must be covered, along with a brief
	          description of each field. The evaluator shall check to make sure that every audit event type mandated by
	          the PP-Module for VPN Clients is described and that the description of the fields contains the information
	          required in FAU_GEN.1.2/VPN, and the additional information specified in the Auditable Events table of
	          the PP-Module for VPN Clients.
	          <h:br/><h:br/>
	          
	          In particular, the evaluator shall ensure that the operational guidance is clear in relation to the contents
	          for failed cryptographic events. In the Auditable Events table of the PP-Module for VPN Clients, information
	          detailing the cryptographic mode of operation and a name or identifier for the object being encrypted is
	          required. The evaluator shall ensure that name or identifier is sufficient to allow an administrator
	          reviewing the audit log to determine the context of the cryptographic operation (for example, performed
	          during a key negotiation exchange, performed when encrypting data for transit) as well as the non-TOE
	          endpoint of the connection for cryptographic failures relating to communications with other IT systems.<h:br/><h:br/>
	          
	          The evaluator shall also make a determination of the administrative actions that are relevant in the
	          context of the PP-Module for VPN Clients. The TOE may contain functionality that is not evaluated in the
	          context of the PP-Module for VPN Clients because the functionality is not specified in an SFR. This functionality
	          may have administrative aspects that are described in the operational guidance. Since such administrative
	          actions will not be performed in an evaluated configuration of the TOE, the evaluator shall examine the
	          operational guidance and make a determination of which administrative commands, including
	          subcommands, scripts, and configuration files, are related to the configuration (including enabling or
	          disabling) of the mechanisms implemented in the TOE that are necessary to enforce the requirements
	          specified in the PP-Module for VPN Clients, which thus form the set of “all administrative actions”. The
	          evaluator may perform this activity as part of the activities associated with ensuring the AGD_OPE
	          guidance satisfies the requirements.<h:br/><h:br/>
	          
	          For each required auditable event, the evaluator shall examine the operational guidance to determine
	          that it is clear to the reader where each event is generated (e.g. the TSF may generate its own audit logs
	          in one location while the platform-provided auditable events are generated elsewhere).<h:br/><h:br/></Guidance>
              <Tests>The evaluator shall test the TOE’s ability to correctly generate audit data by having the TOE generate audit data in accordance with the EAs associated with the functional requirements in the PP-Module for VPN Clients. Additionally, the evaluator shall test that each administrative action applicable in the context of the PP-Module for VPN Clients is auditable. When verifying the test results, the evaluator shall ensure the audit data generated during testing match the format specified in the guidance and that the fields in each audit record have the proper entries. <h:br/><h:br/> <h:br/><h:br/>Note that the testing here can be accomplished in conjunction with the testing of the security mechanisms directly. For example, testing performed to ensure that the administrative guidance provided is correct verifies that AGD_OPE.1 is satisfied and should address the invocation of the administrative actions that are needed to verify the audit data is generated as expected.</Tests>
            </aactivity>
          </f-element>
          <f-element id="fau-gen-1e2-vpn">
            <title>The TSF  <h:b>and <selectables onlyone="yes"><selectable id="fau_gen.1.2_VPN_1" >TOE platform</selectable><selectable id="fau_gen.1.2_VPN_2" >no other component</selectable></selectables> </h:b> 
	        shall record within the audit data at least the following information: 
	        <h:ol><h:li>Date and time of the event, type of event, subject identity, and the outcome
	            (success or failure) of the event; and</h:li> <h:li>For each audit event type, based on the auditable event definitions of the
	            functional components included in the PP<h:b>-Module/ST</h:b>, [<h:i>information
	              specified in column three of the Auditable Events tables</h:i>].</h:li></h:ol></title>
          </f-element>
        </f-component>
      </section>
    </impl-dep-sfrs>
  </sec:Security_Requirements>
  <bibliography>
    <cc-entry/>
  </bibliography>
</Module>
