<Module xmlns="https://niap-ccevs.org/cc/v1" xmlns:h="http://www.w3.org/1999/xhtml" xmlns:sec="https://niap-ccevs.org/cc/v1/section" name="Virtual Private Network (VPN) Clients" boilerplate="yes" target-product="VPN client" target-products="VPN clients">
  <PPReference>
    <ReferenceTable>
      <PPVersion>
        2.6
      </PPVersion>
      <PPAuthor>
        National Information Assurance Partnership
      </PPAuthor>
      <PPPubDate>
        2025-01-31
      </PPPubDate>
      <Keywords>
        VPN, VPN Client
      </Keywords>
    </ReferenceTable>
  </PPReference>
  <RevisionHistory>
    <entry>
      <version>
        2.6
      </version>
      <date>
        2025-01-31
      </date>
      <subject>
        CC:2022 conversion, limitation of cryptographic algorithms to CNSA 1.0, incorporation of TDs
        <h:br/>
      </subject>
    </entry>
    <entry>
      <version>
        2.5
      </version>
      <date>
        2024-06-24
      </date>
      <subject>
        Incorporation of TC feedback:
        <h:ul>
          <h:li>
            Incorporation of TDs: 0662, 0672, 0690, 0697, 0711, 0725, 0753, 0788
          </h:li>
          <h:li>
            Corrections to Base-PP references
          </h:li>
          <h:li>
            Definition of auditable events for Additional SFRs
          </h:li>
          <h:li>
            Explicit association of evaluation activities with components and elements
          </h:li>
        </h:ul>
      </subject>
    </entry>
    <entry>
      <version>
        2.4
      </version>
      <date>
        2022-03-31
      </date>
      <subject>
        Incorporation of TC feedback
      </subject>
    </entry>
    <entry>
      <version>
        2.3
      </version>
      <date>
        2021-08-10
      </date>
      <subject>
        Support for MDF, Bluetooth updates
      </subject>
    </entry>
    <entry>
      <version>
        2.2
      </version>
      <date>
        2021-01-05
      </date>
      <subject>
        Update release
      </subject>
    </entry>
    <entry>
      <version>
        2.1
      </version>
      <date>
        2019-11-14
      </date>
      <subject>
        Initial Release
      </subject>
    </entry>
  </RevisionHistory>
  <release-notes><h:h3>TDs Applied</h:h3></release-notes><include-pkg id="pkg-ssh">
    <git>
      <url>
        https://github.com/commoncriteria/ssh
      </url>
      <branch>
        master
      </branch>
    </git>
    <url>
      https://www.niap-ccevs.org/protectionprofiles/515
    </url>
  </include-pkg>
  <include-pkg id="pkg-tls">
    <git>
      <url>
        https://github.com/commoncriteria/tls
      </url>
      <branch>
        release-2.0
      </branch>
    </git>
    <url>
      https://www.niap-ccevs.org/protectionprofiles/465
    </url>
    <depends on="fcs-eap-ext-1"/>
  </include-pkg>
  <include-pkg id="pkg-x509">
    <git>
      <url>
        https://github.com/commoncriteria/X509
      </url>
      <branch>
        master
      </branch>
    </git>
    <url>
      https://www.niap-ccevs.org/protectionprofiles/511
    </url>
  </include-pkg>
  <pp-preferences/>
  <sec:Introduction>
    <sec:Overview>
      <comment>
        FIA_X509_EXT references to the Base-PPs are now removed and where appropriate the X.509 package is referenced instead. However, it's unclear whether there is still sufficient mechanism to actually 'force' the X.509 SFRs to be included. That is to say, there is nothing in here that says "because IPsec functionality is dependent on X.509 validation, and because the Base-PPs conform to the X.509 FP, the ST shall make the relevant X.509 FP claims."</comment>
      The scope of this Protection Profile Module (PP-Module) is to describe the security functionality of a virtual private network (VPN)
      client in terms of
      <xref g="CC"/>
      and to define functional and assurance requirements for such
      products. This PP-Module is intended for use with the following Base-PPs:
      <h:ul>
        <h:li>
          Protection Profile for General Purpose Operating Systems (GPOS PP), Version 4.3
        </h:li>
        <h:li>
          Protection Profile for Mobile Device Fundamentals (MDF PP), Version 3.3
        </h:li>
        <h:li>
          Protection Profile for Application Software (App PP), Version 2.0
        </h:li>
        <h:li>
          Protection Profile for Mobile Device Management (MDM PP), Version 4.0
        </h:li>
      </h:ul>
      These Base-PPs are all valid because a VPN client may be a specific type of stand-alone software
      application or a built-in component of an operating system (OS), whether desktop or mobile. Regardless of
      which Base-PP is claimed, the VPN client functionality defined by this PP-Module will rely on the Base-PP.
      Sections 5.1 through 5.4 of this PP-Module describe the relevant functionality for each Base-PP,
      including specific selections and assignments, or inclusion of optional requirements that must be made as
      needed to support the VPN client functionality.
    </sec:Overview>
    <tech-terms>
      <term full="Administrator">
        A user that has administrative privilege to configure the TOE in privileged
        mode.
      </term>
      <term full="Authorized">
        An entity granted access privileges to an object, system, or system entity.
      </term>
      <term full="Critical Security Parameter" abbr="CSP">
        Security related information such as secret and private cryptographic keys, and
        authentication data such as passwords and PINs, whose disclosure or
        modification can compromise the security of a cryptographic module.
      </term>
      <term full="Entropy Source">
        This cryptographic function provides a seed for a random number generator
        by accumulating the outputs from one or more noise sources. The
        functionality includes a measure of the minimum work required to guess a
        given output and tests to ensure that the noise sources are operating
        properly.
      </term>
      <term full="IT Environment">
        Hardware and software that are outside the TOE boundary that support the
        TOE functionality and security policy.
      </term>
      <term full="Private Network">
        A network that is protected from access by unauthorized users or entities.
      </term>
      <term full="Privileged Mode">
        A TOE operational mode that allows a user to perform functions that require
        IT environment administrator privileges.
      </term>
      <term full="Public Network">
        A network that is visible to all users and entities and does not protect against
        unauthorized access (e.g. internet).
      </term>
      <term full="Threat Agent">
        An entity that tries to harm an information system through destruction,
        disclosure, modification of data, or denial of service.
      </term>
      <term full="Unauthorized User">
        An entity (device or user) that has not been authorized by an authorized
        administrator to access the TOE or private network.
      </term>
      <term full="Unprivileged Mode">
        A TOE operational mode that only provides VPN client functions for the VPN
        client user.
      </term>
      <term full="VPN Client">
        The TOE; allows remote users to use client computers to establish an
        encrypted IPsec tunnel across an unprotected public network to a private
        network.
      </term>
      <term full="VPN Client User">
        A user operating the TOE in unprivileged mode.
      </term>
      <term full="VPN Gateway">
        A component that performs encryption and decryption of IP packets as they
        cross the boundary between a private network and a public network.
      </term>
      <term full="Advanced Encryption Standard" abbr="AES"/>
      <term full="Certificate Revocation List" abbr="CRL"/>
      <term full="Diffie-Hellman" abbr="DH"/>
      <term full="Distinguished Name" abbr="DN"/>
      <term full="Digital Signature Standard" abbr="DSS"/>
      <term full="Elliptic Curve Cryptography" abbr="ECC"/>
      <term full="Encapsulating Security Protocol" abbr="ESP"/>
      <term full="End-User Device" abbr="EUD"/>
      <term full="Finite Field Cryptography" abbr="FFC"/>
      <term full="Federal Information Processing Standards" abbr="FIPS"/>
      <term full="Fully Qualified Domain Name" abbr="FQDN"/>
      <term full="Operating System (OS)" abbr="OS"/>
      <term full="Internet Key Exchange" abbr="IKE"/>
      <term full="Internet Protocol" abbr="IP"/>
      <term full="Information Technology" abbr="IT"/>
      <term full="Mobile Device  (MD)" abbr="MD"/>
      <term full="Network Address Translation" abbr="NAT"/>
      <term full="National Institute of Standards and Technology" abbr="NIST"/>
      <term full="Online Certificate Status Protocol" abbr="OCSP"/>
      <term full="Organizational Security Policy" abbr="OSP"/>
      <term full="Publication" abbr="PUB"/>
      <term full="Random Bit Generation" abbr="RBG"/>
      <term full="Request For Comment" abbr="RFC"/>
      <term full="Security Association" abbr="SA"/>
      <term full="Supporting Document" abbr="SD"/>
      <term full="Secure Hash Algorithm" abbr="SHA"/>
      <term full="Security Policy Database" abbr="SPD"/>
      <term full="Virtual Private Network" abbr="VPN"/>
    </tech-terms>
    <section title="Compliant Targets of Evaluation" id="TOEdescription">
      The TOE defined by this PP-Module is the VPN client, a software application that runs on a physical or
      virtual host platform, used to establish a secure IPsec connection between that host platform and a
      remote system. The VPN client is intended to be located outside or inside of a private network, and
      establishes a secure tunnel to an IPsec peer. For the purposes of this PP-Module, IPsec peers are defined
      as:
      <h:ul>
        <h:li>
          VPN gateways
        </h:li>
        <h:li>
          Other VPN clients
        </h:li>
        <h:li>
          An IPsec-capable network device (supporting IPsec for the purposes of management)
        </h:li>
      </h:ul>
      The tunnel provides confidentiality, integrity, and data authentication for information that travels across
      a less trusted (sometimes public) network. All VPN clients that comply with this document will support
      IPsec.
      <h:br/>
      <h:br/>
      This PP-Module extends the GPOS PP when the VPN client is installed on an OS discussed
      in that PP (e.g., Windows, Mac OS, Linux). This PP-Module extends the MDF PP when the VPN client is
      installed on a self-contained mobile device that is bundled with an OS (e.g. Android,
      BlackBerry OS, iOS, Windows Mobile). This PP-Module extends the App PP when the VPN client is
      provided by a third party and is a standalone application that is not a bundled part of an OS
      or mobile device. This PP-Module extends the MDM PP when the VPN client is included with
      MDM server software that is used for centralized deployment and administration of enterprise mobile
      device policies.
      <h:br/>
      <h:br/>
      As a PP-Module of any of these PPs, it is expected that the content of this PP-Module and the chosen
      Base-PP be appropriately combined in the context of each product-specific ST. This PP-Module has been specifically defined such that there should be no difficulty or ambiguity in doing so.
      When this PP-Module is used, conformant TOEs are obligated to implement the functionality required in
      the claimed Base-PP with the additional functionality defined in this PP-Module in response to the
      threat environment discussed in this PP-Module.
      <sec:TOE_Boundary>
        The TOE defined by this PP-Module is purely a software solution executing on a platform (some sort of
      OS running on hardware). Depending on the Base-PP claimed as part of the TOE, the
      platform may also be part of the TOE or it may be an environmental component that the TOE vendor has
      no control over. Regardless of whether the platform itself is within the scope of the evaluation, the VPN
      client itself will rely on the platform for its execution domain and proper usage. The vendor is expected
      to provide sufficient installation and configuration instructions to identify an Operational Environment (OE)
      with the necessary features and to provide instructions for how to configure it correctly.
        <h:br/>
        <h:br/>
        The PP-Module contains requirements that must be met by the TOE. Depending on the Base-PP that is
      claimed, there may be some variation in the applicable requirements. This is because a given Base-PP
      may include one or more requirements that the VPN client can inherit but are not shared between each
      possible Base-PP.
        <h:br/>
        <h:br/>
        This is somewhat different than other PPs, but addresses most implementations of VPN clients where
      some part of the functionality of the IPsec tunnel is provided by the platform. In terms of the
      cryptographic primitives (random bit generation, encryption and decryption, key generation, etc.) it is
      actually desirable that a well-tested implementation in the platform is used rather than trying to
      implement these functions in each client.
        <h:br/>
        <h:br/>
        Requirements that can be satisfied by either the TOE or the platform are identified in Section 5 by text
      such as “The [selection: TSF, TOE platform] shall…” The ST author will make the appropriate selection
      based on where that element is implemented. It is allowable for some elements in a component to be 
      implemented by the TOE, while other elements in that same component be implemented by the
      platform (requirements on the usage of X.509 certificates is an example of where this might be the case,
      where using the information contained in the certificates and the implementation of revocation
      checking may be done by the TOE, but storage and protection of the certificates may be done by the
      platform). Note that in the cases where this PP-Module is used to extend the GPOS PP or MDF PP, the
      TOE includes both the VPN client and the platform. In this case, it is appropriate to indicate that the TOE
      satisfies this requirement. However, the ST author should make it clear, for each of these components,
      which are implemented by the VPN client portion of the TOE versus the platform portion.
        <h:br/>
        <h:br/>
        A Supporting Document (SD) accompanies this PP-Module and contains guidance for how to evaluate the
requirements defined by the PP-Module, expressed as Evaluation Activities (EAs). EAs will differ
      based on where the function that meets the requirement is implemented. In most cases, requirements
      implemented by the platform will require that the evaluator examine documents pertaining to the
      platform (generally the ST), while requirements implemented by the TOE may require examination of
      the TSS, examination of the Operational Guidance, or execution of evaluator testing. For
      requirements implemented by the platform, there may also be requirements where the evaluator must
      examine the interfaces used by the TOE to access these functions on the platform. This ensures that the
      functionality being invoked to satisfy the requirements of this PP-Module is the same functionality that
      was evaluated.
        <h:br/>
        <h:br/>
        Given the degree of coupling between a VPN client and its underlying platform, it is expected that the
      client will be tested on each platform claimed in the ST. In cases where the platforms are simply
      different versions of the same OS (provided by the same platform vendor), an equivalency
      argument may be made in lieu of testing on each version. The argument would have to demonstrate
      that the client interacts in exactly the same way with the versions of the OS (i.e., the same APIs are used
      with the same parameters, the network stack is modified with exactly the same kernel modules). The
      evaluator shall use the operational guidance to configure the TOE and underlying platform.
        <h:br/>
        <h:br/>
        A TOE that conforms to this PP-Module will implement the Internet Engineering Task Force (IETF)
      IPsec Security Architecture for the Internet Protocol, RFC 4301, as well as
      the IPsec Encapsulating Security Payload (ESP) protocol. IPsec ESP is specified in RFC 2406 and RFC 4303.
      The IPsec VPN client will support ESP in either tunnel mode, transport mode, or both.
        <h:br/>
        <h:br/>
        The IPsec VPN client will use the Internet Key Exchange (IKE)v1 protocol, IKEv2, or both. IKEv1 is
      implemented as defined in RFCs 2407, 2408, 2409, and 4109, and IKEv2 is implemented as specified in RFC
      7296 and 4307 to authenticate
      and establish session keys with the VPN entities. The IKEv2 implementation also requires mandatory support for network address translation (NAT)
      traversal as specified in section 2.23 of RFC 7296.
        <h:br/>
        <h:br/>
        To show that the TSF implements the RFCs correctly, the evaluator shall perform the EAs
      documented in the SD that accompanies this PP-Module. In future versions of this
      PP-Module, EAs may be modified or new ones may be introduced that cover more aspects of RFC compliance
      than what is currently described in this publication.
        <h:br/>
        <h:br/>
        The IPsec VPN client enables encryption of all information that flows between itself and its IPsec peer.
      The VPN client serves as an endpoint for an IPsec VPN connection and performs a number of
      cryptographic functions related to establishing and maintaining that connection. If the cryptography
      used to perform endpoint authentication, generate keys, and encrypt information is sufficiently robust
      and the implementation has no critical design mistakes, an adversary will be unable to exhaust the
      encryption key space to obtain the data. Compliance with IPsec standards, use of a properly seeded
      Random Bit Generator (RBG), and secure authentication factors will ensure that access to the 
      transmitted information cannot be obtained with less work than a full exhaust of the key space. Any
      plaintext secret and private keys or other cryptographic security parameters will be zeroized when no
      longer in use to prevent disclosure of security critical data.
      </sec:TOE_Boundary>
    </section>
    <sec:Use_Cases>
      A VPN client allows users on the TOE platform to establish secure IPsec communications, providing
      confidentiality, integrity, and protection of data, across a less trusted network to secure data in
      transit. This PP-Module defines three use cases for VPN clients. A conformant TOE will implement one or
      more of the use cases specified below.
      <h:br/>
      <h:br/>
      <usecases>
        <usecase title="TOE to VPN Gateway" id="usecase1">
          <description>
            A VPN client allows users on the TOE platform to establish an encrypted IPsec tunnel across a
            less trusted, often unprotected, public network to a private network (see ). In this case,
            the TOE provides encryption and decryption of network packets as they leave and arrive on the VPN client’s
            underlying platform. IP packets crossing from the private network to the public network will be
            encrypted if their destination is a remote access VPN client supporting the same VPN policy as
            the source network. 
            The TOE is responsible for encrypting the packets that are intended to be received by the target
            on the private network and then encapsulating these packets in a way that allows the VPN
            gateway to securely receive them and forward them to their final destination.
          </description>
        </usecase>
        <usecase title="TOE to VPN Client" id="usecase2">
          <description>
            A VPN client may additionally or alternatively allow a client computer to connect directly to
              another computer running a VPN client (see ). In this case, the functionality of the VPN
              client is to connect directly to another endpoint system to facilitate point-to-point communications with that system.
              IPsec transport mode is used for end-to-end communications. In this use case, the content of
              the packet data (payload) is encrypted but the original IP header is preserved. Inherent to this
              use case, when two peers are communicating directly, is the disclosure of the
              source and destination of the packets. Users should take into consideration any security risks
              associated with this disclosure when architecting their networks in line with this use case.
          </description>
        </usecase>
        <usecase title="TOE to IPsec-Capable Network Device" id="usecase3">
          <description>
            Similar to Use Case 2 above, a VPN client TOE can also be used to establish a secure connection
            to an IPsec-capable network device using IPsec, similar to how an SSH connection might be used. In this case,
            where a network device is being managed remotely over an IPsec connection, the network
            device itself must contain IPsec functionality to act as the peer for the connection (see ).
            
            While this will behave functionally the same way as the scenario described by Use Case 2, the
            user of the TOE in Use Case 3 is a network administrator who is assumed to have administrative
            access to the network device they are connecting to.
          </description>
        </usecase>
      </usecases>
    </sec:Use_Cases>
  </sec:Introduction>
  <sec:Conformance_Claims boilerplate="no">
    <CClaimsInfo cc-version="cc-2022r1" cc-approach="direct-rationale">
      <cc-st-conf>
        exact
      </cc-st-conf>
      <cc-pt2-conf>
        extended
      </cc-pt2-conf>
      <cc-pt3-conf>
        extended
      </cc-pt3-conf>
      <cc-pp-conf/>
      <cc-pp-config-with>
        <PP-cc-ref>
          Protection Profile for General Purpose Operating Systems, Version 4.3
        </PP-cc-ref>
        <PP-cc-ref>
          Protection Profile for Mobile Device Fundamentals, Version 3.3
        </PP-cc-ref>
        <PP-cc-ref>
          Protection Profile for Mobile Device Management, Version 4.0
        </PP-cc-ref>
        <PP-cc-ref>
          Protection Profile for Application Software, Version 2.0
        </PP-cc-ref>
        <Mod-cc-ref>
          cPP-Module for Wireless LAN Clients, version 1.1
        </Mod-cc-ref>
        <Mod-cc-ref>
          PP-Module for Bluetooth, version 1.1
        </Mod-cc-ref>
        <Mod-cc-ref>
          PP-Module for Mobile Device Management Agent, version 1.2
        </Mod-cc-ref>
        <Mod-cc-ref>
          cPP-Module for Biometric Enrolment and Verification, version 1.1
        </Mod-cc-ref>
      </cc-pp-config-with>
      <cc-pkg-claim>
        <AP-cc-ref conf="conformant">
          Assurance Package for Flaw Remediation Version 1.0
        </AP-cc-ref>
        <FP-cc-ref conf="conformant">
          Functional Package for Transport Layer Security Version 2.1
        </FP-cc-ref>
        <FP-cc-ref conf="conformant">
          Functional Package for X.509 Version 1.0
        </FP-cc-ref>
      </cc-pkg-claim>
    </CClaimsInfo>
  </sec:Conformance_Claims>
  <!-- 3.0 Security Problem Definition-->
  <sec:Security_Problem_Definition>
    The security problem is described in terms of the threats that the TOE is expected to address,
assumptions about its OE, and any organizational security policies that the TOE is
expected to enforce.
    <h:br/>
    <h:br/>
    This PP-Module is written to address the situation in which a user accesses a private network (e.g. the
    user’s office network) or terminal endpoint (e.g. a network device) using a less trusted network (such as
    a public Wi-Fi network or local area network). Protection of network packets is desired as they traverse
    a public network. To protect the data in transit from disclosure and modification, a VPN is created to
    establish secure communications. The VPN client provides one end of the secure VPN tunnel and
    performs encryption and decryption of network packets in accordance with a VPN security policy
    negotiated between the VPN client (TOE) and its IPsec peer.
    <h:br/>
    <h:br/>
    The proper installation and configuration of the VPN client is critical to its correct operation such that
    proper handling of the TOE by an administrator is also addressed.
    <h:br/>
    <h:br/>
    Note that as a PP-Module, all threats, assumptions, and organizational security policies (OSPs) defined in the Base-PP will also apply to a
    TOE unless otherwise specified, depending on which of the Base-PPs it extends. The SFRs
    defined in this PP-Module will mitigate the threats that are defined in the PP-Module but
    may also mitigate some threats defined in the Base-PPs in more comprehensive detail due to the
    specific capabilities provided by a VPN client.
    <!-- 3.1 Threats -->
    <sec:Threats>
      <threats>
        <threat name="T.TSF_CONFIGURATION">
          <description>
            Configuring VPN tunnels is a complex and time-consuming process, and prone to errors if the            interface for doing so is not well-specified or well-behaved. The inability or failure of an ignorant or careless administrator to configure certain aspects            of the interface may also lead to the incorrect specification of the desired communications policy or use            of cryptography that may be desired or required for a particular site. This may result in unintended            weak or plaintext communications while the user thinks that their data are being protected. Other            aspects of configuring the TOE or using its security mechanisms (for example, the update process)            may also result in a reduction in the trustworthiness of the VPN client.
          </description>
          <!-- New mapping to build updated threat mapping table. -->
          <addressed-by>
            FIA_X509_EXT.4
          </addressed-by>
          <rationale>
            This SFR mitigates the threat by providing the ability to verify the integrity of the TSF using X.509 certificates.
          </rationale>
        </threat>
        <threat name="T.TSF_FAILURE">
          <description>
            Security mechanisms of the TOE generally build up from a primitive set of mechanisms (e.g.,            memory management, privileged modes of process execution) to more complex sets of            mechanisms. Failure of the primitive mechanisms could lead to a compromise in more complex            mechanisms, resulting in a compromise of the TSF.
          </description>
          <!-- New mapping to build updated threat mapping table. -->
        </threat>
        <threat name="T.UNAUTHORIZED_ACCESS">
          <description>
            This PP-Module does not include requirements that can protect against an insider threat. Authorized            users are not considered hostile or malicious and are trusted to follow appropriate guidance. Only            authorized personnel should have access to the system or device that contains the IPsec VPN client.            Therefore, the primary threat agents are the unauthorized entities that try to gain access to the            protected network (in cases where tunnel mode is used) or to plaintext data that traverses the            public network (regardless of whether transport mode or tunnel mode is used).
            <h:br/>
            <h:br/>
            The endpoint of the network communication can be both geographically and logically distant from            the TOE and can pass through a variety of other systems. These intermediate systems may be under            the control of the adversary, and offer an opportunity for communications over the network to be            compromised.
            <h:br/>
            <h:br/>
            Plaintext communication over the network may allow critical data (such as passwords, configuration            settings, and user data) to be read or manipulated directly by a malicious user or process on intermediate systems, leading to            a compromise of the TOE or to the secured environmental systems that the TOE is being used to            facilitate communications with. IPsec can be used to provide protection for this communication;            however, there are numerous options that can be implemented for the protocol to be compliant to the            protocol specification listed in the RFC. Some of these options can have negative impacts on the            security of the connection. For instance, using a weak encryption algorithm (even one that is            allowed by the RFC, such as DES) can allow an adversary to read and even manipulate the data on            the encrypted channel, thus circumventing countermeasures in place to prevent such attacks.            Further, if the protocol is implemented with little-used or non-standard options, it may be compliant             with the protocol specification, but will not be able to interact with other diverse equipment that is            typically found in large enterprises.
            <h:br/>
            <h:br/>
            Even though the communication path is protected, there is a possibility that the IPsec peer could be            tricked into thinking that a malicious third-party user or system is the TOE. For instance, a            middleman could intercept a connection request to the TOE and respond to the request as if it were            the TOE. In a similar manner, the TOE could also be tricked into thinking that it is establishing            communications with a legitimate IPsec peer when in fact it is not. An attacker could also mount a            malicious man-in-the-middle-type of attack, in which an intermediate system is compromised, and            the traffic is proxied, examined, and modified by this system. This attack can even be mounted via            encrypted communication channels if appropriate countermeasures are not applied. These attacks            are, in part, enabled by a malicious attacker capturing network traffic (for instance, an            authentication session) and “playing back” that traffic in order to fool an endpoint into thinking it            was communicating with a legitimate remote entity.
          </description>
          <!-- New mapping to build updated threat mapping table. -->
          <addressed-by>
            FTP_ITC.1
          </addressed-by>
          <rationale>
            This SFR mitigates the threat by defining the use of IPsec for protecting data in transit.
          </rationale>
        </threat>
        <threat name="T.USER_DATA_REUSE">
          <description>
            Data traversing the TOE could inadvertently be sent to a different user as a consequence of a poorly-designed TOE; since these data may be            sensitive, this may cause a compromise that is unacceptable. The specific threat that must be            addressed concerns user data that is retained by the TOE in the course of processing network traffic            that could be inadvertently reused in sending network traffic to a user other than that intended by            the sender of the original network traffic.
          </description>
          <!-- New mapping to build updated threat mapping table. -->
          <addressed-by>
            FCS_CKM_EXT.2
          </addressed-by>
          <rationale>
            This SFR mitigates the threat by requiring the TOE
            to store sensitive data in the OS’ key storage.
          </rationale>
          <addressed-by>
            FCS_CKM_EXT.2
          </addressed-by>
          <rationale>
            This SFR mitigates the threat by requiring the TOE
            or its platform to store sensitive data in the OS' key storage.
          </rationale>
          <addressed-by>
            FCS_CKM.6
          </addressed-by>
          <rationale>
            This SFR mitigates the threat by requiring the TOE
            or its platform to zeroize key data when no longer needed.
          </rationale>
          <addressed-by>
            FDP_VPN_EXT.1
          </addressed-by>
          <rationale>
            This SFR mitigates the threat by optionally
            requiring the TOE to prohibit split-tunneling so that network traffic cannot be transmitted outside of an
            established IPsec tunnel.
          </rationale>
        </threat>
      </threats>
    </sec:Threats>
    <!-- 3.2 Assumptions -->
    <sec:Assumptions>
      <assumptions>
        <assumption name="A.NO_TOE_BYPASS">
          <description>
            Information cannot flow onto the network to which the VPN client's host is connected without
            passing through the TOE.
          </description>
          <objective-refer ref="OE.NO_TOE_BYPASS">
            <rationale>
              This assumption is satisfied by the environmental objective that ensures
              network routes do not exist that allow traffic to be transmitted from the TOE system to its
              intended destination without going through the TOE’s IPsec tunnel.
            </rationale>
          </objective-refer>
        </assumption>
        <assumption name="A.PHYSICAL">
          <description>
            Physical security, commensurate with the value of the TOE and the data it contains, is assumed to
            be provided by the environment.
          </description>
          <objective-refer ref="OE.PHYSICAL">
            <rationale>
              This assumption is satisfied by the environmental objective that ensures the
              TOE is not deployed on a system that is vulnerable to loss of physical custody.
            </rationale>
          </objective-refer>
        </assumption>
        <assumption name="A.TRUSTED_CONFIG">
          <description>
            Personnel configuring the TOE and its OE will follow the applicable security
            configuration guidance.
          </description>
          <objective-refer ref="OE.TRUSTED_CONFIG">
            <rationale>
              This assumption is satisfied by the environmental objective that ensures that
              anyone responsible for administering the TOE can be trusted not to misconfigure it,
              whether intentionally or not.
            </rationale>
          </objective-refer>
        </assumption>
      </assumptions>
    </sec:Assumptions>
    <!-- 3.3 Organizational Security Policies -->
    <sec:Organizational_Security_Policies>
      <OSPs/>
    </sec:Organizational_Security_Policies>
  </sec:Security_Problem_Definition>
  <!-- 4.0 Security Objectives -->
  <sec:Security_Objectives>
    <!-- 4.1 Security Objectives for the TOE -->
    <!-- 4.2 Security Objctives for the Operational Environment -->
    <sec:Security_Objectives_for_the_Operational_Environment>
      <SOEs>
        <SOE name="OE.NO_TOE_BYPASS">
          <description>
            Information cannot flow onto the network to which the VPN client’s host is connected without
            passing through the TOE.
          </description>
        </SOE>
        <SOE name="OE.PHYSICAL">
          <description>
            Physical security, commensurate with the value of the TOE and the data it contains, is assumed to
            be provided by the environment.
          </description>
        </SOE>
        <SOE name="OE.TRUSTED_CONFIG">
          <description>
            Personnel configuring the TOE and its OE will follow the applicable security
            configuration guidance.
          </description>
        </SOE>
      </SOEs>
    </sec:Security_Objectives_for_the_Operational_Environment>
    <!-- 4.3 Security Objectives Rationale -->
    <sec:Security_Objectives_Rationale/>
  </sec:Security_Objectives>
  <!-- 5.0 Security Requirements -->
  <sec:Security_Requirements title="Security Requirements">
    <!-- 5.1 GPOS PP Security Functional Requirements Direction -->
    <base-pp id="bpp-gpos" name="Protection Profile for General Purpose Operating System" product="Operating System" short="GPOS" version="4.3">
      <git>
        <url>
          https://github.com/commoncriteria/operatingsystem
        </url>
        <branch>
          release-4.3
        </branch>
        <open>
          true
        </open>
      </git>
      <url>
        https://github.com/commoncriteria/operatingsystem
      </url>
      <sec-func-req-dir>
        In a PP-Configuration that includes the GPOS PP, the VPN client is expected to rely on some of the
			security functions implemented by the OS as a whole and evaluated against the Base-PP.
			In this case, the following sections describe any modifications that the ST author must make to the SFRs
			defined in the Base-PP in addition to what is mandated by section 5.5.
      </sec-func-req-dir>
      <!-- 5.1.1 Modified SFRs -->
      <modified-sfrs>
        <section title="Cryptographic Key Generation" id="modsfr-os-fcs-ckm-1">
          This SFR is functionally identical to what is defined in the GPOS PP except that
              ECC key generation with support for P-384 has been made mandatory
              in support of IPsec due to the mandated support for Diffie-Hellman (DH) group 20 in
              FCS_IPSEC_EXT.1.8.
          <h:p/>
          The text of the requirement is replaced with:
          <h:br/>
          <h:br/>
          The TSF shall generate
          <h:b>
            asymmetric
          </h:b>
          cryptographic keys in accordance with a
              specified cryptographic key generation algorithm
          <h:b>
            <h:ul>
              <h:i>
                <h:li>
                  ECC schemes using “NIST curve” P-384
                  that meet the following: FIPS PUB 186-5, “Digital Signature
                  Standard (DSS),” Appendix A.2, and,
                </h:li>
              </h:i>
            </h:ul>
          </h:b>
          <h:b>
            [selection:
          </h:b>
          <h:i>
            <h:ul>
              <h:li>
                RSA schemes using cryptographic key sizes of 3072-bit or greater that
                  meet the following: FIPS PUB 186-5, "Digital Signature Standard (DSS)", Appendix A.1
              </h:li>
              <h:li>
                FFC schemes using "safe-prime" groups that meet the following: 'NIST Special Publication 800-56A Revision 3, "Recommendation for Pair-Wise Key Establishment Schemes Using Discrete Logarithm Cryptography"', and [
                <h:b>
                  selection:
                </h:b>
                RFC 3526, RFC 7919]
              </h:li>
              <h:li>
                <h:b>
                  No other key generation methods
                </h:b>
              </h:li>
            </h:ul>
          </h:i>
          <h:b>
            ]
          </h:b>
          .
          <!-- FCS_CKM.1 Cryptographic Key Generation -->
          <base-sfr-spec cc-id="fcs_ckm.1" id="fcs-ckm-1" name="Cryptographic Key Generation">
            <consistency-rationale/>
            <replace>
              <xpath-specified xpath="*//cc:f-element[@id='fel-asym-gen']//cc:title">
                <f-element id="fel-asym-gen">
                  <title>
                    The TSF shall generate
                    <h:b>
                      asymmetric
                    </h:b>
                    cryptographic keys in accordance with a specified cryptographic key generation algorithm
                    <h:b>
                      <h:ul>
                        <h:li>
                          ECC schemes using "NIST curve" P-384 that meets the following: FIPS PUB 186-5, "Digital Signature Standard (DSS)", Appendix A.2
                        </h:li>
                      </h:ul>
                    </h:b>
                    <selectables linebreak="yes">
                      <selectable id="FCS_CKM.1_1">
                        RSA schemes using a cryptographic key size of 3072-bits that meet the following: FIPS PUB 186-5, "Digital Signature Standard (DSS)", Appendix A.1
                      </selectable>
                      <selectable id="FCS_CKM.1_2">
                        FFC schemes using "safe-prime" groups that meet the following: 'NIST Special Publication 800-56A Revision 3, "Recommendation for Pair-Wise Key Establishment Schemes Using Discrete Logarithm Cryptography"', and
                        <selectables>
                          <selectable id="FCS_CKM.1_3">
                            RFC 3526
                          </selectable>
                          <selectable id="FCS_CKM.1_4">
                            RFC 7919
                          </selectable>
                        </selectables>
                      </selectable>
                      <selectable id="FCS_CKM.1_5">
                        <h:b>
                          no other key generation methods
                        </h:b>
                      </selectable>
                    </selectables>
                    .
                  </title>
                  <note role="application">
                    <h:p>
                      The ST author will select all key generation schemes used for key establishment and entity authentication. When key generation is used for key establishment, the schemes in FCS_CKM.2 and selected cryptographic protocols must match the selection. When key generation is used for entity authentication, the public key is expected to be associated with an X.509v3 certificate.
                    </h:p>
                    <h:p>
                      If the OS acts only as a receiver in the RSA key establishment scheme, the OS does not need to implement RSA key generation.
                    </h:p>
                    <h:p>
                      “P-256” may only be selected if the PP-Module for Bluetooth is included in the ST and may only be used specifically for Bluetooth functions.
                    </h:p>
                  </note>
                </f-element>
              </xpath-specified>
            </replace>
          </base-sfr-spec>
        </section>
        <section title="Cryptographic Key Establishment" id="modsfr-os-fcs-ckm-2">
          This SFR is functionally identical to what is defined in the GPOS PP except that elliptic 
              curve cryptography (ECC) key generation with support for P-384 has been made 
              mandatory in support of IPsec due to the mandated support for DH group 20 
              in FCS_IPSEC_EXT.1.8.
          <h:p/>
          The text of the requirement is replaced with:
          <h:br/>
          <h:br/>
          The TSF shall
          <h:b>
            implement functionality to perform cryptographic key establishment
          </h:b>
          in
              accordance with a specified cryptographic key
          <h:b>
            establishment
          </h:b>
          method:
          <h:b>
            <h:ul>
              <h:i>
                <h:li>
                  Elliptic curve-based key establishment schemes that meet the following: NIST Special
                  Publication 800-56A Revision 3, “Recommendation for Pair-Wise Key Establishment Schemes
                  Using Discrete Logarithm Cryptography,” and
                </h:li>
              </h:i>
            </h:ul>
          </h:b>
          <h:b>
            [selection:
          </h:b>
          <h:i>
            <h:ul>
              <h:li>
                Finite field-based key establishment schemes that meets NIST Special Publication 800-56A Revision 3, “Recommendation 
                  for Pair-Wise Key Establishment Schemes Using Discrete Logarithm Cryptography”
              </h:li>
              <h:li>
                <h:b>
                  No other key generation methods
                </h:b>
              </h:li>
            </h:ul>
          </h:i>
          <h:b>
            ]
          </h:b>
          .
          <!-- FCS_CKM.2 Cryptographic Key Establishment -->
          <base-sfr-spec cc-id="fcs_ckm.2" id="fcs-ckm-2" name="Cryptographic Key Establishment">
            <consistency-rationale/>
            <replace>
              <xpath-specified xpath="*//cc:f-element[@id='fel-crypt-key-estab']//cc:title">
                <f-element id="fel-crypt-key-estab">
                  <title>
                    The TSF shall implement functionality to perform cryptographic key establishment in accordance with a specified cryptographic key establishment method:
                    <h:ul>
                      <h:li>
                        <h:b>
                          <h:i>
                            Elliptic curve-based key establishment schemes that meet the following: NIST Special Publication 800-56A Revision 3, “Recommendation for Pair-Wise Key Establishment Schemes Using Discrete Logarithm Cryptography,” and
                          </h:i>
                        </h:b>
                      </h:li>
                    </h:ul>
                    <selectables linebreak="yes">
                      <selectable id="FCS_CKM.2_1">
                        Finite field-based key establishment schemes that meets NIST Special Publication 800-56A Revision 3, “Recommendation for Pair-Wise Key Establishment Schemes Using Discrete Logarithm Cryptography”
                      </selectable>
                      <selectable id="FCS_CKM.2_2" exclusive="yes">
                        <h:b>
                          No other key establishment schemes
                        </h:b>
                      </selectable>
                    </selectables>
                    .
                  </title>
                  <note role="application">
                    <h:p>
                      The ST author will select all key establishment schemes used for the selected cryptographic protocols.
                    </h:p>
                    <h:p>
                      The elliptic curves used for the key establishment scheme shall correlate with the curves specified in FCS_CKM.1.1. The domain parameters used for the finite field-based key establishment scheme are specified by the key generation according to FCS_CKM.1.1. The finite field-based key establishment schemes that conform to NIST SP 800-56A Revision 3 correspond to the "safe-prime" groups selection in FCS_CKM.1.1.
                    </h:p>
                  </note>
                </f-element>
              </xpath-specified>
            </replace>
          </base-sfr-spec>
        </section>
      </modified-sfrs>
      <!-- 5.VPN client.2 Additional SFRs -->
      <additional-sfrs>
        <section title="Cryptographic Support (FCS)">
          <section id="gpos-audit-table" title="Auditable Events for GPOS PP Additional SFRs">
            <audit-table id="gpos-additional" table="tab-gpos-additional" title="Auditable Events for GPOS PP Additional SFRs">
            </audit-table>
          </section>
          <!-- FCS_CKM_EXT.2 Cryptographic Key Storage -->
          <f-component cc-id="fcs_ckm_ext.2" id="os-fcs-ckm-ext-2" name="Cryptographic Key Storage">
            <comp-lev>
              requires the TSF to securely store key data when not in use.
            </comp-lev>
            <management>
              No specific management functions are identified.
            </management>
            <audit>
              There are no auditable events foreseen.
            </audit>
            <dependencies>
              No dependencies.
            </dependencies>
            <consistency-rationale/>
            <f-element id="os-fcs-ckm-ext-2e1">
              <title>
                The
                <selectables>
                  <selectable id="fcs_ckm_ext.2.1_1">
                    VPN client
                  </selectable>
                  <selectable id="fcs_ckm_ext.2.1_2">
                    OS
                  </selectable>
                </selectables>
                shall store persistent secrets and private keys
                when not in use in OS-provided key storage.
              </title>
              <note role="application">
                This requirement ensures that persistent secrets (credentials, secret keys) and
                private keys are stored securely when not in use. If some secrets or keys are
                manipulated by the VPN client and others are manipulated by the OS, then both
                of the selections can be specified by the ST author.
              </note>
              <aactivity level="element">
                <TSS>
                  Regardless of whether this requirement is met by the VPN client or the OS, the evaluator shall check the
			TSS to ensure that it lists each persistent secret (credential, secret key) and private key needed to meet
			the requirements in the ST. For each of these items, the evaluator shall confirm that the TSS lists for what
			purpose it is used, and how it is stored.
                  <h:br/>
                  <h:br/>
                  The evaluator shall review the TSS to determine that it makes a case that, for each item listed as being
			manipulated, it is not written unencrypted to persistent memory, and that the item is
			stored by the OS.
                  <h:br/>
                  <h:br/>
                </TSS>
                <Guidance>
                  There are no guidance EAs for this requirement.
                  <h:br/>
                  <h:br/>
                </Guidance>
                <Tests>
                  There are no test EAs for this component.
                </Tests>
              </aactivity>
            </f-element>
          </f-component>
        </section>
        <section title="Identification and Authentication (FIA)">
          <section id="gpos-audit-table" title="Auditable Events for GPOS PP Additional SFRs">
            <audit-table id="gpos-additional" table="tab-gpos-additional" title="Auditable Events for GPOS PP Additional SFRs">
            </audit-table>
          </section>
          <!-- FIA_X509_EXT.4 X.509 Certificate Use and Management -->
          <f-component cc-id="fia_x509_ext.4" id="os-fia-x509-ext-4" name="X.509 Certificate Use and Management">
            <comp-lev>
              requires the TOE to perform X.509 certificate
              authentication and describes the behavior that is followed if the status of the certificate is unknown or
              invalid.
            </comp-lev>
            <management>
              No specific management functions are identified.
            </management>
            <audit>
              There are no auditable events foreseen.
            </audit>
            <dependencies>
              FIA_X509_EXT.1 X.509 Certificate Validation
              <h:br/>
              <h:br/>
              <no-link>
                FPT_TST_EXT.1
              </no-link>
              TSF Self-Test
              <h:br/>
              <h:br/>
              FPT_TUD_EXT.1 Trusted Update
            </dependencies>
            <consistency-rationale/>
            <f-element id="os-fia-x509-ext-4e1">
              <title>
                The TSF shall use X.509v3 certificates as defined by RFC 5280 to support
              authentication for IPsec exchanges, and
                <selectables>
                  <selectable id="fia_x509_ext.4.1_1">
                    digital signatures for FPT_TUD_EXT.1
                  </selectable>
                  <selectable id="fia_x509_ext.4.1_2">
                    integrity checks for FPT_TST_EXT.1
                  </selectable>
                  <selectable id="fia_x509_ext.4.1_3" exclusive="yes">
                    no additional uses
                  </selectable>
                </selectables>
                .
              </title>
              <aactivity level="element">
                <no-tests>
                  <no-link>
                    FIA_X509_EXT.4.1
                  </no-link>
                  is evaluated as part of
                  <no-link>
                    FCS_IPSEC_EXT.1
                  </no-link>
                  (and
                  conditionally as part of
                  <no-link>
                    FPT_TUD_EXT.1
                  </no-link>
                  or
                  <no-link>
                    FPT_TST_EXT.1
                  </no-link>
                  ).
                </no-tests>
              </aactivity>
            </f-element>
            <f-element id="os-fia-x509-ext-4e2">
              <title>
                When a connection to determine the validity of a certificate cannot be
                  established, the
                <selectables onlyone="yes">
                  <selectable id="fia_x509_ext.4.2_1">
                    VPN client
                  </selectable>
                  <selectable id="fia_x509_ext.4.2_2">
                    OS
                  </selectable>
                </selectables>
                shall
                <selectables onlyone="yes">
                  <selectable id="fia_x509_ext.4.2_3">
                    allow the administrator to choose whether to accept the certificate in these cases
                  </selectable>
                  <selectable id="fia_x509_ext.4.2_4">
                    accept the certificate
                  </selectable>
                  <selectable id="fia_x509_ext.4.2_5">
                    not accept the certificate
                  </selectable>
                </selectables>
                .
              </title>
              <note role="application">
                Oftentimes a connection must be established to perform a verification of the
                    revocation status of a certificate - either to download a certificate revocation list (CRL)
			or to use the online certificate status protocol (OCSP) to check revocation status.
                    The selection is used to describe the behavior in the event that such a connection
                    cannot be established (for example, due to a network error). The behavior of the
                    TOE in these cases is described by the second selection. If the TOE has
                    determined the certificate is valid according to all other rules in FIA_X509_EXT.1 in
                <xref to="pkg-x509"/>
                ,
                    the behavior indicated in the second selection will determine the validity. The
                    TOE must not accept the certificate if it fails any of the other validation rules in
                    FIA_X509_EXT.1 in
                <xref to="pkg-x509"/>
                . If the administrator-configured option is selected by the ST
                    Author, the ST author must also make the appropriate selection in
                    FMT_SMF.1/VPN.
              </note>
              <aactivity level="element">
                <TSS>
                  The evaluator shall check the TSS to ensure that it describes whether the VPN client or the OS implements
                  the certificate validation functionality, how the VPN client/OS chooses which certificates to use, and any
                  necessary instructions in the administrative guidance for configuring the OS so that desired certificates
                  can be used.
                  <h:br/>
                  <h:br/>
                  The evaluator shall examine the TSS to confirm that it describes the behavior of the client/OS when a
                  connection cannot be established during the validity check of a certificate used in establishing a trusted
                  channel.
                  <h:br/>
                  <h:br/>
                </TSS>
                <Guidance>
                  If the requirement indicates that the administrator is able to specify the default action, then the evaluator
                  shall ensure that the operational guidance contains instructions on how this configuration action is
                  performed.
                  <h:br/>
                  <h:br/>
                </Guidance>
                <Tests>
                  The evaluator shall perform the following test regardless of whether the certificate validation functionality is implemented by the VPN client or by the OS:
                  <testlist>
                    <test>
                      The evaluator shall demonstrate that using a valid certificate that requires certificate validation
                      checking to be performed in at least some part by communicating with a non-TOE IT entity. The evaluator
                      shall then manipulate the environment so that the TOE is unable to verify the validity of the certificate,
                      and observe that the action selected in FIA_X509_EXT.4.2 is performed. If the selected action is
                      administrator-configurable, then the evaluator shall follow the operational guidance to determine that all
                      supported administrator-configurable options behave in their documented manner.
                    </test>
                  </testlist>
                </Tests>
              </aactivity>
            </f-element>
            <f-element id="os-fia-x509-ext-4e3">
              <title>
                The
                <selectables onlyone="yes">
                  <selectable id="fia_x509_ext.4.3_1">
                    VPN client
                  </selectable>
                  <selectable id="fia_x509_ext.4.3_2">
                    OS
                  </selectable>
                </selectables>
                shall not establish an SA if a certificate or
                certificate path is deemed invalid.
              </title>
              <aactivity level="element">
                <no-tests>
                  FIA_X509_EXT.4.3 is evaluated as part of FCS_IPSEC_EXT.1.11.
                </no-tests>
              </aactivity>
            </f-element>
          </f-component>
        </section>
        <section title="Trusted Path/Channels (FTP)">
          <section id="gpos-audit-table" title="Auditable Events for GPOS PP Additional SFRs">
            <audit-table id="gpos-additional" table="tab-gpos-additional" title="Auditable Events for GPOS PP Additional SFRs">
            </audit-table>
          </section>
          <!-- FTP_ITC.1 Inter-TSF Trusted Channel -->
          <f-component cc-id="ftp_itc.1" id="os-ftp-itc-1" name="Inter-TSF Trusted Channel">
            <consistency-rationale/>
            <f-element id="os-ftp-itc-1e1">
              <title>
                The
                <h:b>
                  <selectables onlyone="yes">
                    <selectable id="ftp_itc.1.1_1">
                      VPN client
                    </selectable>
                    <selectable id="ftp_itc.1.1_2">
                      OS
                    </selectable>
                  </selectables>
                  shall use IPsec to
                </h:b>
                provide a
                <h:b>
                  trusted
                </h:b>
                communication channel between itself and
                <h:b>
                  <selectables linebreak="yes">
                    <selectable id="ftp_itc.1.1_3">
                      a remote VPN gateway
                    </selectable>
                    <selectable id="ftp_itc.1.1_4">
                      a remote VPN client
                    </selectable>
                    <selectable id="ftp_itc.1.1_5">
                      a remote IPsec-capable network device
                    </selectable>
                  </selectables>
                </h:b>
                that is logically
                distinct from other communication channels and provides assured identification
                of its end points and protection of the channel data from
                <h:b>
                  disclosure and
                detection of modification of the channel data
                </h:b>
                .
              </title>
              <aactivity level="component">
                <TSS>
                  The evaluator shall examine the TSS to determine that it describes the details of the TOE connecting to a
			VPN gateway, VPN client, or IPsec-capable network device in terms of the cryptographic
			protocols specified in the requirement, along with TOE-specific options or procedures that might not be
			reflected in the specification. The evaluator shall also confirm that all protocols listed in the TSS are
			specified and included in the requirements in the ST.
                  <h:br/>
                  <h:br/>
                </TSS>
                <Guidance>
                  The evaluator shall confirm that the operational guidance contains instructions for establishing the
			connection to a VPN gateway, VPN client, or IPsec-capable network device, and that it contains
			recovery instructions should a connection be unintentionally broken.
                  <h:br/>
                  <h:br/>
                </Guidance>
                <Tests>
                  The evaluator shall perform the following tests:
                  <testlist>
                    <test>
                      The evaluator shall ensure that the TOE is able to initiate communications with a VPN gateway,
			VPN client, or IPsec-capable network device using the protocols specified in the requirement,
			setting up the connections as described in the operational guidance and ensuring that communication is
			successful.
                    </test>
                    <test>
                      The evaluator shall ensure, for each communication channel with an IPsec peer, the channel data
			is not sent in plaintext.
                    </test>
                    <test>
                      The evaluator shall ensure, for each communication channel with an IPsec peer, modification of
			the channel data is detected by the TOE.
                    </test>
                    <test>
                      The evaluator shall physically interrupt the connection from the TOE to the IPsec peer. The
			evaluator shall ensure that subsequent communications are appropriately protected, at a minimum in
			the case of any attempts to automatically resume the connection or connect to a new access point.
                    </test>
                  </testlist>
                  Further EAs are associated with requirements for FCS_IPSEC_EXT.1.
                </Tests>
              </aactivity>
            </f-element>
            <f-element id="os-ftp-itc-1e2">
              <title>
                The
                <h:b>
                  <selectables onlyone="yes">
                    <selectable id="ftp_itc.1.2_1">
                      VPN client
                    </selectable>
                    <selectable id="ftp_itc.1.2_2">
                      OS
                    </selectable>
                  </selectables>
                </h:b>
                shall permit [
                <h:i>
                  the TSF
                </h:i>
                ] to initiate communication via the trusted channel.
              </title>
            </f-element>
            <f-element id="os-ftp-itc-1e3">
              <title>
                The
                <h:b>
                  <selectables onlyone="yes">
                    <selectable id="ftp_itc.1.3_1">
                      VPN client
                    </selectable>
                    <selectable id="ftp_itc.1.3_2">
                      OS
                    </selectable>
                  </selectables>
                </h:b>
                shall initiate communication via the trusted
                channel for [
                <h:i>
                  all traffic traversing that connection
                </h:i>
                ].
              </title>
              <note role="application">
                The intent of the above requirement is to demonstrate that IPsec can be used to
                establish remote communications in transport mode, tunnel mode, or both.
                <h:br/>
                <h:br/>
                The requirement implies that not only are communications protected when they
                are initially established, but also on resumption after an outage. It may be the
                case that some part of the TOE setup involves manually setting up tunnels to
                protect other communication, and if after an outage the TOE attempts to reestablish 
                the communication automatically with (the necessary) manual
                intervention, there may be a window created where an attacker might be able to
                gain critical information or compromise a connection.
              </note>
            </f-element>
          </f-component>
        </section>
      </additional-sfrs>
      <con-toe>
        If this PP-Module is used to extend the GPOS PP, the TOE type for the overall TOE is still a 
		general-purpose OS. The TOE boundary is simply extended to include VPN client functionality that
		is built into the OS so that additional security functionality is claimed within the scope of
		the TOE.
      </con-toe>
      <con-sec-prob>
        The threats and assumptions defined by this PP-Module (see sections 3.1 and 3.2) supplement those
		defined in the GPOS PP as follows:
      </con-sec-prob>
      <con-Obj>
        The security objectives defined by this PP-Module (see sections 4.1 and 4.2) supplement those defined
		in the GPOS PP as follows:
      </con-Obj>
      <con-op-in/>
      <con-mod ref="T.UNAUTHORIZED_ACCESS">
        The threat of an attacker gaining access to a network interface or data
        that is transmitted over it is consistent with the T.NETWORK_ATTACK and T.NETWORK_EAVESDROP threats in the GPOS PP.
      </con-mod>
      <con-mod ref="T.TSF_CONFIGURATION">
        The threat of a misconfigured VPN client is consistent with the
		T.NETWORK_ATTACK and T.NETWORK_EAVESDROP threats on the GPOS PP because misconfiguration could allow VPN traffic to be subjected
		unexpectedly to unauthorized modification or disclosure.
      </con-mod>
      <con-mod ref="T.USER_DATA_REUSE">
        Inadvertent disclosure of user data to an unauthorized recipient is
		consistent with the T.NETWORK_EAVESDROP threat in the GPOS PP.
      </con-mod>
      <con-mod ref="T.TSF_FAILURE">
        A failure of TSF functionality could compromise the local system, which is
		consistent with the T.LOCAL_ATTACK threat in the GPOS PP.
      </con-mod>
      <con-mod ref="A.NO_TOE_BYPASS">
        The A.NO_TOE_BYPASS assumption assumes that the OE is configured in such a manner that the only network route to the
	      protected network is through the TOE. This does not conflict with
		the GPOS PP because the GPOS PP makes no assumptions about the network architecture in which the TOE is deployed.
      </con-mod>
      <con-mod ref="A.PHYSICAL">
        The assumption that physical security is provided by the environment is
		not explicitly stated in the GPOS PP but is consistent with the A.PLATFORM assumption defined in the GPOS PP, which expects the computing
		platform to be trusted.
      </con-mod>
      <con-mod ref="A.TRUSTED_CONFIG">
        The assumption that personnel responsible for the TOE’s configuration are
		trusted to follow the guidance is consistent with the A.PROPER_ADMIN
		defined in the GPOS PP.
      </con-mod>
      <con-mod ref="OE.NO_TOE_BYPASS">
        This objective addresses behavior that is out of scope of the GPOS PP and
		does not define an environment that a GPOS TOE is incapable of existing in.
      </con-mod>
      <con-mod ref="OE.PHYSICAL">
        This is part of satisfying OE.PLATFORM as defined in the GPOS PP because
		physical security is required for hardware to be considered ‘trusted.’
      </con-mod>
      <con-mod ref="OE.TRUSTED_CONFIG">
        The expectation of trusted configuration is consistent with OE.PROPER_USER
		and OE.PROPER_ADMIN in the GPOS PP.
      </con-mod>
      <con-mod ref="os-fcs-ckm-1">
        The ST author is instructed to make specific selections at minimum to
		address VPN client requirements; the SFR behavior itself is unmodified.
      </con-mod>
      <con-mod ref="os-fcs-ckm-2">
        The ST author is instructed to make specific selections at minimum to
		address VPN client requirements; the SFR behavior itself is unmodified.
      </con-mod>
      <con-mod ref="os-fcs-cop-1-1">
        The SFR is refined to list an additional AES mode that must be supported to
		address VPN client requirements; the use of this mode for VPN connectivity
		does not impact the ability of the GPOS to satisfy any of its other security
		requirements.
      </con-mod>
      <con-mod ref="os-fcs-ckm-ext-2">
        Storage of key data related to VPN functionality can be accomplished using
		the same mechanism defined by FCS_STO_EXT.1 in the GPOS PP.
      </con-mod>
      <con-mod ref="os-fia-x509-ext-3">
        This SFR defines additional uses for X.509 certificate functionality that do
		not conflict with those defined in the GPOS PP.
      </con-mod>
      <con-mod ref="os-ftp-itc-1">
        This SFR defines a trusted channel for IPsec, which is added functionality
		that does not prevent the existing GPOS functions from being performed.
      </con-mod>
      <con-mod ref="fcs-ckm-1-vpn">
        Generation of IKE peer authentication keys is added functionality that does
		not prevent the existing GPOS functions from being performed.
      </con-mod>
      <con-mod ref="fcs-ipsec-ext-1">
        This SFR defines the VPN client’s IPsec implementation, which is added
		functionality that does not interfere with the GPOS functions.
      </con-mod>
      <con-mod ref="fdp-rip-2">
        The requirement to protect against reuse of residual data is a property of
		the VPN client behavior and does not impact the GPOS functionality.
      </con-mod>
      <con-mod ref="fmt-smf-1-vpn">
        The ability to configure the VPN client behavior does not affect whether the
		GPOS as a whole can perform its security functions.
      </con-mod>
      <con-mod ref="fpt-tst-ext-1-vpn">
        Self-testing of the VPN client functionality does not impact the ability of the
		GPOS to perform its security functions.
      </con-mod>
      <con-mod ref="fau-gen-1-vpn">
        Audit data generated by the VPN client does not interfere with GPOS
		functionality. The possibility of the underlying OS platform generating audit
		records is consistent with the GPOS PP, which already contains FAU_GEN.1.
      </con-mod>
      <con-mod ref="fau-sel-1-vpn">
        The ability to suppress the generation of certain audit data related to
		VPN activity does not interfere with the ability of the GPOS to satisfy its
		security functionality.
      </con-mod>
      <con-mod ref="fdp-vpn-ext-1">
        The ability of the VPN client to prevent split tunneling of IPsec traffic
		requires it to have hooks into lower-level OS behavior, but there are no
		requirements in the GPOS PP that would prevent this functionality from
		being supported.
      </con-mod>
      <con-mod ref="fia-bma-ext-1">
        This SFR relates to biometric authentication, which does not conflict with the GPOS PP because it may be a function offered by the 
        part of the TOE described by the GPOS PP.
      </con-mod>
      <con-mod ref="fpf-mfa-ext-1">
        This SFR relates specifically to the handling of traffic that is used for the
        establishment of IPsec connections.
      </con-mod>
      <con-mod ref="fcs-eap-ext-1">
        This SFR defines an additional cryptographic protocol that is beyond the scope of those defined in the GPOS PP but does not prevent any GPOS PP functionality
        from being implemented.
      </con-mod>
      <con-mod ref="fia-psk-ext-1">
        This SFR defines the use of pre-shared keys, which is behavior that only
		relates to the establishment of IPsec connections.
      </con-mod>
      <con-mod ref="fia-psk-ext-2">
        This SFR relates to use of pre-shared keys, which is behavior that only
        applies to the establishment of IPsec connections.
      </con-mod>
      <con-mod ref="fia-psk-ext-3">
        This SFR relates to use of pre-shared keys, which is behavior that only
        applies to the establishment of IPsec connections.
      </con-mod>
      <con-mod ref="fia-psk-ext-4">
        This SFR relates to use of pre-shared keys, which is behavior that only
        applies to the establishment of IPsec connections.
      </con-mod>
      <con-mod ref="fia-psk-ext-5">
        This SFR relates to use of pre-shared keys, which is behavior that only
        applies to the establishment of IPsec connections.
      </con-mod>
    </base-pp>
    <!-- 5.2 MDF PP Security Functional Requirements Direction -->
    <base-pp id="bpp-mdf" name="Protection Profile for Mobile Device Fundamentals" product="Mobile Device" short="MDF" version="3.3">
      <git>
        <url>
          https://github.com/commoncriteria/mobile-device
        </url>
        <branch>
          release-3.3
        </branch>
        <open>
          true
        </open>
      </git>
      <url>
        https://github.com/commoncriteria/mobile-device
      </url>
      <sec-func-req-dir>
        In a PP-Configuration that includes the MDF PP, the VPN client is expected to rely on some of the
      security functions implemented by the OS as a whole and evaluated against the Base-PP.
      In this case, the following sections describe any modifications that the ST author must make to the SFRs
      defined in the Base-PP in addition to what is mandated by section 5.5.
      </sec-func-req-dir>
      <!-- 5.2.1 Modified SFRs -->
      <modified-sfrs>
        <section title="Cryptographic Key Generation" id="mdf-fcs-ckm-1">
          <h:p>
            This SFR is functionally identical to what is defined in the MDF PP except that ECC key generation with support for P-384 has been made mandatory in support of IPsec due to the mandated support for DH group 20 in FCS_IPSEC_EXT.1.8. Curve25519 schemes remain selectable for their potential use in satisfying FDP_DAR_EXT.2.2 in the MDF PP; these schemes are not used in support of IPsec. RSA support remains present as a selection since it may be used by parts of the TOE that are not specifically related to VPN client functionality.
          </h:p>
          The text of the requirement is replaced with:
          <h:br/>
          <h:br/>
          The TSF shall generate
          <h:b>
            asymmetric
          </h:b>
          cryptographic keys in accordance with a specified cryptographic key generation algorithm
          <h:b>
            <h:ul>
              <h:li>
                ECC schemes using "NIST curve" P-384 that meets the following: FIPS PUB 186-5, "Digital Signature Standard (DSS)", Appendix A.2
              </h:li>
            </h:ul>
            and
          </h:b>
          [
          <h:b>
            selection:
          </h:b>
          <h:i>
            <h:ul>
              <h:li>
                RSA schemes using cryptographic key sizes of [
                <h:b>
                  assignment:
                </h:b>
                <h:i>
                  3072-bit or greater
                </h:i>
                ] that meet the following: [FIPS PUB 186-5, “Digital Signature Standard (DSS),” Appendix A.1]
              </h:li>
              <h:li>
                <h:b>
                  ECC schemes using Curve25519 schemes that meet the following: [RFC 7748]
                </h:b>
              </h:li>
              <h:li>
                FFC schemes using "safe-prime" groups that meet the following: 'NIST Special Publication 800-56A Revision 3, "Recommendation for Pair-Wise Key Establishment Schemes Using Discrete Logarithm Cryptography"', and [
                <h:b>
                  selection:
                </h:b>
                RFC 3526, RFC 7919]
              </h:li>
              <h:li>
                <h:b>
                  no other key generation methods
                </h:b>
              </h:li>
            </h:ul>
          </h:i>
          ].
          <!-- FCS_CKM.1 Cryptographic Key Generation -->
          <base-sfr-spec cc-id="fcs_ckm.1" id="fcs-ckm-1" name="Cryptographic Key Generation">
            <consistency-rationale/>
            <replace>
              <xpath-specified xpath="*//cc:f-element[@id='fel-asym-key-gen']//cc:title">
                <f-element id="fel-asym-key-gen">
                  <title>
                    The TSF shall generate
                    <h:b>
                      asymmetric
                    </h:b>
                    cryptographic keys in accordance with a specified cryptographic key generation algorithm
                    <h:ul>
                      <h:li>
                        ECC schemes using "NIST curve" P-384 that meets the following: FIPS PUB 186-5, "Digital Signature Standard (DSS)", Appendix A.2
                      </h:li>
                    </h:ul>
                    and
                    <selectables linebreak="yes">
                      <selectable id="FCS_CKM.1_1">
                        <h:b>
                          RSA schemes using
                        </h:b>
                        cryptographic key sizes of
                        <assignable>
                          3072-bit or greater
                        </assignable>
                        that meet [
                        <h:i>
                          FIPS PUB 186-5, "Digital Signature Standard (DSS)", Appendix A.1
                        </h:i>
                        ]
                      </selectable>
                      <selectable id="s-keygen-ecc">
                        <h:b>
                          ECC schemes using:
                        </h:b>
                        <selectables linebreak="yes">
                          <selectable id="FCS_CKM.1_3">
                            <h:b>"NIST curves" P-384
                            </h:b>
                            that meet the following: [
                            <h:i>
                              FIPS PUB 186-5, "Digital Signature Standard (DSS)", Appendix A.2
                            </h:i>
                            ]
                          </selectable>
                          <selectable id="FCS_CKM.1_4">
                            <h:b>
                              Curve25519 schemes
                            </h:b>
                            that meet the following: [
                            <h:i>
                              RFC 7748
                            </h:i>
                            ]
                          </selectable>
                        </selectables>
                      </selectable>
                      <selectable id="FCS_CKM.1_5">
                        FFC schemes using "safe-prime" groups that meet the following: 'NIST Special Publication 800-56A Revision 3, "Recommendation for Pair-Wise Key Establishment Schemes Using Discrete Logarithm Cryptography"', and
                        <selectables>
                          <selectable id="FCS_CKM.1_6">
                            RFC 3526
                          </selectable>
                          <selectable id="FCS_CKM.1_7">
                            RFC 7919
                          </selectable>
                        </selectables>
                      </selectable>
                      <selectable id="FCS_CKM.1_8">
                        <h:b>
                          no other key generation methods
                        </h:b>
                      </selectable>
                    </selectables>
                    .
                  </title>
                  <note role="application">
                    The ST author must select all key generation schemes used for key establishment and entity authentication. When key generation is used for key establishment, the schemes in FCS_CKM.2/UNLOCKED and selected cryptographic protocols must match the selection. When key generation is used for entity authentication, the public key may be associated with an X.509v3 certificate.
                    <h:br/>
                    <h:br/>
                    If the TOE acts as a receiver in the RSA key establishment scheme, the TOE does not need to implement RSA key generation.
                    <h:br/>
                    <h:br/>
                    Curve25519 can only be used for ECDH and in conjunction with FDP_DAR_EXT.2.2.
                  </note>
                </f-element>
              </xpath-specified>
            </replace>
          </base-sfr-spec>
        </section>
        <section title="Cryptographic Key Establishment (When Unlocked)" id="mdf-fcs-ckm-2-unlocked">
          <h:p>
            This SFR differs from its definition in the MDF PP by moving elliptic curve-based key establishment schemes from selectable to mandatory, due to the mandated support for DH group 20 in FCS_IPSEC_EXT.1.8. This PP-Module does not require the use of RSA for any function but it is present in the selection in case other MDF PP functions require its use.
          </h:p>
          The text of the requirement is replaced with:
          <h:br/>
          <h:br/>
          The TSF shall perform
          <h:b>
            cryptographic key establishment
          </h:b>
          in accordance with a specified cryptographic key establishment method:
          <h:ul>
            <h:li>
              <h:b>
                [Elliptic curve-based key establishment schemes] that meet the following: [NIST Special Publication 800-56A Revision 3, “Recommendation for Pair-Wise Key Establishment Schemes Using Discrete Logarithm Cryptography”]
              </h:b>
            </h:li>
          </h:ul>
          [
          <h:b>
            selection:
          </h:b>
          <h:i>
            <h:ul>
              <h:li>
                [RSA-based key establishment schemes] that meet the following: [
                <h:b>
                  selection:
                </h:b>
                <h:ul>
                  <h:li>
                    NIST Special Publication 800-56B, “Recommendation for Pair-Wise Key Establishment Schemes Using Integer Factorization Cryptography”
                  </h:li>
                  <h:li>
                    RSAES-PKCS1-v1_5 as specified in Section 7.2 of RFC 8017, “Public-Key Cryptography Standards (PKCS) #1: RSA Cryptography Specifications Version 2.2"</h:li>
                </h:ul>
              </h:li>
              <h:li>
                [
                <h:i>
                  Finite field-based key establishment schemes
                </h:i>
                ]
                      that meet the following: [
                <h:i>
                  NIST Special Publication 800-56A Revision 3,
                        "Recommendation for Pair-Wise Key Establishment Schemes Using Discrete Logarithm
                        Cryptography"</h:i>
                ]
              </h:li>
              <h:li>
                <h:b>
                  no other key establishment schemes
                </h:b>
              </h:li>
            </h:ul>
          </h:i>
          ].
          <!-- FCS_CKM.2/UNLOCKED Cryptographic Key Establishment -->
          <base-sfr-spec cc-id="fcs_ckm.2" id="fcs-ckm-2-unlocked" name="Cryptographic Key Establishment" iteration="UNLOCKED">
            <consistency-rationale/>
            <replace>
              <xpath-specified xpath="*//cc:f-element[@id='fel-unlocked-key']//cc:title">
                <f-element id="fel-unlocked-key">
                  <title>
                    The TSF shall perform cryptographic
                    <h:b>
                      key establishment
                    </h:b>
                    in accordance with a specified cryptographic key
                    <h:b>
                      establishment
                    </h:b>
                    method
                    <h:ul>
                      <h:li>
                        <h:b>
                          [
                          <h:i>
                            Elliptic curve-based key establishment schemes
                          </h:i>
                          ] that meet the following: [
                          <h:i>
                            NIST Special Publication 800-56A Revision 3, "Recommendation for Pair-Wise Key Establishment Schemes Using Discrete Logarithm Cryptography"</h:i>
                          ]
                        </h:b>
                      </h:li>
                    </h:ul>
                    <h:b>
                      and
                    </h:b>
                    <selectables linebreak="yes">
                      <selectable id="FCS_CKM.2_1">
                        [
                        <h:i>
                          RSA-based key establishment schemes
                        </h:i>
                        ] that meet the following
                        <selectables linebreak="yes">
                          <selectable id="FCS_CKM.2_2">
                            NIST Special Publication 800-56B, “Recommendation for Pair-Wise Key Establishment Schemes Using Integer Factorization Cryptography”
                          </selectable>
                          <selectable id="FCS_CKM.2_3">
                            RSAES-PKCS1-v1_5 as specified in Section 7.2 of RFC 8017, "Public-Key Cryptography Standards (PKCS) #1:RSA Cryptography Specifications Version 2.2"</selectable>
                        </selectables>
                      </selectable>
                      <selectable id="FCS_CKM.2_4">
                        [
                        <h:i>
                          Finite field-based key establishment schemes
                        </h:i>
                        ] that meet the following: [
                        <h:i>
                          NIST Special Publication 800-56A Revision 3, "Recommendation for Pair-Wise Key Establishment Schemes Using Discrete Logarithm Cryptography"</h:i>
                        ]
                      </selectable>
                      <selectable id="FCS_CKM.2_5">
                        <h:b>
                          no other key establishment schemes
                        </h:b>
                      </selectable>
                    </selectables>
                    .
                  </title>
                  <note role="application">
                    The ST author must select all key establishment schemes used for the selected cryptographic protocols and any RSA-based key establishment schemes that may be used to satisfy FDP_DAR or FCS_STG. Also, FCS_TLSC_EXT.1 requires ciphersuites that use RSA-based key establishment schemes.
                    <h:br/>
                    <h:br/>
                    The RSA-based key establishment schemes are described in Section 9 of NIST SP 800-56B; however, Section 9 relies on implementation of other sections in SP 800-56B. If the TOE only acts as a receiver in the RSA key establishment scheme, the TOE does not need to implement RSA key generation.
                    <h:br/>
                    <h:br/>
                    The elliptic curves used for the key establishment scheme must correlate with the curves specified in FCS_CKM.1.1.
                    <h:br/>
                    <h:br/>
                    The domain parameters used for the finite field-based key establishment scheme are specified by the key generation according to FCS_CKM.1.1. The finite field-based key establishment schemes that conform to NIST SP 800-56A Revision 3 correspond to the "safe-prime" groups selection in FCS_CKM.1.1.
                  </note>
                </f-element>
              </xpath-specified>
            </replace>
          </base-sfr-spec>
        </section>
        <section title="Subset Information Flow Control" id="mdf-fdp-ifc-ext-1">
          <h:p>
            This SFR is identical to its definition in the Base-PP except that the selection item that requires the TOE to implement its own VPN client is always selected when the TOE’s conformance claim includes this PP-Module.
          </h:p>
          The text of the requirement is replaced with:
          <h:br/>
          <h:br/>
          The TSF shall [
          <h:ul>
            <h:li>
              <h:i>
                provide a VPN client which can protect all IP traffic using IPsec as defined in the PP-Module for VPN Client
              </h:i>
            </h:li>
          </h:ul>
          ] with the exception of IP traffic needed to manage the VPN connection, and [
          <h:b>
            selection:
          </h:b>
          <h:i>
            [
            <h:b>
              assignment:
            </h:b>
            traffic needed for correct functioning of the TOE], no other traffic
          </h:i>
          ] when the VPN is enabled.
          <!-- FDP_IFC_EXT.1 Subset Information Flow Control -->
          <base-sfr-spec cc-id="fdp_ifc_ext.1" id="fdp-ifc-ext-1" name="Subset Information Flow Control">
            <consistency-rationale/>
            <replace>
              <xpath-specified xpath="*//cc:f-element[@id='fel-vpn-service']//cc:title">
                <f-element id="fel-vpn-service">
                  <title>
                    The TSF shall [
                    <h:ul>
                      <h:li>
                        <h:i>
                          provide a VPN client which can protect all IP traffic using IPsec as defined in the PP-Module for
                          <h:b>
                            VPN Client
                          </h:b>
                        </h:i>
                      </h:li>
                    </h:ul>
                    ] with the exception of IP traffic needed to manage the VPN connection, and
                    <selectables>
                      <selectable id="FDP_IFC_EXT.1_2">
                        <assignable>
                          traffic needed for correct functioning of the TOE
                        </assignable>
                      </selectable>
                      <selectable id="FDP_IFC_EXT.1_3">
                        no other traffic
                      </selectable>
                    </selectables>
                    when the VPN is enabled.
                  </title>
                  <note role="application">
                    Typically, the traffic needed to manage the VPN connection is referred to as "Control Plane" traffic; whereas, the IP traffic protected by the IPsec VPN is referred to as "Data Plane" traffic. All "Data Plane" traffic must flow through the VPN connection and the VPN must not split-tunnel. “IP traffic needed for correct functioning of the TOE” comprises traffic that would prevent the TOE from proper operation if it was either blocked by or routed through the VPN. Enabling the VPN means that the VPN client has been activated by the user. If the VPN tunnel gets interrupted, then no “Data Plane” traffic should be sent without the VPN tunnel being re-established or the user disabling the VPN client.
                    <h:br/>
                    <h:br/>
                    If no native IPsec client is validated or third-party VPN clients may also implement the required Information Flow Control, the first option must be selected. In these cases, the TOE provides an API to third-party VPN clients that allow them to configure the TOE’s network stack to perform the required Information Flow Control.
                    <h:br/>
                    <h:br/>
                    The ST author must select the second option if the TSF implements a native VPN client (
                    <xref to="s-itc-ipsec"/>
                    is selected in
                    <xref to="fel-wlan"/>
                    ). Thus the TSF must be validated against the
                    <xref to="mod-vpnclient"/>
                    and the ST author must also include
                    <no-link>
                      FDP_IFC_EXT.1
                    </no-link>
                    from the
                    <xref to="mod-vpnclient"/>
                    .
                    <h:br/>
                    <h:br/>
                    It is optional for the VPN client to be configured to be always-on per FMT_SMF.1 Function
                    <xref to="mf-alwaysOnVPN"/>
                    . Always-on means the establishment of an IPsec trusted channel to allow any communication by the TSF.
                  </note>
                </f-element>
              </xpath-specified>
            </replace>
          </base-sfr-spec>
        </section>
        <section title="Trusted Channel Communication" id="mdf-ftp-itc-ext-1">
          <h:p>
            This SFR is identical to what is defined in the Base-PP except that support for IPsec is mandated. Additionally, since the Base-PP requires ‘at least one of’ the selected protocols which previously included IPsec, ‘no other protocols’ is now available as an option in the selection.
          </h:p>
          The text of FTP_ITC_EXT.1.1 is replaced with (the other elements are unaffected):
          <h:br/>
          <h:br/>
          The TSF shall use
          <h:ul>
            <h:li>
              802.11-2012 in accordance with the [
              <h:i>
                PP-Module for Wireless LAN Clients, version 1.1
              </h:i>
              ],
            </h:li>
            <h:li>
              802.1X in accordance with the [
              <h:i>
                PP-Module for Wireless LAN Clients, version 1.1
              </h:i>
              ],
            </h:li>
            <h:li>
              EAP-TLS in accordance with the [
              <h:i>
                PP-Module for Wireless LAN Clients, version 1.1
              </h:i>
              ],
            </h:li>
            <h:li>
              Mutually authenticated TLS in accordance with the [
              <h:i>
                Functional Package for TLS, version 2.1
              </h:i>
              ],
            </h:li>
            <h:li>
              <h:b>
                IPsec in accordance with the [
                <h:i>
                  PP-Module for VPN Clients, version 2.6
                </h:i>
                ],
              </h:b>
            </h:li>
          </h:ul>
          and [
          <h:b>
            selection:
          </h:b>
          <h:i>
            <h:ul>
              <h:li>
                mutually authenticated DTLS as defined in the Functional Package for TLS, version 2.1
              </h:li>
              <h:li>
                HTTPS
              </h:li>
              <h:li>
                <h:b>
                  no other
                </h:b>
              </h:li>
            </h:ul>
          </h:i>
          ] protocols to provide a communication channel between itself and another trusted IT product using certificates as defined in [
          <h:i>
            Functional Package for X.509, version 1.0
          </h:i>
          ] that is logically distinct from other communication channels, 
              provides assured identification of its end points, protects channel data from disclosure, and detects modification of the channel data.
          <!-- FTP_ITC_EXT.1 Trusted Channel Communication -->
          <base-sfr-spec cc-id="ftp_itc_ext.1" id="ftp-itc-ext-1" name="Trusted Channel Communication">
            <consistency-rationale/>
            <replace>
              <xpath-specified xpath="*//cc:f-element[@id='fel-wlan']//cc:title">
                <f-element id="fel-wlan">
                  <title>
                    The TSF shall use
                    <h:ul>
                      <h:li>
                        802.11-2012 in accordance with the [
                        <h:i>
                          <xref to="mod-wlanclient"/>
                        </h:i>
                        ],
                      </h:li>
                      <h:li>
                        802.1X in accordance with the [
                        <h:i>
                          <xref to="mod-wlanclient"/>
                        </h:i>
                        ],
                      </h:li>
                      <h:li>
                        EAP-TLS in accordance with the [
                        <h:i>
                          <xref to="mod-wlanclient"/>
                        </h:i>
                        ],
                      </h:li>
                      <h:li>
                        Mutually authenticated TLS in accordance with [
                        <h:i>
                          the
                          <xref to="pkg-tls"/>
                        </h:i>
                        ]
                      </h:li>
                      <h:li>
                        IPsec in accordance with the [
                        <h:i>
                          <xref to="mod-vpnclient"/>
                        </h:i>
                        ],
                      </h:li>
                    </h:ul>
                    and
                    <selectables linebreak="yes">
                      <selectable id="itc_dtls">
                        mutually authenticated DTLS as defined in the
                        <xref to="pkg-tls"/>
                      </selectable>
                      <selectable id="FTP_ITC_EXT.1_1">
                        HTTPS
                      </selectable>
                      <selectable id="FTP_ITC_EXT.1_2">
                        <h:b>
                          no other
                        </h:b>
                      </selectable>
                    </selectables>
                    protocols to provide a communication channel between itself and another trusted IT product using certificates as defined in [
                    <h:i>
                      <xref to="pkg-x509"/>
                    </h:i>
                    ] that is logically distinct from other communication channels, provides assured identification of its end points, protects channel data from disclosure, and detects modification of the channel data.
                  </title>
                  <ext-comp-def-title>
                    <title>
                      The TSF shall use
                      <h:ul>
                        <h:li>
                          802.11-2012 in accordance with
                          <assignable>
                            requirements or standards defining implementation of this protocol
                          </assignable>
                          ,
                        </h:li>
                        <h:li>
                          802.1X in accordance with
                          <assignable>
                            requirements or standards defining implementation of this protocol
                          </assignable>
                          ,
                        </h:li>
                        <h:li>
                          EAP-TLS in accordance with
                          <assignable>
                            requirements or standards defining implementation of this protocol
                          </assignable>
                          ,
                        </h:li>
                        <h:li>
                          Mutually authenticated TLS in accordance with
                          <assignable>
                            requirements or standards defining implementation of this protocol
                          </assignable>
                        </h:li>
                      </h:ul>
                      and
                      <assignable>
                        other protocols
                      </assignable>
                      protocols to provide a communication channel between itself and another trusted IT product that is logically distinct from other communication channels, provides assured identification of its end points, protects channel data from disclosure, and detects modification of the channel data.
                    </title>
                  </ext-comp-def-title>
                  <note role="application">
                    The intent of the mandatory portion of the above requirement is to use the cryptographic protocols identified in the requirement to establish and maintain a trusted channel between the TOE and an access point, VPN Gateway, or other trusted IT product.
                    <h:br/>
                    <h:br/>
                    The ST author must list which trusted channel protocols are implemented by the Mobile Device.
                    <h:br/>
                    <h:br/>
                    The TSF must be validated against the
                    <xref to="mod-wlanclient"/>
                    to satisfy the mandatory trusted channels of 802.11-2012, 802.1X, and EAP-TLS.
                    <h:br/>
                    <h:br/>
                    To satisfy the mandatory trusted channel of TLS and if
                    <xref to="itc_dtls"/>
                    is selected, the TSF must be validated against the
                    <xref to="pkg-tls"/>
                    , with the following selections made:
                    <rule id="r-tls">
                      <doc ref="pkg-tls">
                        <ref-id>
                          tlsc_impl
                        </ref-id>
                        <ref-id>
                          tlsc_mutual_auth
                        </ref-id>
                        <ref-id>
                          s-tlsc-no-excep
                        </ref-id>
                      </doc>
                    </rule>
                    <rule id="r-dtls">
                      <if>
                        <ref-id>
                          itc_dtls
                        </ref-id>
                      </if>
                      <then>
                        <doc ref="pkg-tls">
                          <ref-id>
                            dtlsc_impl
                          </ref-id>
                          <ref-id>
                            dtlsc_mutual_auth
                          </ref-id>
                          <ref-id>
                            s-dtlsc-no-excep
                          </ref-id>
                        </doc>
                      </then>
                    </rule>
                    <h:ul>
                      <h:li>
                        FCS_TLS_EXT.1:
                      </h:li>
                      <h:ul>
                        <h:li>
                          Either TLS or DTLS is selected as appropriate
                        </h:li>
                        <h:li>
                          Client is selected
                        </h:li>
                      </h:ul>
                      <h:li>
                        FCS_TLSC_EXT.1.1 or FCS_DTLSC_EXT.1.1 (as appropriate):
                      </h:li>
                      <h:ul>
                        <h:li>
                          The cipher suites selected must correspond with the algorithms and hash functions allowed in FCS_COP.1.
                        </h:li>
                        <h:li>
                          Mutual authentication must be selected
                        </h:li>
                      </h:ul>
                      <h:li>
                        FCS_TLSC_EXT.1.3 or FCS_DTLSC_EXT.1.3 (as appropriate):
                      </h:li>
                      <h:ul>
                        <h:li>
                          With no exceptions is selected.
                        </h:li>
                      </h:ul>
                    </h:ul>
                    <h:br/>
                    <rule id="r-ipsec">
                      <if>
                        <ref-id>
                          s-itc-ipsec
                        </ref-id>
                      </if>
                      <then>
                        <ref-id>
                          mod-vpnclient
                        </ref-id>
                      </then>
                    </rule>
                    If the ST author selects
                    <xref to="s-itc-ipsec"/>
                    , the TSF must be validated against the
                    <xref to="mod-vpnclient"/>
                    .
                    <h:br/>
                    <h:br/>
                    <if-opt-app>
                      <!-- TODO: Looks like appref is broken -->
                      <xref to="sel-based-reqs"/>
                      contains the requirements for implementing each of the other optional trusted channel protocols.
                    </if-opt-app>
                    The ST author must include the security functional requirements for the trusted channel protocol selected in FTP_ITC_EXT.1 in the main body of the ST.
                    <h:br/>
                    <h:br/>
                    Assured identification of endpoints is performed according to the authentication mechanisms used by the listed trusted channel protocols.
                  </note>
                </f-element>
              </xpath-specified>
            </replace>
          </base-sfr-spec>
        </section>
      </modified-sfrs>
      <!-- 5.VPN client.2 Additional SFRs -->
      <additional-sfrs>
        <section title="User Data Protection (FDP)">
          <section id="mdf-audit-table" title="Auditable Events for MDF PP Additional SFRs">
            <audit-table id="mdf-additional" table="tab-mdf-additional" title="Auditable Events for MDF PP Additional SFRs">
            </audit-table>
          </section>
          <!-- FDP_VPN_EXT.1 Split Tunnel Prevention -->
          <f-component cc-id="fdp_vpn_ext.1" id="fdp-vpn-ext-1" name="Split Tunnel Prevention">
            <comp-lev>
              requires the TSF to process all IP traffic through its VPN client
              functionality.
            </comp-lev>
            <management>
              No specific management functions are identified.
            </management>
            <audit>
              There are no auditable events foreseen.
            </audit>
            <dependencies>
              <no-link>
                FCS_IPSEC_EXT.1
              </no-link>
              IPsec
            </dependencies>
            <consistency-rationale/>
            <f-element id="fdp-vpn-ext-1e1">
              <title>
                The TSF shall ensure that all IP traffic (other than IP traffic required to establish
                the VPN connection) flow through the IPsec VPN client.
              </title>
              <note role="application">
                This requirement is implementation-dependent on the MDF PP being the Base-PP claimed by the TOE. In this case, this requirement must be claimed.
                <h:br/>
                <h:br/>
                For all other Base-PPs, this requirement is strictly optional.
                <h:br/>
                <h:br/>
                This requirement is used when the VPN client is able to enforce the requirement
                through its own components. This generally will have to be done through using
                hooks provided by the platform such that the TOE is able to ensure that no IP
                traffic can flow through other network interfaces.
              </note>
              <aactivity level="element">
                <TSS>
                  The evaluator shall verify that the TSS section of the ST describes the routing of IP traffic through processes
                  on the TSF when a VPN client is enabled. The evaluator shall ensure that the description indicates which
                  traffic does not go through the VPN and which traffic does and that a configuration exists for each
                  baseband protocol in which only the traffic identified by the ST author is necessary for establishing the
                  VPN connection (IKE traffic and perhaps HTTPS or DNS traffic) is not encapsulated by the VPN protocol 
                  (IPsec). The ST author shall also identify in the TSS section any differences in the routing of IP traffic when
                  using any supported baseband protocols (e.g. Wi-Fi, LTE).
                  <h:br/>
                  <h:br/>
                </TSS>
                <Guidance>
                  The evaluator shall verify that the following is addressed by the documentation:
                  <h:ul>
                    <h:li>
                      The description above indicates that if a VPN client is enabled, all configurations route all IP traffic
                      (other than IP traffic required to establish the VPN connection) through the VPN client.
                    </h:li>
                    <h:li>
                      The guidance describes how the user or administrator can configure the TSF to meet
                      this requirement.
                    </h:li>
                  </h:ul>
                  <h:br/>
                  <h:br/>
                </Guidance>
                <Tests>
                  The evaluator shall perform the following test:
                  <h:br/>
                  <h:br/>
                  <h:br/>
                  <h:br/>
                  Step 1 - The evaluator shall use the platform to enable a network connection without using IPsec. The evaluator shall use a packet sniffing tool between the platform and an internet-connected network. The evaluator shall turn on the sniffing tool and perform actions with the device such as navigating to websites, using provided applications, accessing other internet resources (Use Case 1), accessing another VPN client (Use Case 2), or accessing an IPsec-capable network device (Use Case 3). The evaluator shall verify that the sniffing tool captures the traffic generated by these actions, turn off the sniffing tool, and save the session data.
                  <h:br/>
                  <h:br/>
                  <h:br/>
                  <h:br/>
                  Step 2 - The evaluator shall configure an IPsec VPN client that supports the routing specified in this requirement, and if necessary, configure the device to perform the routing specified as described in the AGD guidance. The evaluator shall turn on the sniffing tool, establish the VPN connection, and perform the same actions with the device as performed in the first step. The evaluator shall verify that the sniffing tool captures traffic generated by these actions, turn off the sniffing tool, and save the session data.
                  <h:br/>
                  <h:br/>
                  <h:br/>
                  <h:br/>
                  Step 3 - The evaluator shall examine the traffic from both step one and step two to verify that all IP traffic, aside from and after traffic necessary for establishing the VPN (such as IKE, DNS, and possibly HTTPS), is encapsulated by IPsec.
                  <h:br/>
                  <h:br/>
                  <h:br/>
                  <h:br/>
                  Step 4 - The evaluator shall attempt to send packets to the TOE outside the VPN connection and shall verify that the TOE discards them.
                </Tests>
              </aactivity>
            </f-element>
          </f-component>
        </section>
      </additional-sfrs>
      <con-toe>
        If this PP-Module is used to extend the MDF PP, the TOE type for the overall TOE is still a mobile device.
		The TOE boundary is simply extended to include VPN client functionality that is built into the device’s
		software so that additional security functionality is claimed within the scope of the TOE.
      </con-toe>
      <con-sec-prob>
        The threats and assumptions defined by this PP-Module (see sections 3.1 and 3.2) supplement those
		defined in the MDF PP as follows:
      </con-sec-prob>
      <con-Obj>
        The security objectives defined by this PP-Module (see sections 4.1 and 4.2) supplement those defined
		in the MDF PP as follows:
      </con-Obj>
      <con-op-in/>
      <con-mod ref="T.UNAUTHORIZED_ACCESS">
        The threat of an attacker gaining access to a network interface or data
		that is transmitted over it is consistent with the T.NETWORK and T.EAVESDROP threats in the MDF PP.
      </con-mod>
      <con-mod ref="T.TSF_CONFIGURATION">
        The threat of a misconfigured VPN client is consistent with the
		T.NETWORK and T.EAVESDROP threats in the MDF PP because failure to mitigate against misconfiguration makes these threats more significant.
      </con-mod>
      <con-mod ref="T.USER_DATA_REUSE">
        Inadvertent disclosure of user data to an unauthorized recipient is
		consistent with the T.EAVESDROP threat in the MDF PP.
      </con-mod>
      <con-mod ref="T.TSF_FAILURE">
        A failure of TSF functionality could compromise the local system, which is
		consistent with the T.FLAWAPP threat in the MDF PP.
      </con-mod>
      <con-mod ref="A.NO_TOE_BYPASS">
        The A.NO_TOE_BYPASS assumption assumes that the OE is configured in such a manner that the only network route
		to the protected network is through the TOE. This does not conflict with
		the MDF PP because the MDF PP makes no assumptions about the
		network architecture in which the TOE is deployed.
      </con-mod>
      <con-mod ref="A.PHYSICAL">
        The MDF PP includes the A.NOTIFY and A.PRECAUTION assumptions to
		mitigate the risk of physical theft of the TOE. This is consistent with the
		A.PHYSICAL assumption in this PP-Module because the MDF PP includes
		reasonable assumptions about the physical security of the TOE.
      </con-mod>
      <con-mod ref="A.TRUSTED_CONFIG">
        This assumption is consistent with the MDF PP because the MDF PP
		includes the A.CONFIG assumption which assumes that all security functions are appropriately configured.
      </con-mod>
      <con-mod ref="OE.NO_TOE_BYPASS">
        This objective addresses behavior that is out of scope of the MDF PP
		and does not define an environment that an MDF TOE is incapable of existing in.
      </con-mod>
      <con-mod ref="OE.PHYSICAL">
        The operational environment of a mobile device cannot guarantee
		physical security, but the OE.PRECAUTION objective in the MDF PP
		ensures that an appropriate level of physical security is provided.
      </con-mod>
      <con-mod ref="OE.TRUSTED_CONFIG">
        The expectation of trusted configuration is consistent with
		OE.CONFIG in the MDF PP.
      </con-mod>
      <con-mod ref="md-fcs-ckm-1">
        The ST author is instructed to make specific selections at minimum to
		address VPN client requirements; the SFR behavior itself is unmodified.
      </con-mod>
      <con-mod ref="md-fcs-ckm-2-1">
        The ST author is instructed to make specific selections at minimum to
		address VPN client requirements; the SFR behavior itself is unmodified.
      </con-mod>
      <con-mod ref="md-fcs-cop-1-1">
        The ST author is instructed to make specific selections at minimum to
		address VPN client requirements; the SFR behavior itself is unmodified.
      </con-mod>
      <con-mod ref="md-fia-x509-ext-2">
        This PP-Module adds IPsec as a new trusted protocol where x.509
		certificate authentication is used.
      </con-mod>
      <con-mod ref="md-ftp-itc-ext-1">
        This PP-Module adds IPsec as a new protocol that is used to implement
		trusted channels.
      </con-mod>
      <con-mod ref="fcs-ckm-1-vpn">
        This SFR defines the method of key generation for IKE peer authentication,
		which is a function that does not interfere with the functionality defined in
		the MDF PP.
      </con-mod>
      <con-mod ref="fcs-ipsec-ext-1">
        This SFR defines the VPN client’s IPsec implementation, which is added
		functionality that does not interfere with the MDF functions.
      </con-mod>
      <con-mod ref="fdp-rip-2">
        The requirement to protect against reuse of residual data is a property of
		the VPN client behavior and does not impact the MDF functionality.
      </con-mod>
      <con-mod ref="fmt-smf-1-vpn">
        The ability to configure the VPN client behavior does not affect whether the
		MDF as a whole can perform its security functions.
      </con-mod>
      <con-mod ref="fpt-tst-ext-1-vpn">
        Self-testing of the VPN client functionality does not impact the ability of the
		MDF to perform its security functions.
      </con-mod>
      <con-mod ref="fau-gen-1-vpn">
        Audit data generated by the VPN client does not interfere with MDF
		functionality. The possibility of the underlying MDF platform generating
		audit data is consistent with the MDF PP, which already contains
		FAU_GEN.1.
      </con-mod>
      <con-mod ref="fau-sel-1-vpn">
        The ability to suppress the generation of certain VPN client audit data
		does not interfere with MDM functionality. The MDF PP already contains
		FAU_SEL.1 as an objective SFR which means that this functionality does not
		conflict with the expected behavior of a mobile device.
      </con-mod>
      <con-mod ref="fdp-vpn-ext-1">
        The ability of the VPN client to prevent split tunneling of IPsec traffic
        requires it to have hooks into lower-level mobile device behavior, but there
        are no requirements in the MDF PP that would prevent this functionality
        from being supported.
      </con-mod>
      <con-mod ref="fia-bma-ext-1">
        This SFR relates to biometric authentication, which does not conflict with the MDF PP because it may be a function offered by the 
        part of the TOE described by the MDF PP.
      </con-mod>
      <con-mod ref="fpf-mfa-ext-1">
        This SFR relates specifically to the handling of traffic that is used for the
        establishment of IPsec connections.
      </con-mod>
      <con-mod ref="fcs-eap-ext-1">
        This SFR defines an additional cryptographic protocol that is beyond the scope of those defined in the MDF PP but
	      does not prevent any MDF PP functionality
        from being implemented.
      </con-mod>
      <con-mod ref="fia-psk-ext-1">
        This SFR defines the use of pre-shared keys, which is behavior that only
        relates to the establishment of IPsec connections.
      </con-mod>
      <con-mod ref="fia-psk-ext-2">
        This SFR relates to use of pre-shared keys, which is behavior that only
        applies to the establishment of IPsec connections.
      </con-mod>
      <con-mod ref="fia-psk-ext-3">
        This SFR relates to use of pre-shared keys, which is behavior that only
        applies to the establishment of IPsec connections.
      </con-mod>
      <con-mod ref="fia-psk-ext-4">
        This SFR relates to use of pre-shared keys, which is behavior that only
        applies to the establishment of IPsec connections.
      </con-mod>
      <con-mod ref="fia-psk-ext-5">
        This SFR relates to use of pre-shared keys, which is behavior that only
        applies to the establishment of IPsec connections.
      </con-mod>
    </base-pp>
    <!-- 5.3 App PP Security Functional Requirements Direction -->
    <base-pp id="bpp-app" name="Protection Profile for Application Software" product="Application" short="App" version="2.0">
      <git>
        <url>
          https://github.com/commoncriteria/application
        </url>
        <branch>
          release-1.4
        </branch>
        <open>
          true
        </open>
      </git>
      <url>
        https://github.com/commoncriteria/application
      </url>
      <sec-func-req-dir>
        In a PP-Configuration that includes the App PP, the VPN client is expected to rely on some of the security
      functions implemented by the OS as a whole and evaluated against the Base-PP. In this
      case, the following sections describe any modifications that the ST author must make to the SFRs
      defined in the Base-PP in addition to what is mandated by section 5.5.
      </sec-func-req-dir>
      <!-- 5.3.1 Modified SFRs -->
      <modified-sfrs>
        <section title="Cryptographic Key Establishment" id="app-fcs-ckm-2">
          <h:p>
            This SFR differs from its definition in the App PP by moving elliptic curve-based
                key establishment schemes from selectable to mandatory due to the mandated
                support for DH group 20 in FCS_IPSEC_EXT.1.8. 
                The selection for "no other schemes"
                was added in case the algorithms that IPsec requires are the TSF's only use of key establishment.
          </h:p>
          The text of the requirement is replaced with:
          <h:br/>
          <h:br/>
          The
          <h:b>
            application
          </h:b>
          shall
          <h:b>
            [selection:
            <h:i>
              <h:ul>
                <h:li>
                  invoke platform-provided functionality
                </h:li>
                <h:li>
                  implement functionality
                </h:li>
              </h:ul>
            </h:i>
            ]
          </h:b>
          to
              
              perform cryptographic key establishment in accordance with a specified cryptographic key establishment method:
          <h:ul>
            <h:li>
              <h:b>
                [Elliptic curve-based key establishment schemes] that meet the following: [NIST Special Publication 800-56A Revision 3, “Recommendation for Pair-Wise Key Establishment Schemes Using Discrete Logarithm Cryptography”]
              </h:b>
            </h:li>
          </h:ul>
          [
          <h:b>
            selection:
          </h:b>
          <h:i>
            <h:ul>
              <h:li>
                <h:b>
                  [RSA-based key establishment schemes]
                </h:b>
                that meet the following:
                <h:b>
                  [NIST Special Publication 800-56B, “Recommendation for Pair-Wise Key Establishment Schemes Using Integer Factorization Cryptography”]
                </h:b>
              </h:li>
              <h:li>
                <h:b>
                  [FFC Schemes using “safe-prime” groups]
                </h:b>
                that meet the following:
                <h:b>
                  ‘NIST Special Publication 800-56A Revision 3, “Recommendation for Pair-Wise Key Establishment Schemes Using Discrete Logarithm Cryptography”
                </h:b>
                and [
                <h:b>
                  selection:
                </h:b>
                RFC 3526, RFC 7919]
              </h:li>
              <h:li>
                Module-Lattice-Based Key-Encapsulation Mechanism Standard using the parameter set ML-KEM-1024 that meets the following: [FIPS 203, Module-Lattice-Based Key-Encapsulation Mechanism Standard]
              </h:li>
              <h:li>
                <h:b>
                  no other key establishment schemes
                </h:b>
              </h:li>
            </h:ul>
          </h:i>
          ].
          <!-- FCS_CKM.2 Cryptographic Key Establishment -->
          <base-sfr-spec cc-id="fcs_ckm.2" id="fcs-ckm-2" name="Cryptographic Key Establishment">
            <consistency-rationale/>
            <replace>
              <xpath-specified xpath="*//cc:f-element[@id='fel-key-est']//cc:title">
                <f-element id="fel-key-est">
                  <title>
                    <h:p>
                      The application shall
                      <selectables>
                        <selectable id="FCS_CKM.2_1">
                          invoke platform-provided functionality
                        </selectable>
                        <selectable id="FCS_CKM.2_2">
                          implement functionality
                        </selectable>
                      </selectables>
                      to perform cryptographic key establishment in accordance with a specified cryptographic key establishment method:
                    </h:p>
                    <h:ul>
                      <h:li>
                        <h:b>
                          [Elliptic curve-based key establishment schemes] that meets the following: [NIST Special Publication 800-56A, “Recommendation for Pair-Wise Key Establishment Schemes Using Discrete Logarithm Cryptography”]
                        </h:b>
                      </h:li>
                    </h:ul>
                    <h:b>
                      and
                    </h:b>
                    <h:p>
                      <selectables linebreak="yes">
                        <selectable id="FCS_CKM.2_3">
                          <h:b>
                            [RSA-based key establishment schemes]
                          </h:b>
                          that meets the following:
                          <h:b>
                            [NIST Special Publication 800-56B, “Recommendation for Pair-Wise Key Establishment Schemes Using Integer Factorization Cryptography”]
                          </h:b>
                        </selectable>
                        <selectable id="FCS_CKM.2_4">
                          <h:b>
                            [FFC Schemes using “safe-prime” groups]
                          </h:b>
                          that meet the following:
                          <h:b>
                            ‘NIST Special Publication 800-56A Revision 3, “Recommendation for Pair-Wise Key Establishment Schemes Using Discrete Logarithm Cryptography”
                          </h:b>
                          and
                          <selectables>
                            <selectable id="FCS_CKM.2_5">
                              RFC 3526
                            </selectable>
                            <selectable id="FCS_CKM.2_6">
                              RFC 7919
                            </selectable>
                          </selectables>
                        </selectable>
                        <selectable id="FCS_CKM.2_7">
                          Module-Lattice-Based Key-Encapsulation Mechanism Standard using the parameter set ML-KEM-1024 that meets the following: [FIPS 203, Module-Lattice-Based Key-Encapsulation Mechanism Standard]
                        </selectable>
                        <selectable id="FCS_CKM.2_8">
                          <h:b>
                            no other key establishment schemes
                          </h:b>
                        </selectable>
                      </selectables>
                    </h:p>
                    .
                  </title>
                  <note role="application">
                    <h:p>
                      The ST author shall select all key establishment schemes used for the selected cryptographic protocols. TLS requires cipher suites that use RSA-based key establishment schemes.
                    </h:p>
                    <h:p>
                      The RSA-based key establishment schemes are described in Section 9 of NIST SP 800-56B; however, Section 9 relies on implementation of other sections in SP 800-56B. If the TOE acts as a receiver in the RSA key establishment scheme, the TOE does not need to implement RSA key generation.
                    </h:p>
                    <h:p>
                      The elliptic curves used for the key establishment scheme shall correlate with the curves specified in FCS_CKM.1.1/AK.
                    </h:p>
                    <h:p>
                      The domain parameters used for the finite field-based key establishment scheme are specified by the key generation according to FCS_CKM.1.1/AK.
                    </h:p>
                    <h:p>
                      As support is expanded for CNSA 2.0, CNSA 1.0 will be removed as an selection in a future update.
                    </h:p>
                  </note>
                  <aactivity level="element">
                    <TSS>
                      <h:p>
                        The evaluator shall ensure that the supported key establishment schemes claimed in the TSS correspond to the key generation schemes identified in FCS_CKM.1.1/AK. If the ST specifies more than one scheme, the evaluator shall examine the TSS to verify that it identifies the usage for each scheme.
                      </h:p>
                      <h:p>
                        If the ST selects "<h:b>
                          invoke platform-provided functionality
                        </h:b>
                        ," then the evaluator shall examine the TSS to verify that it describes how the key establishment functionality is invoked and that the invocation matches the algorithm selection for each supported platform. The evaluator shall confirm the invocation of the platform is using non-deprecated functions provided by the platform(s).
                      </h:p>
                    </TSS>
                    <Guidance>
                      <h:p>
                        The evaluator shall verify that the operational guidance instructs the administrator how to configure the TOE to use the selected key establishment scheme(s) if configuration is required.
                      </h:p>
                    </Guidance>
                    <Tests>
                      <h:p>
                        Evaluation Activity Note: The following tests require the developer to provide access to a test platform that provides the evaluator with tools that are typically not found on factory products.
                      </h:p>
                      <h:p>
                        <h:b>
                          Key Establishment Schemes
                        </h:b>
                        The evaluator shall verify the implementation of the key establishment schemes supported by the TOE using the applicable tests below.
                      </h:p>
                      <h:p>
                        <h:b>
                          SP800-56A Key Establishment Schemes
                        </h:b>
                      </h:p>
                      <h:p>
                        The evaluator shall verify a TOE's implementation of SP800-56A key agreement schemes using the following Function and Validity tests. These validation tests for each key agreement scheme verify that a TOE has implemented the components of the key agreement scheme according to the specifications in the Recommendation. These components include the calculation of the DLC primitives (the shared secret value Z) and the calculation of the derived keying material (DKM) via the Key Derivation Function (KDF). If key confirmation is supported, the evaluator shall also verify that the components of key confirmation have been implemented correctly, using the test procedures described below. This includes the parsing of the DKM, the generation of MACdata and the calculation of MACtag.
                      </h:p>
                      <h:p>
                        <h:b>
                          Function Test
                        </h:b>
                      </h:p>
                      <h:p>
                        The Function test verifies the ability of the TOE to implement the key agreement schemes correctly. To conduct this test the evaluator shall generate or obtain test vectors from a known good implementation of the TOE supported schemes. For each supported key agreement scheme-key agreement role combination, KDF type, and if supported, key confirmation role and type combination, the tester shall generate 10 sets of test vectors. The data set consists of one set of domain parameter values (FFC) or the NIST approved curve (ECC) per 10 sets of public keys. These keys are static, ephemeral or both depending on the scheme being tested.
                      </h:p>
                      <h:p>
                        The evaluator shall obtain the DKM, the corresponding TOE’s public keys (static and/or ephemeral), the MAC tag(s), and any inputs used in the KDF, such as the Other Information
                        <h:i>
                          (OtherInfo)
                        </h:i>
                        and TOE ID fields.
                      </h:p>
                      <h:p>
                        If the TOE does not use a KDF defined in SP 800-56A, the evaluator shall obtain only the public keys and the hashed value of the shared secret.
                      </h:p>
                      <h:p>
                        The evaluator shall verify the correctness of the TSF’s implementation of a given scheme by using a known good implementation to calculate the shared secret value, derive the keying material DKM, and compare hashes or MAC tags generated from these values.
                      </h:p>
                      <h:p>
                        If key confirmation is supported, the TSF shall perform the above for each implemented approved MAC algorithm.
                      </h:p>
                      <h:p>
                        <h:b>
                          Validity Test
                        </h:b>
                      </h:p>
                      <h:p>
                        The Validity test verifies the ability of the TOE to recognize another party’s valid and invalid key agreement results with or without key confirmation. To conduct this test, the evaluator shall obtain a list of the supporting cryptographic functions included in the SP800-56A key agreement implementation to determine which errors the TOE should be able to recognize. The evaluator generates a set of 24 (FFC) or 30 (ECC) test vectors consisting of data sets including domain parameter values or NIST approved curves, the evaluator’s public keys, the TOE’s public/private key pairs, MACTag, and any inputs used in the KDF, such as the OtherInfo and TOE ID fields.
                      </h:p>
                      <h:p>
                        The evaluator shall inject an error in some of the test vectors to test that the TOE recognizes invalid key agreement results caused by the following fields being incorrect: the shared secret value Z, the DKM, the OtherInfo field, the data to be MACed, or the generated MACTag. If the TOE contains the full or partial (only ECC) public key validation, the evaluator will also individually inject errors in both parties’ static public keys, both parties’ ephemeral public keys and the TOE’s static private key to ensure that the TOE detects errors in the public key validation function and/or the partial key validation function (in ECC only). At least two of the test vectors shall remain unmodified and therefore should result in valid key agreement results (they should pass).
                      </h:p>
                      <h:p>
                        The TOE shall use these modified test vectors to emulate the key agreement scheme using the corresponding parameters. The evaluator shall compare the TOE’s results with the results obtained by using a known good implementation verifying that the TOE detects these errors.
                      </h:p>
                      <h:p>
                        <h:b>
                          SP800-56B Key Establishment Schemes
                        </h:b>
                      </h:p>
                      <h:p>
                        The evaluator shall verify that the TSS describes whether the TOE acts as a sender, a recipient, or both for RSA-based key establishment schemes.
                      </h:p>
                      <h:p>
                        If the TOE acts as a sender, the following evaluation activity shall be performed to ensure the proper operation of every TOE supported combination of RSA-based key establishment scheme:
                      </h:p>
                      <h:p>
                        <h:div class="indent">
                          To conduct this test the evaluator shall generate or obtain test vectors from a known good implementation of the TOE supported schemes. For each combination of supported key establishment scheme and its options (with or without key confirmation if supported, for each supported key confirmation MAC function if key confirmation is supported, and for each supported mask generation function if KTS-OAEP is supported), the tester shall generate 10 sets of test vectors. Each test vector shall include the RSA public key, the plaintext keying material, any additional input parameters if applicable, the MacKey and MacTag if key confirmation is incorporated, and the outputted ciphertext. For each test vector, the evaluator shall perform a key establishment encryption operation on the TOE with the same inputs (in cases where key confirmation is incorporated, the test shall use the MacKey from the test vector instead of the randomly generated MacKey used in normal operation) and ensure that the outputted ciphertext is equivalent to the ciphertext in the test vector.
                        </h:div>
                      </h:p>
                      <h:p>
                        If the TOE acts as a receiver, the following evaluation activities shall be performed to ensure the proper operation of every TOE supported combination of RSA-based key establishment scheme:
                      </h:p>
                      <h:p>
                        <h:div class="indent">
                          To conduct this test the evaluator shall generate or obtain test vectors from a known good implementation of the TOE supported schemes. For each combination of supported key establishment scheme and its options (with or without key confirmation if supported, for each supported key confirmation MAC function if key confirmation is supported, and for each supported mask generation function if KTS-OAEP is supported), the tester shall generate 10 sets of test vectors. Each test vector shall include the RSA private key, the plaintext keying material (KeyData), any additional input parameters if applicable, the MacTag in cases where key confirmation is incorporated, and the outputted ciphertext. For each test vector, the evaluator shall perform the key establishment decryption operation on the TOE and ensure that the outputted plaintext keying material (KeyData) is equivalent to the plaintext keying material in the test vector. In cases where key confirmation is incorporated, the evaluator shall perform the key confirmation steps and ensure that the outputted MacTag is equivalent to the MacTag in the test vector.
                        </h:div>
                      </h:p>
                      <h:p>
                        The evaluator shall ensure that the TSS describes how the TOE handles decryption errors. In accordance with NIST Special Publication 800-56B, the TOE must not reveal the particular error that occurred, either through the contents of any outputted or logged error message or through timing variations. If KTS-OAEP is supported, the evaluator shall create separate contrived ciphertext values that trigger each of the three decryption error checks described in NIST Special Publication 800-56B section 7.2.2.3, ensure that each decryption attempt results in an error, and ensure that any outputted or logged error message is identical for each. If KTS-KEM-KWS is supported, the evaluator shall create separate contrived ciphertext values that trigger each of the three decryption error checks described in NIST Special Publication 800-56B section 7.2.3.3, ensure that each decryption attempt results in an error, and ensure that any outputted or logged error message is identical for each.
                      </h:p>
                      <h:p>
                        <h:b>
                          FFC Schemes using “safe-prime” groups
                        </h:b>
                      </h:p>
                      <h:p>
                        The evaluator shall verify the correctness of the TSF’s implementation of safe-prime groups by using a known good implementation for each protocol selected in FTP_DIT_EXT.1 that uses safe-prime groups. This test must be performed for each safe-prime group that each protocol uses.
                      </h:p>
                      <h:p>
                        <h:b>
                          ML-KEM Key Establishment Schemes
                        </h:b>
                      </h:p>
                      <h:p>
                        To test encapsulation the evaluator shall 10x input to the internal Encaps function a random 32-byte string and an encapsulation key. Verify the returned cipher text and shared secret is correct using a known good implementation. Here internal refers to the TOE’s implementation of the function ML-KEM.Encaps_internal(-,-) as described in FIPS.203.
                      </h:p>
                      To test decapsulation the evaluator shall 10x input to the internal Decaps function a cipher text and decapsulation key. Verify the returned shared secret is correct using a known good implementation. The tests should include a mix of valid and invalid/garbled cipher texts. Here internal refers to the TOE’s implementation of the function ML-KEM.Decaps_internal(-,-) as described in FIPS.203.
                    </Tests>
                  </aactivity>
                </f-element>
              </xpath-specified>
            </replace>
          </base-sfr-spec>
        </section>
        <section title="Cryptographic Key Generation Services" id="app-fcs-ckm-ext-1">
          <h:p>
            This selection differs from its definition in the App PP by
                removing the selection for “generate no asymmetric cryptographic keys” for this PP-Module because a VPN client
                TOE will either perform its own key generation or interface with the underlying platform to provide this 
                service, either of which causes FCS_CKM.1/AK to be claimed.
          </h:p>
          The text of the requirement is replaced with:
          <h:br/>
          <h:br/>
          The application shall [
          <h:b>
            selection:
          </h:b>
          <h:ul>
            <h:i>
              <h:li>
                invoke platform-provided functionality for asymmetric key generation
              </h:li>
              <h:li>
                implement asymmetric key generation
              </h:li>
            </h:i>
          </h:ul>
          ].
          <!-- FCS_CKM_EXT.1 Cryptographic Key Generation Services -->
          <base-sfr-spec cc-id="fcs_ckm_ext.1" id="fcs-ckm-ext-1" name="Cryptographic Key Generation Services">
            <consistency-rationale/>
            <replace>
              <xpath-specified xpath="*//cc:f-element[@id='fel-asym-key-gen']//cc:title">
                <f-element id="fel-asym-key-gen">
                  <title>
                    The application shall
                    <selectables linebreak="yes">
                      <selectable id="sel_invoke_genkey">
                        invoke platform-provided functionality for asymmetric key generation
                      </selectable>
                      <selectable id="sel_impl_genkey">
                        implement asymmetric key generation
                      </selectable>
                    </selectables>
                    .
                  </title>
                  <note role="application">
                    If "<h:b>
                      implement asymmetric key generation
                    </h:b>" or "<h:b>
                      invoke platform-provided functionality for asymmetric key generation
                    </h:b>" is selected, then FCS_CKM.1/AK must be claimed in the ST.
                  </note>
                  <aactivity level="element">
                    <TSS>
                      <h:p>
                        The evaluator shall examine the TSS to verify that it describes whether the TSF has functions that require the use of asymmetric key generation services, and whether these services are implemented within the TOE boundary or invoked by the TSF from its operational environment.
                      </h:p>
                      <h:p>
                        Conditional: If the ST claims "generate no asymmetric keys," the evaluator shall ensure that the TOE does not have any functions that would require asymmetric key generation (for example, because it does not use asymmetric keys for any purpose or because the keys that it does use are generated elsewhere and imported into it as part of initial setup).
                      </h:p>
                    </TSS>
                    <Guidance>
                      <h:p>
                        None.
                      </h:p>
                    </Guidance>
                    <Tests>
                      <h:p>
                        None.
                      </h:p>
                    </Tests>
                  </aactivity>
                </f-element>
              </xpath-specified>
            </replace>
          </base-sfr-spec>
        </section>
        <section title="Cryptographic Operation - Encryption/Decryption" id="app-fcs-cop-1-skc">
          <h:p>
            This SFR is selection-based in the Base-PP and remains selection-based here because
                this PP-Module allows for the possibility that the TSF relies on platform-provided
                cryptographic algorithm services for its own implementation of IPsec. However, if
                the TSF does claim this SFR to support IPsec, the ST author must select at minimum
                both AES-CBC and AES-GCM for consistency
                with the relevant IPsec claims (FCS_IPSEC_EXT.1.4 requires 
                AES-GCM and FCS_IPSEC_EXT.1.6 requires AES-CBC). The "no other modes" selection is added
                for the case where no AES claims need to be made beyond what is mandated for IPsec.
          </h:p>
          The text of the requirement is replaced with:
          <h:br/>
          <h:br/>
          The
          <h:b>
            application
          </h:b>
          shall
          <h:b>
            [selection:
            <h:i>
              perform, invoke the platform to perform
            </h:i>
            ]
          </h:b>
          [
          <h:i>
            encryption and decryption
          </h:i>
          ] in accordance with a specified cryptographic algorithm
          <h:b>
            <h:ul>
              <h:li>
                AES-CBC (as defined in NIST SP 800-38A) mode
              </h:li>
              <h:li>
                AES-GCM (as defined in NIST SP 800-38D) mode
              </h:li>
            </h:ul>
            and
          </h:b>
          [
          <h:b>
            selection:
          </h:b>
          <h:i>
            <h:ul>
              <h:li>
                AES-XTS (as defined in NIST SP 800-38E) mode
              </h:li>
              <h:li>
                AES-CCM (as defined in NIST SP 800-38C) mode
              </h:li>
              <h:li>
                AES-CTR (as defined in NIST SP 800-38A) mode
              </h:li>
              <h:li>
                <h:b>
                  no other modes
                </h:b>
              </h:li>
            </h:ul>
          </h:i>
          ] and cryptographic key size of [
          <h:i>
            256-bits
          </h:i>
          ].
          <!-- FCS_COP.1/SKC Cryptographic Operation - Encryption/Decryption -->
          <base-sfr-spec cc-id="fcs_cop.1" id="fcom_crypto" name="Cryptographic Operation - Encryption/Decryption" iteration="SKC">
            <consistency-rationale/>
            <replace>
              <xpath-specified xpath="*//cc:f-element[@id='fel-sym-encrypt']//cc:title">
                <f-element id="fel-sym-encrypt">
                  <title>
                    The
                    <h:b>
                      application
                    </h:b>
                    shall
                    <selectables>
                      <selectable id="FCS_COP.1_1">
                        perform
                      </selectable>
                      <selectable id="FCS_COP.1_2">
                        invoke the platform to perform
                      </selectable>
                    </selectables>
                    [
                    <h:i>
                      encryption and decryption
                    </h:i>
                    ] in accordance with a specified cryptographic algorithm
                    <h:b>
                      <h:ul>
                        <h:li>
                          AES-CBC (as defined in NIST SP 800-38A) mode
                        </h:li>
                        <h:li>
                          AES-GCM (as defined in NIST SP 800-38D) mode
                        </h:li>
                      </h:ul>
                      and
                    </h:b>
                    <selectables linebreak="yes">
                      <selectable id="sel_aes_xts">
                        AES-XTS (as defined in NIST SP 800-38E) mode
                      </selectable>
                      <selectable id="sel_aes_ccm">
                        AES-CCM (as defined in NIST SP 800-38C) mode
                      </selectable>
                      <selectable id="sel_aes_ctr">
                        AES-CTR (as defined in NIST SP 800-38A) mode
                      </selectable>
                      <selectable id="FCS_COP.1_3">
                        <h:b>
                          no other modes
                        </h:b>
                      </selectable>
                    </selectables>
                    and cryptographic key size of [
                    <h:i>
                      256-bits
                    </h:i>
                    ].
                  </title>
                  <note role="application">
                    <h:p>
                      This is dependent on implementing cryptographic functionality, as in FTP_DIT_EXT.1.
                    </h:p>
                    <h:p>
                      For the selection, the ST author should choose the mode or modes in which AES operates.
                    </h:p>
                    <h:p>
                      It is expected that symmetric keys will be generated or imported by the TSF as a dependency on this function, so FCS_CKM.1/SK must be claimed when this SFR is claimed. FCS_SNI_EXT.1 must also be claimed to define what, if any, salts the cryptographic algorithm implementation uses.
                    </h:p>
                  </note>
                </f-element>
              </xpath-specified>
            </replace>
          </base-sfr-spec>
        </section>
        <section title="Protection of Data in Transit" id="app-ftp-dit-ext-1">
          <h:p>
            This SFR is identical to what is defined in the App PP except that the selection for IPsec is
                mandated, the ST author is forced to select the "encrypt all transmitted sensitive data" option, and
                the options for invoking platform-provided IPsec functionality have been removed. Since it is possible for a conformant TOE to implement IPsec while relying on the platform for some other protocol (e.g., using platform-provided TLS to obtain IPsec configuration from a gateway), the other platform-provided protocol selections remain.  
                Additionally, since it is possible that a conformant TOE may not implement any encryption protocols other than 
                IPsec, “no other protocols” is provided as a selectable option in the list of supported protocols.
          </h:p>
          The text of the requirement is replaced with:
          <h:br/>
          <h:br/>
          The application shall [
          <h:b>
            selection:
          </h:b>
          <h:i>
            <h:ul>
              <h:li>
                encrypt all transmitted [
                <h:i>
                  sensitive data
                </h:i>
                ] with
                <h:b>
                  IPsec as defined in the PP-Module for VPN Client and
                </h:b>
                [
                <h:b>
                  selection:
                </h:b>
                <h:ul>
                  <h:li>
                    HTTPS as a client in accordance with FCS_HTTPS_EXT.1/Client
                  </h:li>
                  <h:li>
                    HTTPS as a server in accordance with FCS_HTTPS_EXT.1/Server
                  </h:li>
                  <h:li>
                    HTTPS as a server using mutual authentication in accordance with FCS_HTTPS_EXT.2
                  </h:li>
                  <h:li>
                    TLS as a server as defined in the Functional Package for TLS and also supports functionality for [
                    <h:b>
                      selection:
                    </h:b>
                    mutual authentication, none]
                  </h:li>
                  <h:li>
                    TLS as a client as defined in the Functional Package for TLS
                  </h:li>
                  <h:li>
                    DTLS as a server as defined in the Functional Package for TLS and also supports functionality for [
                    <h:b>
                      selection:
                    </h:b>
                    mutual authentication, none]
                  </h:li>
                  <h:li>
                    DTLS as a client as defined in the Functional Package for TLS
                  </h:li>
                  <h:li>
                    SSH as defined in the Functional Package for Secure Shell
                  </h:li>
                  <h:li>
                    <h:b>
                      no other functions
                    </h:b>
                  </h:li>
                </h:ul>
                ] for [
                <h:b>
                  assignment:
                </h:b>
                function(s)] using certificates as defined in the Functional Package for X.509
              </h:li>
              <h:li>
                invoke platform-provided functionality to encrypt all transmitted sensitive data with [
                <h:b>
                  selection:
                </h:b>
                HTTPS, TLS, DTLS, SSH] for [
                <h:b>
                  assignment:
                </h:b>
                function(s)] using certificates as defined in the Functional Package for X.509
              </h:li>
            </h:ul>
          </h:i>
          ] between itself and another trusted IT product.
          <!-- FTP_DIT_EXT.1 Protection of Data in Transit -->
          <base-sfr-spec cc-id="ftp_dit_ext.1" id="ftp-dit-ext-1" name="Protection of Data in Transit">
            <consistency-rationale/>
            <replace>
              <xpath-specified xpath="*//cc:f-element[@id='fel-transmit']//cc:title">
                <f-element id="fel-transmit">
                  <title>
                    The application shall
                    <selectables linebreak="yes">
                      <selectable id="FTP_DIT_EXT.1_1">
                        encrypt all transmitted [
                        <h:i>
                          sensitive data
                        </h:i>
                        ] with
                        <h:b>
                          IPsec as defined in the PP-Module for VPN Client, version 2.6 and
                        </h:b>
                        <selectables>
                          <selectable id="sel_all_https_cl">
                            HTTPS as a client in accordance with FCS_HTTPS_EXT.1/Client
                          </selectable>
                          <selectable id="sel_all_https_sv">
                            HTTPS as a server in accordance with FCS_HTTPS_EXT.1/Server
                          </selectable>
                          <selectable id="sel_all_https_ma">
                            HTTPS as a server using mutual authentication in accordance with FCS_HTTPS_EXT.2
                          </selectable>
                          <selectable id="sel_all_tlss">
                            TLS as a server as defined in the
                            <h:a href="https://www.niap-ccevs.org/protectionprofiles/465">
                              Functional Package for TLS
                            </h:a>
                            and also supports functionality for
                            <selectables>
                              <selectable id="FTP_DIT_EXT.1_2">
                                mutual authentication
                              </selectable>
                              <selectable id="FTP_DIT_EXT.1_3">
                                none
                              </selectable>
                            </selectables>
                          </selectable>
                          <selectable id="sel_all_tlsc">
                            TLS as a client as defined in the
                            <h:a href="https://www.niap-ccevs.org/protectionprofiles/465">
                              Functional Package for TLS
                            </h:a>
                          </selectable>
                          <selectable id="sel_all_dtlss">
                            DTLS as a server as defined in the
                            <h:a href="https://www.niap-ccevs.org/protectionprofiles/465">
                              Functional Package for TLS
                            </h:a>
                            and also supports functionality for
                            <selectables>
                              <selectable id="FTP_DIT_EXT.1_4">
                                mutual authentication
                              </selectable>
                              <selectable id="FTP_DIT_EXT.1_5">
                                none
                              </selectable>
                            </selectables>
                          </selectable>
                          <selectable id="sel_all_dtlsc">
                            DTLS as a client as defined in the
                            <h:a href="https://www.niap-ccevs.org/protectionprofiles/465">
                              Functional Package for TLS
                            </h:a>
                          </selectable>
                          <selectable id="sel_all_ssh">
                            SSH as defined in the
                            <h:a href="https://www.niap-ccevs.org/protectionprofiles/515">
                              Functional Package for Secure Shell
                            </h:a>
                          </selectable>
                          <selectable id="FTP_DIT_EXT.1_6">
                            <h:b>
                              no other protocols
                            </h:b>
                          </selectable>
                        </selectables>
                        for
                        <assignable>
                          function(s)
                        </assignable>
                        using certificates as defined in the
                        <h:a href="https://www.niap-ccevs.org/protectionprofiles/511">
                          Functional Package for X.509
                        </h:a>
                      </selectable>
                      <selectable id="FTP_DIT_EXT.1_8">
                        invoke platform-provided functionality to encrypt all transmitted sensitive data with
                        <selectables>
                          <selectable id="FTP_DIT_EXT.1_9">
                            HTTPS
                          </selectable>
                          <selectable id="FTP_DIT_EXT.1_10">
                            TLS
                          </selectable>
                          <selectable id="FTP_DIT_EXT.1_11">
                            DTLS
                          </selectable>
                          <selectable id="FTP_DIT_EXT.1_12">
                            SSH
                          </selectable>
                        </selectables>
                        for
                        <assignable>
                          function(s)
                        </assignable>
                        using certificates as defined in the
                        <h:a href="https://www.niap-ccevs.org/protectionprofiles/511">
                          Functional Package for X.509
                        </h:a>
                      </selectable>
                    </selectables>
                    between itself and another trusted IT product.
                  </title>
                  <ext-comp-def-title>
                    <title>
                      The application shall
                      <selectables onlyone="yes" linebreak="yes">
                        <selectable>
                          not transmit any
                          <selectables onlyone="yes">
                            <selectable>
                              data
                            </selectable>
                            <selectable>
                              sensitive data
                            </selectable>
                          </selectables>
                        </selectable>
                        <selectable>
                          encrypt all transmitted
                          <selectables onlyone="yes">
                            <selectable>
                              sensitive data
                            </selectable>
                            <selectable>
                              data
                            </selectable>
                          </selectables>
                          with
                          <assignable>
                            trusted protocol
                          </assignable>
                          for
                          <assignable>
                            function(s)
                          </assignable>
                        </selectable>
                        <selectable>
                          invoke platform-provided functionality to encrypt all transmitted sensitive data with
                          <assignable>
                            trusted protocol
                          </assignable>
                          for
                          <assignable>
                            function(s)
                          </assignable>
                        </selectable>
                        <selectable>
                          invoke platform-provided functionality to encrypt all transmitted data with
                          <assignable>
                            trusted protocol
                          </assignable>
                          for
                          <assignable>
                            function(s)
                          </assignable>
                        </selectable>
                      </selectables>
                      between itself and another trusted IT product.
                    </title>
                  </ext-comp-def-title>
                  <note role="application">
                    <h:p>
                      Encryption is not required for applications transmitting data that is not sensitive.
                    </h:p>
                    <h:p>
                      If "<h:b>
                        not transmit any...
                      </h:b>" is selected, no other option can be selected.
                    </h:p>
                    <h:p>
                      If "<h:b>
                        not transmit any...
                      </h:b>" is NOT selected, it is possible to select more than one of the other options to encrypt data for a specific cryptographic function (e.g., application encrypts management data using SSH AND application invokes platform-provided functionality to encrypt syslog data using TLS OR application encrypts syslog data using TLS. Protocol selections and function assignments should be made to cover all data/sensitive data.
                    </h:p>
                    <h:p>
                      If "<h:b>
                        encrypt all transmitted...
                      </h:b>" is selected and "<h:b>
                        TLS
                      </h:b>" or "<h:b>
                        DTLS
                      </h:b>" as a client or server is selected, then corresponding components from
                      <xref to="pkg-tls"/>
                      must be selected.
                    </h:p>
                    <h:p>
                      If "<h:b>
                        encrypt all transmitted...
                      </h:b>" is selected and "<h:b>
                        HTTPS
                      </h:b>" is selected, then FCS_HTTPS_EXT.1 is required.
                    </h:p>
                    <h:p>
                      If "<h:b>
                        encrypt all transmitted...
                      </h:b>" is selected and "<h:b>
                        SSH
                      </h:b>" is selected, then the TSF shall be validated against the
                      <h:a href="https://www.niap-ccevs.org/protectionprofiles/459">
                        Functional Package for Secure Shell
                      </h:a>
                      .
                    </h:p>
                    <h:p>
                      If "<h:b>
                        encrypt all transmitted...
                      </h:b>" is selected and "<h:b>
                        IPsec
                      </h:b>" is selected, then the TSF must claim conformance to a
                      <h:i>
                        PP-Configuration that includes the VPN Client PP-Module, version 2.6.
                      </h:i>
                    </h:p>
                    <h:p>
                      If "<h:b>
                        encrypt all transmitted...
                      </h:b>" is selected, FCS_CKM.2 and all iterations of FCS_COP.1 must be claimed.
                    </h:p>
                    <h:p>
                      Claims from the
                      <h:a href="https://www.niap-ccevs.org/protectionprofiles/511">
                        Functional Package for X.509
                      </h:a>
                      are only required to the extent that they are needed to support the functionality required by the trusted protocols that are claimed.
                    </h:p>
                    <h:p>
                      If the TSF implements a protocol that requires the validation of a certificate presented by an external entity, FIA_X509_EXT.1 and FIA_X509_EXT.2 will be claimed. FIA_TSM_EXT.1 may also be claimed if the TSF implements its own trust store. Note that FIA_X509_EXT.1 and FIA_X509_EXT.2 have selections for invocation of platform-provided functionality, so it is expected that these claims are made and tested even when the trusted protocol is implemented by the TOE platform.
                    </h:p>
                    <h:p>
                      If the TSF implements a protocol that requires the presentation of any certificates to an external entity, FIA_XCU_EXT.2 from
                      <h:a href="https://www.niap-ccevs.org/protectionprofiles/511">
                        Functional Package for X.509
                      </h:a>
                      will be claimed. FIA_X509_EXT.3 from
                      <h:a href="https://www.niap-ccevs.org/protectionprofiles/511">
                        Functional Package for X.509
                      </h:a>
                      will also be claimed, along with any applicable dependencies, depending on how the certificates presented by the TOE are obtained.
                    </h:p>
                    <h:p>
                      If the TSF implements a protocol that does not require presenting or validating X.509 certificates, no claims from the
                      <h:a href="https://www.niap-ccevs.org/protectionprofiles/511">
                        Functional Package for X.509
                      </h:a>
                      are required.
                    </h:p>
                  </note>
                </f-element>
              </xpath-specified>
            </replace>
          </base-sfr-spec>
        </section>
      </modified-sfrs>
      <!-- 5.VPN client.2 Additional SFRs -->
      <additional-sfrs>
        <section title="Cryptographic Support (FCS)">
          <section id="app-audit-table" title="Auditable Events for App PP Additional SFRs">
            <audit-table id="app-additional" table="tab-app-additional" title="Auditable Events for App PP Additional SFRs">
            </audit-table>
          </section>
          <!-- FCS_CKM.6 Cryptographic Key Destruction -->
          <f-component cc-id="fcs_ckm.6" id="ap-fcs-ckm-6" name="Cryptographic Key Destruction">
            <comp-lev>
              requires the TSF to destroy key data when no longer required.
            </comp-lev>
            <management>
              No specific management functions are identified.
            </management>
            <audit>
              There are no auditable events foreseen.
            </audit>
            <dependencies>
              No dependencies.
            </dependencies>
            <consistency-rationale/>
            <f-element id="ap-fcs-ckm-6e1">
              <title>
                The
                <h:b>
                  <selectables>
                    <selectable id="fcs_ckm.6.1_1">
                      TOE
                    </selectable>
                    <selectable id="fcs_ckm.6.1_2">
                      TOE platform
                    </selectable>
                  </selectables>
                </h:b>
                shall destroy
                <assignable>
                  list of cryptographic keys (including keying material)
                </assignable>
                when
                <selectables>
                  <selectable id="fcs_ckm.6.1_4">
                    no longer needed
                  </selectable>
                  <selectable id="fcs_ckm.6.1_6">
                    <assignable>
                      assignment: other circumstances for key or keying material destruction
                    </assignable>
                  </selectable>
                </selectables>
                .
              </title>
              <aactivity level="component">
                <TSS>
                  The evaluator shall ensure that all plaintext secret and private cryptographic keys and CSPs (whether
			manipulated by the TOE or exclusively by the platform) are identified in the VPN client ST's TSS, and that
			they are accounted for by the EAs in this section.
                  <h:br/>
                  <h:br/>
                  <h:b>
                    Requirement met by the platform:
                  </h:b>
                  <h:br/>
                  <h:br/>
                  The evaluator shall check to ensure the TSS describes each of the secret keys (keys used for
                  	symmetric encryption), private keys, and CSPs used to generate keys that are not otherwise covered
                  	by the FCS_CKM.6 requirement levied on the TOE.
                  <h:br/>
                  <h:br/>
                  For each platform listed in the ST, the evaluator shall examine the TSS of the ST of the platform to
                  	ensure that each of the secret keys, private keys, and CSPs used to generate the keys listed above are
                  	covered.
                  <h:br/>
                  <h:br/>
                  <h:b>
                    Requirement met by the TOE:
                  </h:b>
                  <h:br/>
                  <h:br/>
                  The evaluator shall check to ensure the TSS describes when each of the plaintext keys are cleared (e.g.,
			system power off, disconnection of an IPsec connection, when no longer needed by the VPN channel per
			the protocol); and the type of clearing procedure that is performed (cryptographic erase, overwrite with
			zeros, overwrite three or more times by a different alternating pattern, overwrite with random pattern,
			or block erase). If different types of memory are used to store the materials to be protected, the evaluator
			shall check to ensure that the TSS describes the clearing procedure in terms of the memory in which the
			data are stored (for example, "secret keys stored on flash are cleared by overwriting once with zeros,
			while secret keys stored on the internal persistent storage device are cleared by overwriting three times
			with a random pattern that is changed before each write").
                  <h:br/>
                  <h:br/>
                </TSS>
                <Guidance>
                  There are no guidance EAs for this requirement.
                  <h:br/>
                  <h:br/>
                </Guidance>
                <Tests>
                  For each key clearing situation described in the TSS, the evaluator shall repeat the following test.
                  <testlist>
                    <test>
                      The evaluator shall use appropriate combinations of specialized OE and
					development tools (debuggers, simulators, etc.) for the TOE and instrumented TOE builds to test that keys
					are cleared correctly, including all intermediate copies of the key that may have been created internally
					by the TOE during normal cryptographic processing with that key.
                      <h:br/>
                      <h:br/>
                      Cryptographic TOE implementations in software shall be loaded and exercised under a debugger to
					perform such tests. The evaluator shall perform the following test for each key subject to clearing,
					including intermediate copies of keys that are persisted encrypted by the TOE:
                      <h:br/>
                      <h:br/>
                      <h:ol type="1">
                        <h:li>
                          Load the instrumented TOE build in a debugger.
                        </h:li>
                        <h:li>
                          Record the value of the key in the TOE subject to clearing.
                        </h:li>
                        <h:li>
                          Cause the TOE to perform a normal cryptographic processing with the key from #1.
                        </h:li>
                        <h:li>
                          Cause the TOE to clear the key.
                        </h:li>
                        <h:li>
                          Cause the TOE to stop the execution but not exit.
                        </h:li>
                        <h:li>
                          Cause the TOE to dump the entire memory footprint of the TOE into a binary file.
                        </h:li>
                        <h:li>
                          Search the content of the binary file created in #6 for instances of the known key value from
  					                  #1.
                        </h:li>
                      </h:ol>
                      <h:br/>
                      The test succeeds if no copies of the key from #1 are found in step #7 above and fails otherwise.
                      <h:br/>
                      <h:br/>
                      The evaluator shall perform this test on all keys, including those persisted in encrypted form, to ensure
					intermediate copies are cleared.
                    </test>
                  </testlist>
                </Tests>
              </aactivity>
            </f-element>
            <f-element id="fcs_ckm-6-2">
              <title>
                The TSF shall destroy cryptographic keys and keying material specified by FCS_CKM.6.1 in
                accordance with a specified cryptographic key destruction method
                <assignable>
                  cryptographic key destruction method
                </assignable>
                that meets the following:
                <assignable>
                  list of standards
                </assignable>
                .
              </title>
              <note role="application">
                Any security related information (such as keys, authentication data, and
                passwords) must be zeroized when no longer in use to prevent the disclosure or
                modification of security critical data.
                <h:br/>
                <h:br/>
                The zeroization indicated above applies to each intermediate storage area for
                plaintext key or CSP data (i.e., any storage, such as memory buffers, that is included in
                the path of such data) upon the transfer of the key or CSP to another location.
                <h:br/>
                <h:br/>
                In practice, the TOE will not implement all of the functionality associated with
                the requirement, since if it performs zeroization at all it will be by invoking
                platform interfaces to perform the storage location clear or overwrite function. The
                ST author should select "TOE" when, for at least one of the keys needed to meet
                the requirements of this PP-Module, the TOE manipulates (reads, writes) the data
                identified in the requirement and thus needs to ensure that those data are
                cleared. In these cases, it is sufficient for the TOE to invoke the correct
                underlying functions of the host to perform the zeroization—it does not imply
                that the TOE has to include a kernel-mode memory driver to ensure the data are
                zeroized. The ST author should select "TOE platform" when native OS functionality is used to perform the key destruction.
                <h:br/>
                <h:br/>
                In the likely event that some of the data are manipulated by the TOE and other
                data are manipulated entirely by the platform, the ST author must select both
                options.
              </note>
            </f-element>
          </f-component>
          <!-- FCS_CKM_EXT.2 Cryptographic Key Storage -->
          <f-component cc-id="fcs_ckm_ext.2" id="ap-fcs-ckm-ext-2" name="Cryptographic Key Storage">
            <comp-lev>
              requires the TSF to securely store key data when not in use.
            </comp-lev>
            <management>
              No specific management functions are identified.
            </management>
            <audit>
              There are no auditable events foreseen.
            </audit>
            <dependencies>
              No dependencies.
            </dependencies>
            <consistency-rationale/>
            <f-element id="ap-fcs-ckm-ext-2e1">
              <title>
                The
                <selectables>
                  <selectable id="fcs_ckm_ext.2.1_1">
                    VPN client
                  </selectable>
                  <selectable id="fcs_ckm_ext.2.1_2">
                    OS
                  </selectable>
                </selectables>
                shall store persistent secrets and private keys
                when not in use in platform-provided key storage.
              </title>
              <note role="application">
                This requirement ensures that persistent secrets and private keys are stored
                securely when not in use. This differs from FCS_STO_EXT.1 in the Base-PP, which
                only applies to secure storage of administrative credentials. If some secrets or keys
                are manipulated by the TOE and others are manipulated by the platform, then
                both of the selections can be specified by the ST author.
              </note>
              <aactivity level="element">
                <TSS>
                  Regardless of whether this requirement is met by the TOE or the TOE platform, the evaluator shall check
			the TSS to ensure that it lists each persistent secret (credential, secret key) and private key needed to
			meet the requirements in the ST. For each of these items, the evaluator shall confirm that the TSS lists for
			what purpose it is used, and how it is stored. The evaluator shall then perform the following actions:
                  <h:br/>
                  <h:br/>
                  <h:b>
                    Persistent secrets and private keys manipulated by the platform:
                  </h:b>
                  <h:br/>
                  <h:br/>
                  For each platform listed in the ST, the evaluator shall examine the ST of the platform to ensure that the
			persistent secrets and private keys listed as being stored by the platform in the VPN client ST are identified
			as being protected in that platform's ST
                  <h:br/>
                  <h:br/>
                  <h:b>
                    Persistent secrets and private keys manipulated by the TOE:
                  </h:b>
                  <h:br/>
                  <h:br/>
                  The evaluator shall review the TSS to determine that it makes a case that, for each item listed as being
			manipulated by the TOE, it is not written unencrypted to persistent memory, and that the item is stored
			by the platform.
                  <h:br/>
                  <h:br/>
                </TSS>
                <Guidance>
                  There are no guidance EAs for this requirement.
                  <h:br/>
                  <h:br/>
                </Guidance>
                <Tests>
                  There are no test EAs for this requirement.
                </Tests>
              </aactivity>
            </f-element>
          </f-component>
        </section>
      </additional-sfrs>
      <con-toe>
        If this PP-Module is used to extend the App PP, the TOE type for the overall TOE is still a software
		application. The TOE boundary is made more specific by defining the TOE as a specific type of
		application.
      </con-toe>
      <con-sec-prob>
        The threats and assumptions defined by this PP-Module (see sections 3.1 and 3.2) supplement those
		defined in the App PP as follows:
      </con-sec-prob>
      <con-Obj>
        The security objectives defined by this PP-Module (see sections 4.1 and 4.2) supplement those defined
		in the App PP as follows:
      </con-Obj>
      <con-op-in/>
      <con-mod ref="T.UNAUTHORIZED_ACCESS">
        The threat of an attacker gaining access to a network interface or data
		that is transmitted over it is consistent with the T.NETWORK_ATTACK and
		T.NETWORK_EAVESDROP threats in the App PP.
      </con-mod>
      <con-mod ref="T.TSF_CONFIGURATION">
        The threat of a misconfigured VPN client is consistent with the
		T.LOCAL_ATTACK threat in the App PP.
      </con-mod>
      <con-mod ref="T.USER_DATA_REUSE">
        Inadvertent disclosure of user data to an unauthorized recipient is
		consistent with the T.NETWORK_EAVESDROP threat in the App PP.
      </con-mod>
      <con-mod ref="T.TSF_FAILURE">
        A failure of TSF functionality could compromise the local system, which is
		consistent with the T.LOCAL_ATTACK threat in the App PP.
      </con-mod>
      <con-mod ref="A.NO_TOE_BYPASS">
        The A.NO_TOE_BYPASS assumption assumes that the OE is configured in such a manner that the only network route
		to the protected network is through the TOE. This does not conflict with
		the App PP because the App PP makes no assumptions about the network
		architecture in which the TOE is deployed.
      </con-mod>
      <con-mod ref="A.PHYSICAL">
        The assumption that physical security is provided by the environment is
		not explicitly stated in the App PP but is consistent with the A.PLATFORM
		assumption defined in the App PP, which expects the computing platform
		to be trusted.
      </con-mod>
      <con-mod ref="A.TRUSTED_CONFIG">
        The assumption that personnel responsible for the TOE’s configuration are
		trusted to follow the guidance is consistent with the A.PROPER_ADMIN
		defined in the App PP.
      </con-mod>
      <con-mod ref="OE.NO_TOE_BYPASS">
        This objective addresses behavior that is out of scope of the App PP
		and does not define an environment that is globally applicable to all
		software applications.
      </con-mod>
      <con-mod ref="OE.PHYSICAL">
        This is part of satisfying OE.PLATFORM as defined in the App PP
		because physical security is required for the underlying platform to
		be considered ‘trustworthy’.
      </con-mod>
      <con-mod ref="OE.TRUSTED_CONFIG">
        The expectation of trusted configuration is consistent with
		OE.PROPER_USER and OE.PROPER_ADMIN in the App PP.
      </con-mod>
      <con-mod ref="ap-fcs-ckm-1-ak">
        The ST author is instructed to make specific selections at minimum to
		address VPN client requirements; the SFR behavior itself is unmodified.
		Additionally, this behavior is selection-based in the App PP but is made
		mandatory since it is required for VPN client functionality.
      </con-mod>
      <con-mod ref="ap-fcs-ckm-2">
        The ST author is instructed to make specific selections at minimum to
		address VPN client requirements and is modified to include Diffie-Hellman
		group 14 as an additional supported method for key establishment.
      </con-mod>
      <con-mod ref="ap-fcs-ckm-1">
        The ST author is instructed to make specific selections at minimum to
		address VPN client requirements; specifically, since key generation services
		are required in some capacity in order to support VPN functionality, the ST
		author loses the choice of stating that the application does not have any key
		generation functionality. Additionally, this behavior is selection-based in the
		App PP but is made mandatory since it is required for VPN client
		functionality
      </con-mod>
      <con-mod ref="ap-fcs-cop-1-skc">
        The ST author is given guidance to make specific selections if this
		selection-based SFR is claimed in support of IPsec functionality. The SFR behavior itself
		is unmodified.
      </con-mod>
      <con-mod ref="ap-fia-x509-ext-2">
        This PP-Module adds IPsec as a new trusted protocol where x.509 certificate
		authentication is used.
      </con-mod>
      <con-mod ref="ap-ftp-dit-ext-1">
        This PP-Module is for the VPN client application and does not maintain any
		sensitive data of its own. Therefore, there is no need to protect (through
		FTP_DIT_EXT.1.1) VPN-client-specific data.
      </con-mod>
      <con-mod ref="ap-fcs-ckm-ext-2">
        This PP-Module adds a requirement for key storage, which is new
		functionality when compared to the App PP but does not interfere with its existing security functions.
      </con-mod>
      <con-mod ref="ap-fcs-ckm-6">
        This PP-Module adds a requirement for key destruction, which is new
		functionality when compared to the App PP but does not interfere with its
		existing security functions.
      </con-mod>
      <con-mod ref="fcs-ckm-1-vpn">
        This SFR defines the method of key generation for IKE peer authentication,
		which is a function that does not interfere with the functionality defined in the App PP.
      </con-mod>
      <con-mod ref="fcs-ipsec-ext-1">
        This SFR defines the VPN client’s IPsec implementation, which is added
		functionality that does not interfere with the application functions.
      </con-mod>
      <con-mod ref="fdp-rip-2">
        The requirement to protect against reuse of residual data is a property of
		the VPN client behavior and does not impact the general application functionality.
      </con-mod>
      <con-mod ref="fmt-smf-1-vpn">
        The ability to configure the VPN client behavior does not affect whether the
		application as a whole can perform its security functions.
      </con-mod>
      <con-mod ref="fpt-tst-ext-1-vpn">
        Self-testing of the VPN client functionality does not impact the ability of the
		application to perform its security functions.
      </con-mod>
      <con-mod ref="fau-gen-1-vpn">
        Audit data generated by the VPN client does not interfere with application
		functionality. For cases where auditing is performed by the TOE platform, a
		software application is installed on a general-purpose OS or
		mobile device, both of which can reasonably be expected to provide audit
		functionality.
      </con-mod>
      <con-mod ref="fau-sel-1-vpn">
        The ability to suppress the generation of certain audit data related to VPN
		activity does not interfere with the ability of the application to satisfy its security functionality.
      </con-mod>
      <con-mod ref="fdp-vpn-ext-1">
        The ability of the VPN client to prevent split tunneling of IPsec traffic
		requires it to have hooks into lower-level OS behavior, but there are no
		requirements in the App PP that would prevent this functionality from being supported.
      </con-mod>
      <con-mod ref="fia-bma-ext-1">
        This SFR relates to biometric authentication, which does not conflict with the App PP because it may be a function offered by the 
        OE in which a TOE defined by the App PP is deployed.
      </con-mod>
      <con-mod ref="fpf-mfa-ext-1">
        This SFR relates specifically to the handling of traffic that is used for the
        establishment of IPsec connections.
      </con-mod>
      <con-mod ref="fcs-eap-ext-1">
        This SFR defines an additional cryptographic protocol that is beyond the scope of those defined in the App PP but 
	      does not prevent any App PP functionality
        from being implemented.
      </con-mod>
      <con-mod ref="fia-psk-ext-1">
        This SFR defines the use of pre-shared keys, which is behavior that only
        relates to the establishment of IPsec connections.
      </con-mod>
      <con-mod ref="fia-psk-ext-2">
        This SFR relates to use of pre-shared keys, which is behavior that only
        applies to the establishment of IPsec connections.
      </con-mod>
      <con-mod ref="fia-psk-ext-3">
        This SFR relates to use of pre-shared keys, which is behavior that only
        applies to the establishment of IPsec connections.
      </con-mod>
      <con-mod ref="fia-psk-ext-4">
        This SFR relates to use of pre-shared keys, which is behavior that only
        applies to the establishment of IPsec connections.
      </con-mod>
      <con-mod ref="fia-psk-ext-5">
        This SFR relates to use of pre-shared keys, which is behavior that only
        applies to the establishment of IPsec connections.
      </con-mod>
    </base-pp>
    <!-- 5.4 MDM PP Security Functional Requirements Direction -->
    <base-pp id="bpp-mdm" name="Protection Profile for Mobile Device Management" product="Mobile Device Management" short="MDM" version="4.0">
      <git>
        <url>
          https://github.com/commoncriteria/mdm
        </url>
        <branch>
          v4.0
        </branch>
        <open>
          true
        </open>
      </git>
      <url>
        https://github.com/commoncriteria/mdm
      </url>
      <sec-func-req-dir>
        In a PP-Configuration that includes the MDM PP, the VPN client is expected to rely on some of the
      security functions implemented by the OS as a whole and evaluated against the Base-PP.
      In this case, the following sections describe any modifications that the ST author must make to the SFRs
      defined in the Base-PP in addition to what is mandated by section 5.5.
      </sec-func-req-dir>
      <!-- 5.4.1 Modified SFRs -->
      <modified-sfrs/>
      <con-toe>
        If this PP-Module is used to extend the MDM PP, the TOE type for the overall TOE is still a mobile device
		management solution. The TOE boundary is simply extended to include VPN client functionality that is
		included with the MDM software so that additional security functionality is claimed within the scope of
		the TOE.
      </con-toe>
      <con-sec-prob>
        The threats and assumptions defined by this PP-Module (see sections 3.1 and 3.2) supplement those
		defined in the MDM PP as follows:
      </con-sec-prob>
      <con-Obj>
        The security objectives defined by this PP-Module (see sections 4.1 and 4.2) supplement those defined
		in the MDM PP as follows:
      </con-Obj>
      <con-op-in/>
      <con-mod ref="T.UNAUTHORIZED_ACCESS">
        The threat of an attacker gaining access to a network interface or data
		that is transmitted over it is consistent with the T.NETWORK_ATTACK and
		T.NETWORK_EAVESDROP threats in the MDM PP.
      </con-mod>
      <con-mod ref="T.TSF_CONFIGURATION">
        The threat of a misconfigured VPN client is consistent with the
		T.NETWORK_ATTACK and T.NETWORK_EAVESDROP threats in the MDM
		PP because failure to mitigate against misconfiguration makes these
		threats more significant.
      </con-mod>
      <con-mod ref="T.USER_DATA_REUSE">
        Inadvertent disclosure of user data to an unauthorized recipient is
		consistent with the T.NETWORK_EAVESDROP threat in the MDM PP.
      </con-mod>
      <con-mod ref="T.TSF_FAILURE">
        A failure of TSF functionality could compromise the implementation of the
		IPsec channel, which would lead to an exploitation of the T.NETWORK_ATTACK threat.
      </con-mod>
      <con-mod ref="A.NO_TOE_BYPASS">
        The A.NO_TOE_BYPASS assumption assumes that the OE is configured in such a manner that the only network route
		to the protected network is through the TOE. This does not conflict with
		the MDM PP because the MDM PP makes no assumptions about the
		network architecture in which the TOE is deployed.
      </con-mod>
      <con-mod ref="A.PHYSICAL">
        The assumption that physical security is provided by the environment is
		not explicitly stated in the MDM PP but is consistent with the A.MDM_SERVER_PLATFORM assumption defined in the MDM PP, which
		expects the computing platform to be trusted.
      </con-mod>
      <con-mod ref="A.TRUSTED_CONFIG">
        The assumption that personnel responsible for the TOE’s configuration are
		trusted to follow the guidance is consistent with the A.PROPER_ADMIN
		defined in the MDM PP.
      </con-mod>
      <con-mod ref="OE.NO_TOE_BYPASS">
        This objective addresses behavior that is out of scope of the MDM PP
		and does not define an environment that an MDM TOE is incapable
		of existing in.
      </con-mod>
      <con-mod ref="OE.PHYSICAL">
        This is part of satisfying OE.IT_ENTERPRISE as defined in the MDM
		PP because provisioning of physical security is a reasonable
		expectation for an IT enterprise.
      </con-mod>
      <con-mod ref="OE.TRUSTED_CONFIG">
        The expectation of trusted configuration is consistent with
		OE.PROPER_USER and OE.PROPER_ADMIN in the MDM PP.
      </con-mod>
      <con-mod ref="dm-fcs-ckm-1">
        The ST author is instructed to make specific selections at minimum to
		address VPN client requirements; the SFR behavior itself is unmodified.
      </con-mod>
      <con-mod ref="dm-fcs-ckm-2">
        The ST author is instructed to make specific selections at minimum to
		address VPN client requirements; the SFR behavior itself is unmodified.
      </con-mod>
      <con-mod ref="dm-fcs-cop-1-1">
        The ST author is instructed to make specific selections at minimum to
		address VPN client requirements; the SFR behavior itself is unmodified.
      </con-mod>
      <con-mod ref="dm-fia-x509-ext-2">
        The ST author is instructed to make specific selections at minimum to
		address VPN client requirements; the SFR behavior itself is unmodified.
      </con-mod>
      <con-mod ref="dm-fpt-itt-1-1">
        When this SFR relates to the PP-Module’s functionality, the ST author is
		instructed to make specific selections to implement this behavior using the
		VPN client. This is done by forcing the ST author to make specific selections
		that are already present in the MDM PP definition of the SFR; no new
		behavior is introduced by this.
      </con-mod>
      <con-mod ref="dm-ftp-itc-1-1">
        When this SFR relates to the PP-Module’s functionality, the ST author is
		instructed to make specific selections to implement this behavior using the
		VPN client at minimum. This is done by forcing the ST author to make a
		specific selection that is already present in the MDM PP definition of the SFR
		and by removing a selection option; no new behavior is introduced by this.
      </con-mod>
      <con-mod ref="dm-ftp-trp-1-1">
        When this SFR relates to the PP-Module’s functionality, the ST author is
		instructed to make specific selections to implement this behavior using the
		VPN client at minimum. This is done by forcing the ST author to make a
		specific selection that is already present in the MDM PP definition of the SFR
		and by removing a selection option; no new behavior is introduced by this.
      </con-mod>
      <con-mod ref="fcs-ckm-1-vpn">
        This SFR defines the method of key generation for IKE peer authentication,
		which is a function that does not interfere with the functionality defined in
		the MDM PP.
      </con-mod>
      <con-mod ref="fcs-ipsec-ext-1">
        This SFR defines the VPN client’s IPsec implementation, which is added
		functionality that does not interfere with the MDM functions.
      </con-mod>
      <con-mod ref="fdp-rip-2">
        The requirement to protect against reuse of residual data is a property of
		the VPN client behavior and does not impact the MDM functionality.
      </con-mod>
      <con-mod ref="fmt-smf-1-vpn">
        The ability to configure the VPN client behavior does not affect whether the
		MDM as a whole can perform its security functions.
      </con-mod>
      <con-mod ref="fpt-tst-ext-1-vpn">
        Self-testing of the VPN client functionality does not impact the ability of the
		MDM to perform its security functions.
      </con-mod>
      <con-mod ref="fau-gen-1-vpn">
        Audit data generated by the VPN client do not interfere with MDM
		functionality. The possibility of the MDM as a whole generating audit
		records is consistent with the MDM PP, which already contains FAU_GEN.1.
      </con-mod>
      <con-mod ref="fau-sel-1-vpn">
        The ability to suppress the generation of certain VPN client audit data
		does not interfere with MDM functionality. The MDM PP already contains FAU_SEL.1 as an optional SFR which
		means that this functionality does not conflict with the expected behavior of an MDM.
      </con-mod>
      <con-mod ref="fdp-vpn-ext-1">
        The ability of the VPN client to prevent split tunneling of IPsec traffic
		requires it to have hooks into lower-level OS behavior, but there are no
		requirements in the MDM PP that would prevent this functionality from
		being supported.
      </con-mod>
      <con-mod ref="fia-bma-ext-1">
        This SFR relates to biometric authentication, which does not conflict with the MDM PP
	      because it may be a function offered by the 
        part of the TOE described by the MDM PP.
      </con-mod>
      <con-mod ref="fpf-mfa-ext-1">
        This SFR relates specifically to the handling of traffic that is used for the
        establishment of IPsec connections.
      </con-mod>
      <con-mod ref="fcs-eap-ext-1">
        This SFR defines an additional cryptographic protocol that is beyond the scope of those defined
	      in the MDM PP but does not prevent any MDM PP functionality
        from being implemented.
      </con-mod>
      <con-mod ref="fia-psk-ext-1">
        This SFR defines the use of pre-shared keys, which is behavior that only
        relates to the establishment of IPsec connections.
      </con-mod>
      <con-mod ref="fia-psk-ext-2">
        This SFR relates to use of pre-shared keys, which is behavior that only
        applies to the establishment of IPsec connections.
      </con-mod>
      <con-mod ref="fia-psk-ext-3">
        This SFR relates to use of pre-shared keys, which is behavior that only
        applies to the establishment of IPsec connections.
      </con-mod>
      <con-mod ref="fia-psk-ext-4">
        This SFR relates to use of pre-shared keys, which is behavior that only
        applies to the establishment of IPsec connections.
      </con-mod>
      <con-mod ref="fia-psk-ext-5">
        This SFR relates to use of pre-shared keys, which is behavior that only
        applies to the establishment of IPsec connections.
      </con-mod>
    </base-pp>
    <!-- 5.5 TOE Security Functional Requirements -->
    <man-sfrs/>
    <opt-sfrs/>
    <sel-sfrs/>
    <obj-sfrs/>
    <impl-dep-sfrs/>
  </sec:Security_Requirements>
  <appendix title="Implicitly Satisfied Requirements" id="satisfiedreqs">
    <!--   Boilerplate goes here   -->
    <!--  	This appendix lists requirements that should be considered satisfied by products successfully evaluated
	against this PP. However, these requirements are not featured explicitly as SFRs and should not be
	included in the ST. They are not included as standalone SFRs because it would increase the time, cost,
	and complexity of evaluation. This approach is permitted by [CC] Part 1, 8.2 Dependencies between
	components.<h:br/><h:br/>
	This information benefits systems engineering activities which call for inclusion of particular security
	controls. Evaluation against the PP-Module provides evidence that these controls are present and have
	been evaluated.
  -->
    <h:b>
      <ctr ctr-type="Table" pre="Table " id="imp-sat-reqs-table">
        : Implicitly Satisfied Requirements
      </ctr>
    </h:b>
    <h:table>
      <h:tr class="header">
        <h:td>
          Requirement
        </h:td>
        <h:td>
          Rationale for Satisfaction
        </h:td>
      </h:tr>
      <h:tr>
        <h:td>
          <h:b>
            FCS_CKM.2 – Cryptographic Key Distribution, or FCS_COP.1 – Cryptographic Operation
          </h:b>
        </h:td>
        <h:td>
          FCS_CKM.1 (which is defined in this PP-Module as FCS_CKM.1/VPN) requires one of FCS_CKM.2 or FCS_COP.1 to be claimed so that the generated keys can serve some security-relevant purpose. Each of the Base-PPs for this PP-Module define an iteration of FCS_COP.1 for symmetric cryptography that is expected to use the IKE keys generated by FCS_CKM.1/VPN. Therefore, this dependency is satisfied through requirements defined in the Base-PPs.
        </h:td>
      </h:tr>
      <h:tr>
        <h:td>
          <h:b>
            FCS_COP.1 – Cryptographic Operation
          </h:b>
        </h:td>
        <h:td>
          FCS_IPSEC_EXT.1 has a dependency on FCS_COP.1 because of the cryptographic operations that are needed in support of implementing the IPsec protocol. FCS_COP.1 is not defined in this PP-Module because each of the supported Base-PPs define iterations of FCS_COP.1 that support the functions that are relevant to IPsec.
        </h:td>
      </h:tr>
      <h:tr>
        <h:td>
          <h:b>
            FMT_MTD.1 – Management of TSF Data
          </h:b>
        </h:td>
        <h:td>
          FAU_SEL.1/VPN has a dependency on FMT_MTD.1 to enforce appropriate access controls on the audit configuration, as this is TSF data. This SFR is not explicitly defined in any of the supported Base-PPs but the dependency is implicitly addressed by each Base-PP in the following manner:
          <h:ul>
            <h:li>
              GPOS PP: The GPOS PP implicitly defines the existence of ‘user’ and ‘administrator’ roles in the extended SFRs FMT_MOF_EXT.1 and FMT_SMF_EXT.1. A TOE that conforms to this Base-PP can associate the ability to perform the functionality defined by FAU_SEL.1/VPN to one or both of these roles.
            </h:li>
            <h:li>
              MDF PP: The MDF PP implicitly defines the existence of ‘user,’ ‘administrator,’ and ‘MDM’ roles in the SFRs FMT_MOF_EXT.1 and FMT_SMF.1. A TOE that conforms to this Base-PP can associate the ability to perform the functionality defined by FAU_SEL.1/VPN to one or more of these roles.
            </h:li>
            <h:li>
              App PP: The App PP does not define the existence of a separately authenticated management interface; instead, the App PP assumes that authentication to the underlying OS platform is sufficient authorization to access the application’s management functionality.
            </h:li>
            <h:li>
              MDM PP: The MDM PP defines the existence of management roles in FMT_SMR.1/SECMAN_ROLES. A TOE that conforms to this Base-PP can associate the ability to perform the functionality defined by FAU_SEL.1/VPN to one or more of the roles defined here.
            </h:li>
          </h:ul>
        </h:td>
      </h:tr>
      <h:tr>
        <h:td>
          <h:b>
            FPT_STM.1 – Reliable Time Stamps
          </h:b>
        </h:td>
        <h:td>
          FAU_GEN.1/VPN has a dependency on FPT_STM.1 because audit data is required to have timestamps that are based on reliable clock data. All of the supported Base-PPs either define this requirement explicitly or provide rationale for why the reader should expect that a reliable clock service should be present. Depending on the claimed Base-PP, the dependency is satisfied in the following manner:
          <h:ul>
            <h:li>
              GPOS PP: The GPOS PP states that FPT_STM.1 is implicitly satisfied by the requirements of FAU_GEN.1 since that requirement could not be satisfied if no clock service was present. Additionally, a clock service is reasonably assumed to be provided by a general-purpose OS.
            </h:li>
            <h:li>
              MDF PP: The MDF PP explicitly defines FPT_STM.1.
            </h:li>
            <h:li>
              App PP: The App PP assumption A.PLATFORM assumes that the general-purpose computing platform on which the TOE is installed is ‘a trustworthy computing platform.’ System time data is not explicitly mentioned but a clock service is reasonably assumed to be provided by a general-purpose computer.
            </h:li>
            <h:li>
              MDM PP: The MDM PP assumption A.MDM_SERVER_PLATFORM assumes that the platform on which the TOE is installed will provide reliable time services.
            </h:li>
          </h:ul>
        </h:td>
      </h:tr>
      <h:tr>
        <h:td>
          <h:b>
            FPT_STM.1 – Reliable Time Stamps
          </h:b>
        </h:td>
        <h:td>
          FAU_GEN.1 has a dependency on FPT_STM.1. While not explicitly stated in the PP, it is assumed that this will be provided by the underlying hardware platform on which the TOE is installed. This is because the TOE is installed as a software or firmware product that runs on general-purpose computing hardware so a hardware clock is assumed to be available.
        </h:td>
      </h:tr>
    </h:table>
  </appendix>
  <appendix title="Entropy Documentation and Assessment" id="app-ent">
    The TOE does not require any additional supplementary information to describe its entropy sources beyond the requirements outlined in the Base-PPs. As with other Base-PP requirements, the only additional requirement is that the entropy documentation also applies to the specific VPN client capabilities of the TOE in addition to the functionality required by the claimed Base-PP.
  </appendix>
  <bibliography>
    <cc-entry/>
    <entry id="bibGPOS">
      <tag>
        GPOS PP
      </tag>
      <description>
        <h:a href="https://www.niap-ccevs.org/static_html/protection-profile/469/OS%204.3%20PP/index.html">
          Protection Profile for General Purpose Operating Systems, Version 4.3
        </h:a>
        , September 27, 2022
      </description>
    </entry>
    <entry id="bibMDF">
      <tag>
        MDF PP
      </tag>
      <description>
        <h:a href="https://www.niap-ccevs.org/static_html/protection-profile/468/MDF%203.3%20PP/index.html">
          Protection Profile for Mobile Device Fundamentals, Version 3.3
        </h:a>
        , Version 3.3, September 12, 2022
      </description>
    </entry>
    <entry id="bibMDM">
      <tag>
        MDM PP
      </tag>
      <description>
        <h:a href="https://www.niap-ccevs.org/static_html/protection-profile/428/-428-/index.html">
          Protection Profile for Mobile Device Management, Version 4.0, April 25, 2019
        </h:a>
      </description>
    </entry>
    <entry id="bibAppPP">
      <tag>
        App PP
      </tag>
      <description>
        <h:a href="https://www.niap-ccevs.org/protectionprofiles/516">
          Protection Profile for Application Software, Version 2.0, June 16, 2025
        </h:a>
      </description>
    </entry>
  </bibliography>
</Module>
